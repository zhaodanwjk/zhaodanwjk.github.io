<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>记删除S3上备份的脚本</title>
    <url>/2018/06/21/10_rm%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight perl"><table><tr><td class="code"><pre><code class="hljs perl">m_region=<span class="hljs-string">'cn-north-1'</span><br>base_url=<span class="hljs-string">'backup/rdb/'</span><br>ndate=date +%Y%m%d --date <span class="hljs-string">"-10 days"</span><br><br><span class="hljs-keyword">for</span> each_bak_dir in aws --region $&#123;m_region&#125; s3 ls s3:<span class="hljs-regexp">//</span>$&#123;base_url&#125; |<span class="hljs-keyword">grep</span> PRE |<span class="hljs-keyword">grep</span> -v current |awk <span class="hljs-string">'&#123;print $2&#125;'</span> |sed <span class="hljs-string">'s#/##g'</span>;<span class="hljs-keyword">do</span><br>echo $&#123;each_bak_dir&#125;<br>each_bak_dir_num=echo $&#123;each_bak_dir&#125; | sed <span class="hljs-string">'s/-//g'</span><br><span class="hljs-keyword">if</span> [ $&#123;each_bak_dir_num&#125; -<span class="hljs-keyword">lt</span> $&#123;ndate&#125; ];then<br><span class="hljs-comment">#echo $&#123;each_bak_dir&#125;</span><br><span class="hljs-keyword">for</span> del_time in seq -w <span class="hljs-number">00</span> <span class="hljs-number">23</span> |egrep -v <span class="hljs-string">"10|12"</span>;<span class="hljs-keyword">do</span><br><span class="hljs-comment">#echo $&#123;each_bak_dir&#125;/$&#123;del_time&#125;/</span><br><span class="hljs-comment">#aws --region $&#123;m_region&#125; s3 rm s3://$&#123;base_url&#125;2017-08-15/00/ --recursive</span><br>aws --region $&#123;m_region&#125; s3 rm s3:<span class="hljs-regexp">//</span>$&#123;base_url&#125;$&#123;each_bak_dir&#125;/$&#123;del_time&#125;/ --recursive<br>done<br>fi<br>done<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>aws cli</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL授权 &amp; MySQL备份</title>
    <url>/2018/06/22/15_mysql/</url>
    <content><![CDATA[<p>记大数据MySQL备份</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[root@ip data]# cat mysql_back.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-attribute">user</span>=user<br><span class="hljs-attribute">pass</span>=pass<br><span class="hljs-attribute">table1</span>=table1<br><span class="hljs-attribute">table2</span>=table2<br><span class="hljs-attribute">date</span>=`date +%Y%m%d --date <span class="hljs-string">"-1 days"</span>`<br><br>mysqldump  -u<span class="hljs-variable">$user</span> -p<span class="hljs-variable">$pass</span> <span class="hljs-attribute">--default-character-set</span>=utf8 <span class="hljs-attribute">--comments</span>=<span class="hljs-literal">FALSE</span> --tables <span class="hljs-attribute">--no-create-info</span>=<span class="hljs-literal">FALSE</span> <span class="hljs-attribute">--add-drop-table</span>=<span class="hljs-literal">TRUE</span> <span class="hljs-attribute">--no-data</span>=<span class="hljs-literal">FALSE</span> <span class="hljs-variable">$table1</span> | sed <span class="hljs-string">'s/AUTO_INCREMENT=[0-9]*\s//g'</span> &gt;/data/backup_CN/<span class="hljs-variable">$table1</span><span class="hljs-variable">$date</span>.sql<br>mysqldump  -u<span class="hljs-variable">$user</span> -p<span class="hljs-variable">$pass</span> <span class="hljs-attribute">--default-character-set</span>=utf8 <span class="hljs-attribute">--comments</span>=<span class="hljs-literal">FALSE</span> --tables <span class="hljs-attribute">--no-create-info</span>=<span class="hljs-literal">FALSE</span> <span class="hljs-attribute">--add-drop-table</span>=<span class="hljs-literal">TRUE</span> <span class="hljs-attribute">--no-data</span>=<span class="hljs-literal">FALSE</span> <span class="hljs-variable">$table2</span> | sed <span class="hljs-string">'s/AUTO_INCREMENT=[0-9]*\s//g'</span> &gt;/data/backup_JP/<span class="hljs-variable">$table2</span><span class="hljs-variable">$date</span>.sql<br><span class="hljs-builtin-name">find</span> backup_CN/ -name <span class="hljs-string">"*.sql"</span> -type f -mtime +5 -exec rm &#123;&#125; \; &gt; /dev/<span class="hljs-literal">null</span> 2&gt;&amp;1<br><span class="hljs-builtin-name">find</span> backup_JP/ -name <span class="hljs-string">"*.sql"</span> -type f -mtime +5 -exec rm &#123;&#125; \; &gt; /dev/<span class="hljs-literal">null</span> 2&gt;&amp;1<br></code></pre></td></tr></table></figure>




<p>mysql5.7 改root密码授权</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"># safe_mysqld <span class="hljs-comment">--skip-grant-tables --user=root &amp;</span><br>mysql&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">'新密码'</span>) <span class="hljs-keyword">where</span> <span class="hljs-keyword">User</span>=<span class="hljs-string">'root'</span>;<br>mysql&gt; flush <span class="hljs-keyword">privileges</span>;<br></code></pre></td></tr></table></figure>

<p>创建一个用户叫test1 并授权</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><code class="hljs n1ql">mysql&gt; grant <span class="hljs-keyword">select</span>,<span class="hljs-keyword">insert</span>,<span class="hljs-keyword">update</span>,<span class="hljs-keyword">delete</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> test1@”%” Identified <span class="hljs-keyword">by</span> “abc”;<br>mysql&gt; FLUSH PRIVILEGES;<br><br>查看授权表<br>mysql&gt; <span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br><br>取消授权<br>mysql&gt; revoke all privileges on *.* from test1@"%”;<br><br>删除用户<br>mysql&gt; use mysql<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br>mysql&gt; <span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> - <span class="hljs-string">"test1"</span> <span class="hljs-keyword">and</span> host = <span class="hljs-string">"public ip"</span>;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> - <span class="hljs-string">"test1"</span> <span class="hljs-keyword">and</span> host = <span class="hljs-string">"private ip"</span>;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span> - <span class="hljs-string">"test1"</span> <span class="hljs-keyword">and</span> host = <span class="hljs-string">"localhost"</span>;<br>Query OK, 0 rows affected, 3 warnings (0.00 sec)<br><br>mysql&gt; <span class="hljs-keyword">drop</span> <span class="hljs-keyword">user</span> test1@<span class="hljs-string">'%'</span>;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt;  flush privileges;<br>Query OK, 0 rows affected (0.00 sec<br></code></pre></td></tr></table></figure>


<p>记一次mysql授权，允许远程连接</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> *.*  <span class="hljs-keyword">to</span> <span class="hljs-string">'root'</span>@localhost identified <span class="hljs-keyword">by</span> <span class="hljs-string">'123456'</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)<br><br>mysql&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">password</span>(<span class="hljs-string">'123456'</span>) <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">'root'</span>;<br>Query OK, <span class="hljs-number">3</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)<br><span class="hljs-keyword">Rows</span> matched: <span class="hljs-number">4</span>  Changed: <span class="hljs-number">3</span>  Warnings: <span class="hljs-number">0</span><br><br>mysql&gt; flush <span class="hljs-keyword">privileges</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; \q<br>Bye<br><br>[root@ip ops_user]# /etc/init.d/mysqld <span class="hljs-keyword">restart</span><br>Stopping mysqld:                                           [  OK  ]<br>Starting mysqld:                                           [  OK  ]<br><br>[root@ip ops_user]# mysql -uroot -p123456<br>Welcome <span class="hljs-keyword">to</span> the MySQL monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br><br>mysql&gt; <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> root@"%" IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">'123456'</span>  <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>#####<br><br>远程连接mysql<br><br># /usr/<span class="hljs-keyword">local</span>/mysql/bin/mysql  -h【IP】 -uroot  -p123456<br><br>#####################<br>实现远程连接(授权法)<br>mysql&gt; use mysql;<br>mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span>  <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> root@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> "password”;<br>mysql&gt; flush privileges;<br>mysql&gt; select host,user,password from user;<br><br>实现远程连接（改表法）<br>mysql&gt; use mysql;<br>mysql&gt; update user set host = '%' where user = 'root';<br></code></pre></td></tr></table></figure>

<p>mysql备份单独一张表</p>
<figure class="highlight oxygene"><table><tr><td class="code"><pre><code class="hljs oxygene"># mysqldump  -uroot -p123456 --<span class="hljs-keyword">default</span>-character-<span class="hljs-keyword">set</span>=utf8 --comments=<span class="hljs-keyword">FALSE</span> --tables --no-<span class="hljs-keyword">create</span>-info=<span class="hljs-keyword">FALSE</span> --<span class="hljs-keyword">add</span>-drop-table=<span class="hljs-keyword">TRUE</span> --no-data=<span class="hljs-keyword">FALSE</span> test | sed <span class="hljs-string">'s/AUTO_INCREMENT=[0-9]*\s//g'</span> &gt;test_20180626.sql<br></code></pre></td></tr></table></figure>
<p>备份导入MySQL</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">mysql&gt;</span><span class="bash"> use <span class="hljs-built_in">test</span>;</span><br><span class="hljs-meta">mysql&gt;</span><span class="bash"> <span class="hljs-built_in">source</span> /home/<span class="hljs-built_in">test</span>/0101_0630_up_subjects.sql</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>脚本</tag>
        <tag>数据库</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>修改服务器时间脚本</title>
    <url>/2018/06/22/13_%E4%BF%AE%E6%94%B9%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<p>因为要查线上的BUG，需要将服务器时间调回到以前的时间或者是未来的时间，但是因为AWS的Dynamodb不支持修改服务器时间，修改后游戏进程报错。但还是记一下当时写的修改时间脚本</p>
<p>clock –w</p>
<p>date -s 07/13/2011</p>
<p>date -s “12:12:23 2006-10-10″ //这样可以设置全部时间</p>
<p>clock –systohc        同步到硬件时钟上</p>
<p>UTC：协调世界时，又称世界标准时间，简称UTC，从英文国际时间/法文协调时间”Universal Time/Temps Cordonn&amp;ea<a href="http://www.linuxso.com/command/cut.html" target="_blank" rel="noopener">cut</a>e;”而来。中国大陆、香港、澳门、台湾、蒙古国、新加坡、马来西亚、菲律宾、澳洲西部的时间与UTC的时差均为+8，也就是UTC+8。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-keyword">if</span> [ ! -n <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span> ] ;<span class="hljs-keyword">then</span><br><br>    <span class="hljs-built_in">echo</span> usage [date.sh](http://date.sh) HHMMSS <span class="hljs-keyword">for</span> example date 01:01:01<br><br><span class="hljs-keyword">else</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span><br><br>    date -s <span class="hljs-variable">$1</span><br><br>    hwclock -w<br><br>    hwclock -r<br><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment">###当前时间</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"当前时间为："</span><br><br>date<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">"---------------------------------------------------------------------"</span><br><br><span class="hljs-comment">###修改时间</span><br><br><span class="hljs-keyword">if</span> [ ! -n <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span> ];<span class="hljs-keyword">then</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"修改时间请按以下格式输入 时:分:秒 年-月-日</span><br><span class="hljs-string"></span><br><span class="hljs-string">usage data.sh H:M:S Y-M-D  for example 12:30:50 2018-03-28"</span><br><br><span class="hljs-keyword">else</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span><br>    date -s <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span><br> <span class="hljs-comment"># hwclock -w</span><br> <span class="hljs-comment"># hwclock -r</span><br><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>

<p>实例：设置时间为2008年8月8号12:00</p>
<h6 id="date-s-“2008-08-08-12-00-00”"><a href="#date-s-“2008-08-08-12-00-00”" class="headerlink" title="date -s “2008-08-08 12:00:00”"></a>date -s “2008-08-08 12:00:00”</h6><p>修改完后,记得执行clock -w，把系统时间写入CMOS</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>脚本</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次线上log去重脚本</title>
    <url>/2018/06/22/16_log%E5%8E%BB%E9%87%8D/</url>
    <content><![CDATA[<figure class="highlight coq"><table><tr><td class="code"><pre><code class="hljs coq"># cat charge |<span class="hljs-type">wc</span> -l<br># cat charge |<span class="hljs-type">sort</span>|<span class="hljs-type">uniq</span> |<span class="hljs-type">wc</span> -l<br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!bin/bash</span><br>ls -l charge |awk <span class="hljs-string">'&#123;print $9&#125;'</span> &gt; all_list.txt<br>all_charge_log=<span class="hljs-string">'./all_list.txt'</span><br>rm -rf replace/*<br><br><span class="hljs-keyword">for</span> each_charge <span class="hljs-keyword">in</span> cat <span class="hljs-variable">$&#123;all_charge_log&#125;</span>;<span class="hljs-keyword">do</span><br>cat <span class="hljs-variable">$&#123;each_charge&#125;</span> |sort|uniq &gt; ./replace/<span class="hljs-variable">$&#123;each_charge&#125;</span><br><span class="hljs-keyword">done</span><br><br>chown -R jenkins:jenkins replace/<br><br>/usr/bin/zip -r test.zip ./replace/charge.log<br><br><br>2&gt;&amp;1 是将标准出错重定向到标准输出，这里的标准输出已经重定向到了out.file文件，即将标准出错也输出到out.file文件中<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>脚本</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>ping原理</title>
    <url>/2018/06/22/12_ping/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/zhuying_linux/article/details/6770730" target="_blank" rel="noopener">https://blog.csdn.net/zhuying_linux/article/details/6770730</a></p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">ping 指的是端对端连通，通常用 来作为可用性的检查， 但是某些病毒木马会强行大量远程执行<span class="hljs-built_in"> ping </span>命令抢占你的网络资 源，导致系统变慢，网速变慢。严禁<span class="hljs-built_in"> ping </span>入侵作为大多数防火墙的一个基本功能提供给用 户进行选择。<br><br>1.在同一网段内<br><br>首先，Ping 命令会构建一个 固定格式的 ICMP 请求数据包， 然后由 ICMP 协议将这个数据包连同地址“192.168.0.5”一起 交给IP 层协议（和 ICMP 一样，实际上是一组后台运行的进程），IP 层协议将以地址 “192.168.0.5”作为目的地址，本机<span class="hljs-built_in"> IP </span>地址作为源地址，加上一些其他的控制信息，构建一 个<span class="hljs-built_in"> IP </span>数据包，并想办法得到 192.168.0.5 的MAC 地址（物理地址，这是数据链路层协议构 建数据链路层的传输单元——帧所必需的），以便交给数据链路层构建一个数据帧。<br><br>IP 层协议通过机器 B 的<span class="hljs-built_in"> IP </span>地址和自己的子网掩码，发现它跟自己属同一网络，就 直接在本网络内查找这台机器的 MAC<br><br>如果以前两机有过通信，在 A 机的 ARP 缓存表应该 有 B 机<span class="hljs-built_in"> IP </span>与其 MAC 的映射关系，如果没有，就发一个 ARP 请求广播，得到 B 机的 MAC, 一并交给数据链路层。<br><br>后者构建一个数据帧，目的地址是<span class="hljs-built_in"> IP </span>层传过来的物理地址，源地址 则是本机的物理地址，还要附加上一些控制信息，依据以太网的介质访问规则，将它们传送 出去。 主机 B 收到这个数据帧后，先检查它的目的地址，并和本机的物理地址对比，如符合， 则接收；否则丢弃。接收后检查该数据帧，将<span class="hljs-built_in"> IP </span>数据包从帧中提取出来，交给本机的<span class="hljs-built_in"> IP </span>层 协议。同样，IP 层检查后，将有用的信息提取后交给 ICMP 协议，后者处理后，马上构建 一个 ICMP 应答包，发送给主机 A，其过程和主机 A 发送 ICMP 请求包到主机 B 一模一样。<br><br>2.不在同一网段内<br><br>在主机 A 上运行“Ping 192.168.1.4”后，开始跟上面一样，到了怎样得到 MAC 地址时，IP 协议通过计算发现 D 机与自己不在同一网段内，就直接将交由路由处理，也就是将路由的 MAC 取过来，至于怎样得到路由的 MAC，跟上面一样，先在 ARP 缓存表找，找不到就广 播吧。路由得到这个数据帧后，再跟主机 D 进行联系，如果找不到，就向主机 A 返回一个 超时的信息。<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ping</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins插件解决 Additional classpath</title>
    <url>/2018/06/21/11_jenkinspath/</url>
    <content><![CDATA[<ol>
<li>安装 script-security 插件</li>
<li>重启jenkins使插件生效</li>
<li>到全局安全配置里更改<br><a href="https://postimg.cc/8jyWXtX7" target="_blank" rel="noopener"><img src="https://i.postimg.cc/YC739P1z/jenkinspath.png" alt="jenkinspath.png"></a></li>
<li>重启jenkins生效</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次内网测试服 td-agent 升级</title>
    <url>/2018/06/22/19_tdagent%E5%8D%87%E7%BA%A7/</url>
    <content><![CDATA[<figure class="highlight coffeescript"><table><tr><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-comment"># curl -L [https://toolbelt.treasuredata.com/sh/install-amazon1-td-agent3.sh](https://toolbelt.treasuredata.com/sh/install-amazon1-td-agent3.sh) | sh</span><br><br><span class="hljs-comment"># cd /etc/td-agent/</span><br><br>[root@ip td-agent]<span class="hljs-comment"># cat td-agent.conf</span><br><br>@include <span class="hljs-regexp">/etc/td-agent/conf.d/</span>*.conf<br><br>/etc/td-agent/conf.d<br><br>[root@ip conf.d]<span class="hljs-comment"># cat td-gamex.conf</span><br><br>&lt;source&gt;<br><br>  @type forward<br><br>  port <span class="hljs-number">24224</span><br><br>&lt;/source&gt;<br><br><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><br><br>&lt;source&gt;<br><br>  @type tail<br><br>  format json<br><br>  time_key time<br><br>  time_format %N<br><br>  pos_file /var/log/td-agent/a.log.pos<br><br>  path /opt/supervisor/log/log*.%d.%m.%Y.log<br><br>  tag log<span class="hljs-number">.106</span><br><br>&lt;/source&gt;<br><br><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><br><br>&lt;match debug.**&gt;<br><br>  @type stdout<br><br>&lt;/match&gt;<br><br><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><span class="hljs-comment">######</span><br><br>&lt;match log.**&gt;<br><br>  @type forward <span class="hljs-comment"># forward模式，转发给其他服务器处理</span><br><br>  send_timeout <span class="hljs-number">60</span>s<br><br>  recover_wait <span class="hljs-number">10</span>s<br><br>  <span class="hljs-comment">#transport</span><br><br>  phi_threshold <span class="hljs-number">16</span><br><br>  hard_timeout <span class="hljs-number">60</span>s<br><br>  &lt;server&gt;<br><br>     name log.shard<br><br>     host 【IP】<br><br>     port <span class="hljs-number">24224</span><br><br>     weight <span class="hljs-number">1</span><br><br>  &lt;/server&gt;<br><br>  &lt;secondary&gt;<br><br>     @type file<br><br>     path /var/log/td-agent/log-forward-failed<br><br>  &lt;/secondary&gt;<br><br> &lt;/match&gt;<br></code></pre></td></tr></table></figure>

<p>例如添加一个 client log</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><code class="hljs clean">[root@ip conf.d]# cat client.conf<br><br>&lt;source&gt;<br><br>  @type tail<br><br>  format json<br><br>  time_key time<br><br>  time_format %N<br><br>  pos_file /var/log/td-agent/client_150.log.pos<br><br>  path /opt/supervisor/log/client*.%d.%m.%Y.log<br><br>  tag client<span class="hljs-number">.150</span><br><br>&lt;/source&gt;<br><br>##########################################################################################<br><br>&lt;match debug.**&gt;<br><br>  @type stdout<br><br>&lt;/match&gt;<br><br>##########################################################################################<br><br>&lt;match client_log.**&gt;<br><br>  @type forward # forward模式，转发给其他服务器处理<br><br>  send_timeout <span class="hljs-number">60</span>s<br><br>  recover_wait <span class="hljs-number">10</span>s<br><br>  #transport<br><br>  phi_threshold <span class="hljs-number">16</span><br><br>  hard_timeout <span class="hljs-number">60</span>s<br><br>  &lt;server&gt;<br><br>     name client_log<br><br>     host 【IP】<br><br>     port <span class="hljs-number">24224</span><br><br>     weight <span class="hljs-number">1</span><br><br>  &lt;/server&gt;<br><br>  &lt;secondary&gt;<br><br>     @type file<br><br>     path /var/log/td-agent/logics-forward-failed<br><br>  &lt;/secondary&gt;<br><br>&lt;/match&gt;<br></code></pre></td></tr></table></figure>


<p>中转机器上添加配置</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><code class="hljs clean">[root@ip conf.d]# cat td-client.conf<br><br>&lt;match debug.**&gt;<br><br>  @type stdout<br><br>&lt;/match&gt;<br><br>##################################################################################<br><br>&lt;match client_log.**&gt;<br><br>  @type copy<br><br>  &lt;store&gt;<br><br>    @type elasticsearch_dynamic<br><br>    host  【IP】<br><br>    port <span class="hljs-number">9200</span><br><br>    request_timeout <span class="hljs-number">15</span>s #defaults to <span class="hljs-number">5</span>s<br><br>    reload_connections false<br><br>    reload_on_failure true # defaults to false<br><br>    logstash_format true<br><br>    logstash_prefix client_logiclog<br><br>    logstash_dateformat %Y.%m.%d<br><br>    time_key time<br><br>    &lt;buffer&gt;<br><br>      @type file<br><br>      path /var/log/td-agent/buffer/td-client_log-buffer<br><br>      chunk_limit_size <span class="hljs-number">512</span>MB #Default: <span class="hljs-number">8</span>MB (memory) / <span class="hljs-number">256</span>MB (file)<br><br>      total_limit_size <span class="hljs-number">32</span>GB #Default: <span class="hljs-number">512</span>MB (memory) / <span class="hljs-number">64</span>GB (file)<br><br>      chunk_full_threshold <span class="hljs-number">0.9</span> #output plugin will flush the chunk when actual size reaches chunk_limit_size *<br>      chunk_full_threshold<br><br>      compress text #The option to specify compression <span class="hljs-keyword">of</span> each chunks, during events are buffered<br><br>      flush_mode default<br><br>      flush_interval <span class="hljs-number">15</span>s #Default: <span class="hljs-number">60</span>s<br><br>      flush_thread_count <span class="hljs-number">1</span> #Default: <span class="hljs-number">1</span> The number <span class="hljs-keyword">of</span> threads <span class="hljs-keyword">of</span> output plugins, which is used to write chunks <span class="hljs-keyword">in</span> parallel<br><br>      delayed_commit_timeout <span class="hljs-number">60</span> #The timeout seconds until output plugin decides that async write operation fails<br><br>      overflow_action throw_exception<br><br>      retry_timeout <span class="hljs-number">10</span>m<br><br>    &lt;/buffer&gt;<br><br>  &lt;/store&gt;<br><br>&lt;/match&gt;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS服务器线上扩展磁盘</title>
    <url>/2017/09/18/1_%E7%A3%81%E7%9B%98/</url>
    <content><![CDATA[<ol>
<li><p>选中要扩展实例，如图所示：<br><a href="https://postimg.cc/McrPR5z2" target="_blank" rel="noopener"><img src="https://i.postimg.cc/G2bZWgN2/1.png" alt="1.png"></a></p>
</li>
<li><p>选中实例根设备后，左键点击EBS ID，如图所示：<br><a href="https://postimg.cc/7GFKtLCK" target="_blank" rel="noopener"><img src="https://i.postimg.cc/ZnRXRBJz/2.png" alt="2.png"></a></p>
</li>
<li><p>点击右键选择修改卷，如图所示：<br><a href="https://postimg.cc/47781c3K" target="_blank" rel="noopener"><img src="https://i.postimg.cc/vBXpbLFv/3.png" alt="3.png"></a></p>
</li>
<li><p>将磁盘大小修改为所需要的大小，此处为400G，如图所示：<br><a href="https://postimg.cc/56qspbfm" target="_blank" rel="noopener"><img src="https://i.postimg.cc/MKgg6p4g/4.png" alt="4.png"></a></p>
</li>
<li><p>确认弹出的对话框，选择是，如图所示：<br><a href="https://postimg.cc/JGWTbGCn" target="_blank" rel="noopener"><img src="https://i.postimg.cc/yYDwCZfF/5.png" alt="5.png"></a></p>
</li>
<li><p>查看并关闭弹出对话框，如图所示：<br><a href="https://postimg.cc/302nsHmY" target="_blank" rel="noopener"><img src="https://i.postimg.cc/KjHwgGYk/6.png" alt="6.png"></a></p>
</li>
<li><p>当状态栏in-use加载为（100%）时，登陆实例终端进行命令操作，如图所示：<br><a href="https://postimg.cc/WtZWF0KC" target="_blank" rel="noopener"><img src="https://i.postimg.cc/05WL4fCk/7.png" alt="7.png"></a></p>
</li>
<li><p>lsblk     (查看挂载)<br>growpart /dev/xvda 1    （growpart命令后面“/dev/xvda”是设备文件名，“1”是分区号）<br>resize2fs /dev/xvda1     （重定义大小）</p>
</li>
</ol>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>磁盘</tag>
      </tags>
  </entry>
  <entry>
    <title>海外回传国内udp 协议</title>
    <url>/2018/06/22/17_%E6%B5%B7%E5%A4%96%E5%9B%9E%E4%BC%A0%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<p>tsunami connect 【IP】 set udpport 【PORT】 get 【x.zip】 quit</p>
<p><a href="https://github.com/cheetahmobile/tsunami-udp/wiki" target="_blank" rel="noopener">https://github.com/cheetahmobile/tsunami-udp/wiki</a></p>
<p><a href="https://github.com/cheetahmobile/tsunami-udp" target="_blank" rel="noopener">https://github.com/cheetahmobile/tsunami-udp</a></p>
<p>服务器端开启服务 tsunamid * 将当前目录下所有的文件进行服务器加载</p>
<p>tsunami connect 【IP】 set udpport 【PORT】【x.zip】quit</p>
<p>客户端下载 同时需要开启 【PORT1】 和 【PORT2】 端口，tcp 和 udp协议</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>在线发信号</title>
    <url>/2018/06/22/18_%E5%8F%91%E4%BF%A1%E5%8F%B7/</url>
    <content><![CDATA[<p>因为线上服务正在运行不能重启，但是程序需要更改log级别，这时需要发信号使之生效</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">在线发信号更改进程<span class="hljs-built_in">log</span>级别<br><br>SIGUSR2 进程 PID<br><br># kill -s SIGUSR2 <span class="hljs-number">25913</span><br><br>在线发信号杀掉进程<br><br># kill -s SIGINT <span class="hljs-number">24451</span><br><br><span class="hljs-keyword">ps</span> aux |<span class="hljs-keyword">grep</span> /<span class="hljs-keyword">opt</span>/supervisor/gamex |<span class="hljs-keyword">grep</span> -v <span class="hljs-keyword">grep</span> |awk <span class="hljs-string">'&#123;print $2&#125;'</span> |xargs sudo kill -s SIGINT<br></code></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>EFK</title>
    <url>/2018/07/12/21_EFK/</url>
    <content><![CDATA[<p>我们平时分析log直接在日志文件中 grep、awk 就可以获得自己想要的信息，此方法效率低下，生产中需要集中化的日志管理，所有服务器上的日志收集汇总<br>Elasticsearch<br>一个节点(node)就是一个Elasticsearch实例，一个集群(cluster)由一个或多个节点组成，它们具有相同的cluster.name，它们协同工作，分享数据和负载。当加入新的节点或者删除一个节点时，集群就会感知到并平衡数据。<br>集群中一个节点会被选举为主节点(master),它将临时管理集群级别的一些变更，例如新建或删除索引、增加或移除节点等。主节点不参与文档级别的变更或搜索，这意味着在流量增长的时候，该主节点不会成为集群的瓶颈。<br>做为用户，我们能够与集群中的任何节点通信，包括主节点。每一个节点都知道文档存在于哪个节点上，它们可以转发请求到相应的节点上。我们访问的节点负责收集各节点返回的数据，最后一起返回给客户端。这一切都由Elasticsearch处理。</p>
<p>一个完整的集中式日志系统，需要包含以下几个主要特点：<br>收集－能够采集多种来源的日志数据<br>传输－能够稳定的把日志数据传输到中央系统<br>存储－如何存储日志数据<br>分析－可以支持 UI 分析<br>警告－能够提供错误报告，监控机制</p>
<p>fluentd基于CRuby实现，并对性能表现关键的一些组件用C语言重新实现，整体性能不错。<br>fluentd支持所有主流日志类型，插件支持较多，性能表现较好<br>logstash支持所有主流日志类型，插件支持最丰富，可以灵活DIY，但性能较差，JVM容易导致内存使用量高。<br>Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能<br>Kibana 也是一个开源和免费的工具，Kibana可以为 td-agent和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># yum install java</span><br><span class="hljs-comment"># java -version</span><br><br>Node1<br><br><span class="hljs-comment"># wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.rpm</span><br><span class="hljs-comment"># vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="hljs-section">cluster.name: my-application</span><br><span class="hljs-section">node.name: node-1</span><br><span class="hljs-section">node.master: true</span><br><span class="hljs-section">network.host: 172.21.0.9</span><br><span class="hljs-section">http.port: 9200</span><br><br>Node2<br><span class="hljs-comment"># vim /etc/elasticsearch/elasticsearch.yml</span><br><span class="hljs-section">cluster.name: my-application</span><br><span class="hljs-section">node.name: node-2</span><br><span class="hljs-section">node.master: false</span><br><span class="hljs-section">network.host: 172.21.0.37</span><br><span class="hljs-section">http.port: 9200</span><br><span class="hljs-section">discovery.zen.ping.unicast.hosts: ["host1", "172.21.0.9”]</span><br><br><span class="hljs-comment"># /etc/init.d/elasticsearch start</span><br><span class="hljs-comment"># /etc/init.d/elasticsearch status</span><br><span class="hljs-comment"># curl http://172.21.0.9:9200/_cat/health</span><br><span class="hljs-comment"># curl http://172.21.0.9:9200/_cat/nodes</span><br><br><br>Fluentd (tdagent)<br><br><span class="hljs-comment"># wget http://packages.treasuredata.com.s3.amazonaws.com/3/redhat/7/x86_64/td-agent-3.2.0-0.el7.x86_64.rpm</span><br><span class="hljs-comment"># rpm -ivh td-agent-3.2.0-0.el7.x86_64.rpm  --force --nodeps</span><br><span class="hljs-comment"># yum install -y libcurl-devel</span><br><span class="hljs-comment"># /opt/td-agent/embedded/bin/fluent-gem install fluent-plugin-elasticsearch</span><br><br><span class="hljs-comment"># cd /etc/td-agent/</span><br><span class="hljs-comment"># cat td-agent.conf</span><br>&lt;source&gt;<br>  @type forward<br>  port 24224<br>&lt;/source&gt;<br><br><span class="hljs-comment">####################################</span><br>&lt;source&gt;<br>  @type tail<br>  path /var/log/httpd/access_log<br>  pos_file /var/log/td-agent/httpd-access.log.pos<br>  tag apache.access<br>  &lt;parse&gt;<br>    @type apache2<br>  &lt;/parse&gt;<br>&lt;/source&gt;<br><span class="hljs-comment">####################################</span><br>&lt;match debug.**&gt;<br>  @type stdout<br>&lt;/match&gt;<br><span class="hljs-comment">####################################</span><br><br>&lt;match *.**&gt;<br>  @type copy<br>  &lt;store&gt;<br>    @type elasticsearch<br>    host 172.21.0.9<br>    port 9200<br>    logstash_format true<br>    logstash_prefix fluentd-$&#123;tag&#125;<br>    logstash_dateformat %Y%m%d<br>    include_tag_key true<br>    type_name access_log<br>    tag_key @log_name<br>    flush_interval 1s<br>  &lt;/store&gt;<br>  &lt;store&gt;<br>    @type stdout<br>  &lt;/store&gt;<br>&lt;/match&gt;<br><br><span class="hljs-comment"># /etc/init.d/td-agent restart</span><br><span class="hljs-comment"># chmod 777 -R /var/log/httpd/</span><br><span class="hljs-comment"># tail -f /var/log/td-agent/td-agent.log</span><br><span class="hljs-comment"># curl 'http://172.21.0.9:9200/_cat/indices?v’</span><br><br>Kibana<br><br><span class="hljs-comment"># wget https://artifacts.elastic.co/downloads/kibana/kibana-6.3.1-x86_64.rpm</span><br><span class="hljs-comment"># rpm -ivh kibana-6.3.1-x86_64.rpm</span><br><br><span class="hljs-comment"># vim /etc/kibana/kibana.yml</span><br><span class="hljs-section">server.port: 5601</span><br><span class="hljs-section">server.host: “172.21.0.9"</span><br><span class="hljs-section">elasticsearch.url: "http://172.21.0.9:9200”</span><br><span class="hljs-section">kibana.index: ".kibana”</span><br><br><span class="hljs-comment"># /etc/init.d/kibana restart</span><br><span class="hljs-comment"># tail -f /var/log/kibana/kibana.stderr</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>记一个shell登录脚本</title>
    <url>/2018/07/23/22_shell%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<p>线上几百台服务器，为了方便管理，设置一台服务器为跳板机，以下是一个小的登录脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><br>domain=<span class="hljs-string">'www.baidu.net'</span><br><br>user=`whoami`<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;user&#125;</span> == user1 ];<span class="hljs-keyword">then</span><br><br>   passkey=<span class="hljs-string">'user1.pem'</span><br><br><span class="hljs-keyword">else</span><br><br>   user=user2<br><br>   passkey=<span class="hljs-string">'user2.pem'</span><br><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$#</span> == 1 ];<span class="hljs-keyword">then</span><br><br>    ssh -o StrictHostKeyChecking=no -i <span class="hljs-variable">$&#123;passkey&#125;</span>  <span class="hljs-variable">$&#123;user&#125;</span>@<span class="hljs-variable">$1</span>.<span class="hljs-variable">$&#123;domain&#125;</span><br><br><span class="hljs-keyword">else</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Usage 1.200/2.200/1.201/1.202/2.202"</span><br><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>ELK Sentinl报警</title>
    <url>/2018/08/23/23_ELKsentinl/</url>
    <content><![CDATA[<p>环境：<br>elasticsearch-6.3.1.rpm<br>kibana-6.2.2-x86_64.rpm             (kibana-6.3.1-x86_64.rpm安装sentinel失败)<br>td-agent-3.2.0-0.el7.x86_64.rpm</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#  /usr/share/kibana/bin/kibana-plugin install https://github.com/sirensolutions/sentinl/releases/download/tag-6.2.2/sentinl-v6.2.2.zip</span><br><br><span class="hljs-comment"># cat /etc/kibana/kibana.yml</span><br><span class="hljs-attr">sentinl:</span><br>  <span class="hljs-attr">settings:</span><br>    <span class="hljs-attr">email:</span><br>      <span class="hljs-attr">active:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">user:</span> <span class="hljs-string">zhaodan@XX.cn</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">********</span><br>      <span class="hljs-attr">host:</span> <span class="hljs-string">smtp.exmail.qq.com</span><br>      <span class="hljs-attr">ssl:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">timeout:</span> <span class="hljs-number">10000</span><br>    <span class="hljs-attr">report:</span><br>      <span class="hljs-attr">active:</span> <span class="hljs-literal">false</span><br><span class="hljs-comment">#      tmp_path: /tmp/</span><br><br><span class="hljs-attr">server.port:</span> <span class="hljs-number">5601</span><br><span class="hljs-attr">server.host:</span> <span class="hljs-string">“172.x.x.x"</span><br><span class="hljs-attr">elasticsearch.url:</span> <span class="hljs-string">"http://172.x.x.x:9200”</span><br></code></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">"actions"</span>: &#123;<br>    <span class="hljs-attr">"apache-arm"</span>: &#123;<br>      <span class="hljs-attr">"throttle_period"</span>: <span class="hljs-string">"0h15m0s"</span>,<br>      <span class="hljs-attr">"email"</span>: &#123;<br>        <span class="hljs-attr">"to"</span>: <span class="hljs-string">"zhaodan@xx.cn"</span>,<br>        <span class="hljs-attr">"from"</span>: <span class="hljs-string">"zhaodan@xx.cn"</span>,<br>        <span class="hljs-attr">"subject"</span>: <span class="hljs-string">"Alarm"</span>,<br>        <span class="hljs-attr">"priority"</span>: <span class="hljs-string">"high"</span>,<br>        <span class="hljs-attr">"body"</span>: <span class="hljs-string">"Found &#123;&#123;payload.hits.total&#125;&#125; Events"</span><br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">"input"</span>: &#123;<br>    <span class="hljs-attr">"search"</span>: &#123;<br>      <span class="hljs-attr">"request"</span>: &#123;<br>        <span class="hljs-attr">"index"</span>: [<br>          <span class="hljs-string">"fluentd-apache*"</span><br>        ],<br>        <span class="hljs-attr">"body"</span>: &#123;<br>          <span class="hljs-attr">"size"</span>: <span class="hljs-number">100</span>,<br>          <span class="hljs-attr">"query"</span>: &#123;<br>            <span class="hljs-attr">"bool"</span>: &#123;<br>              <span class="hljs-attr">"filter"</span>: &#123;<br>                <span class="hljs-attr">"range"</span>: &#123;<br>                  <span class="hljs-attr">"@timestamp"</span>: &#123;<br>                    <span class="hljs-attr">"from"</span>: <span class="hljs-string">"now-1h"</span><br>                  &#125;<br>                &#125;<br>              &#125;<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">"condition"</span>: &#123;<br>    <span class="hljs-attr">"script"</span>: &#123;<br>      <span class="hljs-attr">"script"</span>: <span class="hljs-string">"payload.hits.total &gt; 100"</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">"transform"</span>: &#123;&#125;,<br>  <span class="hljs-attr">"trigger"</span>: &#123;<br>    <span class="hljs-attr">"schedule"</span>: &#123;<br>      <span class="hljs-attr">"later"</span>: <span class="hljs-string">"every 5 minutes"</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">"disable"</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">"report"</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">"title"</span>: <span class="hljs-string">"fluentd-apache"</span><br>&#125;<br></code></pre></td></tr></table></figure>
<figure class="highlight clean"><table><tr><td class="code"><pre><code class="hljs clean"># yum install httpd<br><br># cat /etc/td-agent/td-agent.conf<br>&lt;source&gt;<br>  @type forward<br>  port <span class="hljs-number">24224</span><br>&lt;/source&gt;<br>####################################<br>&lt;source&gt;<br>  @type tail<br>  path /var/log/httpd/access_log<br>  pos_file /var/log/td-agent/httpd-access.log.pos<br>  tag apache.access<br>  &lt;parse&gt;<br>    @type apache2<br>  &lt;/parse&gt;<br>&lt;/source&gt;<br>####################################<br>&lt;match debug.**&gt;<br>  @type stdout<br>&lt;/match&gt;<br>####################################<br>&lt;match *.**&gt;<br>  @type copy<br>  &lt;store&gt;<br>    @type elasticsearch<br>    host <span class="hljs-number">172.</span>x.x.x<br>    port <span class="hljs-number">9200</span><br>    logstash_format true<br>    logstash_prefix fluentd-$&#123;tag&#125;<br>    logstash_dateformat %Y%m%d<br>    include_tag_key true<br>    type_name access_log<br>    tag_key @log_name<br>    flush_interval <span class="hljs-number">1</span>s<br>  &lt;/store&gt;<br>  &lt;store&gt;<br>    @type stdout<br>  &lt;/store&gt;<br>&lt;/match&gt;<br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/PPmZTdq8" target="_blank" rel="noopener"><img src="https://i.postimg.cc/15dK0thM/sentinl1.png" alt="sentinl1.png"></a><br><a href="https://postimg.cc/ppN8wmPH" target="_blank" rel="noopener"><img src="https://i.postimg.cc/NfF4rXV5/sentinl2.png" alt="sentinl2.png"></a><br><a href="https://postimg.cc/68cv4znW" target="_blank" rel="noopener"><img src="https://i.postimg.cc/tgQtfMgx/sentinl3.png" alt="sentinl3.png"></a><br><a href="https://postimg.cc/K1xTYCKp" target="_blank" rel="noopener"><img src="https://i.postimg.cc/9QqYLhc2/sentinl4.png" alt="sentinl4.png"></a></p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>gitlab搭建、备份及还原</title>
    <url>/2018/09/03/24_gitlab%E6%90%AD%E5%BB%BA%E5%A4%87%E4%BB%BD%E5%8F%8A%E8%BF%98%E5%8E%9F/</url>
    <content><![CDATA[<p>参考文档 <a href="https://github.com/sameersbn/docker-gitlab#host-key-backups-ssh" target="_blank" rel="noopener">https://github.com/sameersbn/docker-gitlab#host-key-backups-ssh</a></p>
<ol>
<li><p>Installation</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># cat docker-compose.yml</span><br>postgresql:<br>  image: sameersbn/postgresql:9.4-3<br>  environment:<br>    - <span class="hljs-attribute">DB_USER</span>=gitlab<br>    - <span class="hljs-attribute">DB_PASS</span>=password<br>    - <span class="hljs-attribute">DB_NAME</span>=gitlabhq_production<br>  volumes:<br>    - /srv/docker/gitlab/postgresql:/var/lib/postgresql<br>gitlab:<br>  image: sameersbn/gitlab:7.13.4<br>  links:<br>    - redis:redisio<br>    - postgresql:postgresql<br>  ports:<br>    - <span class="hljs-string">"80:80"</span><br>    - <span class="hljs-string">"22:22"</span><br>  environment:<br>    - <span class="hljs-attribute">TZ</span>=Asia/Beijing<br>    - <span class="hljs-attribute">SMTP_ENABLED</span>=<span class="hljs-literal">false</span><br>    - <span class="hljs-attribute">SMTP_DOMAIN</span>=www.example.com<br>    - <span class="hljs-attribute">SMTP_HOST</span>=smtp.gmail.com<br>    - <span class="hljs-attribute">SMTP_PORT</span>=587<br>    - <span class="hljs-attribute">SMTP_USER</span>=mailer@example.com<br>    - <span class="hljs-attribute">SMTP_PASS</span>=password<br>    - <span class="hljs-attribute">SMTP_STARTTLS</span>=<span class="hljs-literal">true</span><br>    - <span class="hljs-attribute">SMTP_AUTHENTICATION</span>=login<br>    - <span class="hljs-attribute">GITLAB_TIMEZONE</span>=Beijing<br>    - <span class="hljs-attribute">GITLAB_HOST</span>=gitlab.taiyouxi.net<br>    - <span class="hljs-attribute">GITLAB_PORT</span>=80<br>    - <span class="hljs-attribute">GITLAB_SSH_PORT</span>=22<br>    - <span class="hljs-attribute">GITLAB_EMAIL</span>=admin@example.com<br>    - <span class="hljs-attribute">GITLAB_EMAIL_REPLY_TO</span>=noreply@example.com<br>    - <span class="hljs-attribute">GITLAB_BACKUPS</span>=daily<br>    - <span class="hljs-attribute">GITLAB_BACKUP_TIME</span>=01:00<br>  volumes:<br>    - /srv/docker/gitlab/gitlab:/home/git/data<br>redis:<br>  image: sameersbn/redis:latest<br>  volumes:<br>    - /srv/docker/gitlab/redis:/var/lib/redis<br></code></pre></td></tr></table></figure>
</li>
<li><p>Creating backups</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata"># docker-compose <span class="hljs-keyword">run</span> --<span class="hljs-keyword">rm</span> gitlab <span class="hljs-keyword">app</span>:rake gitlab:backup:create<br># <span class="hljs-keyword">ls</span> /srv/docker/gitlab/gitlab/backups/<br>1535418030_gitlab_backup.tar<br></code></pre></td></tr></table></figure>
</li>
<li><p>Restoring Backups</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata"># docker-compose <span class="hljs-keyword">run</span> --<span class="hljs-keyword">rm</span> gitlab <span class="hljs-keyword">app</span>:rake gitlab:backup:<span class="hljs-keyword">restore</span>     # <span class="hljs-keyword">List</span> available backups<br># docker-compose <span class="hljs-keyword">run</span> --<span class="hljs-keyword">rm</span> gitlab <span class="hljs-keyword">app</span>:rake gitlab:backup:<span class="hljs-keyword">restore</span> BACKUP=1417624827    # Choose to <span class="hljs-keyword">restore</span> from 1417624827<br></code></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/2018/09/12/27_docker/</url>
    <content><![CDATA[<p>Docker官网：<a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></p>
<ol>
<li><p>什么是docker?<br><mark>docker是将应用程序自动部署到容器的技术</p>
</li>
<li><p>什么是容器?<br><mark>容器是一种虚拟化的方案，与虚拟机不同，虚拟机是通过中间层将一台或多台虚拟系统独立运行在硬件之上，而容器是运行在操作系统的内核之上的，可以称为操作系统虚拟化。只能运行相同或相似的内核操作系统，依赖于linux内核特性:Namespace和Cgroups，所以docker上只能运行linux操作系统</p>
</li>
<li><p>优点:<br>快    运行时的性能可以获取极大提升(经典的案例是提升97%)<br> 管理操作(启动，停止，开始，重启等等) 都是以秒或毫秒为单位的。<br>敏捷    像虚拟机一样敏捷，而且会更便宜，在bare metal(裸机)上布署像点个按钮一样简单。<br>灵活    将应用和系统“容器化”，不添加额外的操作系统，<br>轻量    你会拥有足够的“操作系统”，仅需添加或减小镜像即可。在一台服务器上可以布署100~1000个Containers容器。<br>便宜    开源的，免费的，低成本的。由现代Linux内核支持并驱动。轻量的Container必定可以在一个物理机上开启更多“容器”，注定比VMs要便宜。<br>生态系统    正在越来越受欢迎，只需要看一看Google的趋势就知道了， docker or LXC. 还有不计其数的社区和第三方应用。<br>云支持    不计其数的云服务提供创建和管理Linux容器框架。<br> 有关Docker性能方面的优势，还可参考此IBM工程师对性能提升的评测，从各个方面比VMs(OS系统级别虚拟化)都有非常大的提升</p>
</li>
<li><p>有争论的地方:<br>能否彻底隔离<br>　　在超复杂的业务系统中，单OS到底能不能实现彻底隔离，一个程序的崩溃/内存溢出/高CPU占用到底 会不会影响到其他容器或者整个系统?很多人对Docker能否在实际的多主机的生产环境中支持关键任务系统还有所怀疑。就像有人质疑Node.JS单线程快而不稳，无法在复杂场景中应用一样。<br>　　不过可喜的是，目前Linux内核已经针对Container做了很多改进，以支持更好的隔离。<br>GO语言还没有完全成熟<br>　　Docker由Go语言开发，但GO语言对大多数开发者来说比较陌生，而且还在不断改进，距离成熟还有一段时间。此半git、半包管理的方式让一些人产生不适。<br>被私有公司控制<br> Docker是一家叫Dotcloud的私有公司设计的，公司都是以营利为目的，比如你没有办法使用源代码编绎Docker项目，只能使用黑匣子编出的 Docker二进制发行包，未来可能不是完全免费的。 目前Docker已经推出面向公司的企业级服务(咨询、支持和培训)。</p>
</li>
<li><p>Doker目标:</p>
</li>
<li><p>提供简单轻量的建模方式(同一台宿主机可以运行多个容器)</p>
</li>
<li><p>职责的逻辑分离，加强开发人员的开发环境与生产部署的环境的一致性</p>
</li>
<li><p>快速高效的开发的生命周期，缩短从开发到生产的周期，使开发、测试、生产环境相一致，并且都以容器的方式进行交付，避免了额外调试部署的时间开销</p>
</li>
<li><p>鼓励使用面向服务的架构，鼓励单个容器之运行单一服务，这就形成了一种分布式模型，避免服务之间的互相应影响，在定位出现的问题时，也变得简单直接</p>
</li>
<li><p>Docker的使用场景:</p>
</li>
<li><p>使用docker容器开发,测试,部署服务.</p>
</li>
<li><p>创建隔离的运行环境.</p>
</li>
<li><p>搭建测试环境</p>
</li>
<li><p>构建多用户的平台即服务(PaaS)基础设施</p>
</li>
<li><p>提供软件机服务(SaaS)应用程序</p>
</li>
<li><p>高性能,超大规模的宿主机部署</p>
</li>
<li><p>Docker基本组成<br>Docker Client 客户端<br>Docker Daemon 守护进程<br>Docker Image 镜像<br>Docker Container 容器<br>Docker Registry 仓库<br>公有  Docker Hub  <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a><br>私有</p>
</li>
<li><p>Docker容器的能力<br>文件系统隔离：每个容器有自己的root文件系统<br>进程隔离：每个容器都运行在自己的进程环境中<br>网络隔离：容器间的虚拟网络接口和IP地址都是分开的<br>资源隔离和分组：使用cgroups将cpu和内存之类的资源独立分配给每个Docker容器</p>
</li>
</ol>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>etcd搭建和备份</title>
    <url>/2018/09/04/25_etcd%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%A4%87%E4%BB%BD/</url>
    <content><![CDATA[<ol>
<li>Download etcd.tar.gz</li>
<li>编写etcd的supervisor启动脚本</li>
</ol>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">etcd1<br>[root@VM_7_centos opt]# <span class="hljs-keyword">cat</span> /etc/supervisord/<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">d</span>/etcd.<span class="hljs-keyword">conf</span><br>[<span class="hljs-keyword">program</span>:etcd]<br>directory=/opt/etcd/etcd-data<br>command=/usr/<span class="hljs-keyword">local</span>/bin/etcd<br>  -name ip-xx-xx-xx-7<br>  --data-<span class="hljs-keyword">dir</span> /opt/etcd/etcd-data<br>  -initial-advertise-peer-urls http:<span class="hljs-comment">//xx.xx.xx.7:2380</span><br>  -listen-peer-urls http:<span class="hljs-comment">//xx.xx.xx.7:2380</span><br>  -listen-client-urls http:<span class="hljs-comment">//xx.xx.xx.7:2379,http://127.0.0.1:2379</span><br>  -advertise-client-urls http:<span class="hljs-comment">//xx.xx.xx.7:2379</span><br>  -initial-<span class="hljs-keyword">cluster</span>-<span class="hljs-keyword">token</span> etcd-<span class="hljs-keyword">cluster</span>-wpys<br>  -initial-<span class="hljs-keyword">cluster</span> ip-xx-xx-xx-7=http:<span class="hljs-comment">//xx.xx.xx.7:2380,ip-xx-xx-xx-9=http://xx.xx.xx.9:2380</span><br>stdout_logfile=/opt/supervisor/<span class="hljs-keyword">log</span>/etcd.<span class="hljs-keyword">log</span><br>user=root<br>redirect_stderr=true<br></code></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">etcd2<br>[root@VM_9_centos opt]# <span class="hljs-keyword">cat</span> /etc/supervisord/<span class="hljs-keyword">conf</span>.<span class="hljs-keyword">d</span>/etcd.<span class="hljs-keyword">conf</span><br>[<span class="hljs-keyword">program</span>:etcd]<br>directory=/opt/etcd/etcd-data<br>command=/usr/<span class="hljs-keyword">local</span>/bin/etcd<br>  -name ip-xx-xx-xx-9<br>  --data-<span class="hljs-keyword">dir</span> /opt/etcd/etcd-data<br>  -initial-advertise-peer-urls http:<span class="hljs-comment">//xx.xx.xx.9:2380</span><br>  -listen-peer-urls http:<span class="hljs-comment">//xx.xx.xx.9:2380</span><br>  -listen-client-urls http:<span class="hljs-comment">//xx.xx.xx.9:2379,http://127.0.0.1:2379</span><br>  -advertise-client-urls http:<span class="hljs-comment">//xx.xx.xx.9:2379</span><br>  -initial-<span class="hljs-keyword">cluster</span>-<span class="hljs-keyword">token</span> etcd-<span class="hljs-keyword">cluster</span>-wpys<br>  -initial-<span class="hljs-keyword">cluster</span> ip-xx-xx-xx-7=http:<span class="hljs-comment">//xx.xx.xx.7:2380,ip-xx-xx-xx-9=http://xx.xx.xx.9:2380</span><br>stdout_logfile=/opt/supervisor/<span class="hljs-keyword">log</span>/etcd.<span class="hljs-keyword">log</span><br>user=root<br>redirect_stderr=true<br></code></pre></td></tr></table></figure>

<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[root@ip conf.d]# cat etcd_viewer.conf<br>[program:etcd_viewer]<br><span class="hljs-attribute">directory</span>=/opt/etcd-viewer/<br><span class="hljs-attribute">command</span>=/usr/local/apache-maven-3.3.3/bin/mvn jetty:run<br><span class="hljs-attribute">stdout_logfile</span>=/opt/supervisor/log/etcd-viewer.log<br><span class="hljs-attribute">user</span>=root<br><span class="hljs-attribute">redirect_stderr</span>=<span class="hljs-literal">true</span><br><br><br>[root@ip conf.d]# cat skydns.conf<br>[program:skydns]<br><span class="hljs-attribute">directory</span>=/opt/supervisor/<br><span class="hljs-comment">#command=/usr/bin/skydns</span><br><span class="hljs-comment">#  -addr=0.0.0.0:53</span><br><span class="hljs-comment">#  -machines=http://127.0.0.1:2379</span><br><span class="hljs-comment">#  -nameservers="":53</span><br><span class="hljs-comment">#  -discover=true</span><br><span class="hljs-comment">#  -domain="xxx.net."</span><br><span class="hljs-attribute">command</span>=/usr/local/bin/skydns<br><span class="hljs-comment">#  -discover=true</span><br>  <span class="hljs-attribute">-machines</span>=<span class="hljs-string">"http://10.xx.xx.xx:2379,http://10.xx.xx.xx"</span><br>  <span class="hljs-attribute">-verbose</span>=<span class="hljs-literal">true</span><br><span class="hljs-attribute">stdout_logfile</span>=/opt/supervisor/log/skydns.log<br><span class="hljs-attribute">user</span>=root<br><span class="hljs-attribute">redirect_stderr</span>=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure>

<ol start="3">
<li>备份</li>
</ol>
<figure class="highlight armasm"><table><tr><td class="code"><pre><code class="hljs armasm"># etcdctl <span class="hljs-keyword">backup </span>--<span class="hljs-meta">data</span>-dir=/<span class="hljs-meta">opt</span>/etcd/etcd-<span class="hljs-meta">data</span> --<span class="hljs-keyword">backup-dir=/tmp/etcd-backup-`date </span>+%y%m%d%H`<br></code></pre></td></tr></table></figure>
<ol start="4">
<li>还原</li>
</ol>
<figure class="highlight haskell"><table><tr><td class="code"><pre><code class="hljs haskell">停止etcd，将备份数据拷贝到<span class="hljs-class"><span class="hljs-keyword">data</span>-dir下，启动配置需加上<span class="hljs-comment">--force-new-cluster参数，启动etcd</span></span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>etcd</tag>
      </tags>
  </entry>
  <entry>
    <title>mac下安装cherrytree</title>
    <url>/2018/09/12/26_mac%E5%AE%89%E8%A3%85cherrytree/</url>
    <content><![CDATA[<p>mac上运行cherrytree先要有Python环境，mac自带的是Python2.7<br>这样启动后如果终端断开cherrytree也会退出</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># git clone https://github.com/giuspen/cherrytree.git git_cherrytree</span><br><span class="hljs-meta"># cd git_cherrytree</span><br><span class="hljs-meta"># ./cherrytree</span><br></code></pre></td></tr></table></figure>
<p>报错请执行下面命令，用sudo用户执行</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># brew install pygtk</span><br><span class="hljs-meta"># brew install pygtksourceview</span><br></code></pre></td></tr></table></figure>

<p>测试期间我还安装了Python3，升级了pip，不知道会不会有影响</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># python3 -m pip install aiohttp</span><br><span class="hljs-meta"># easy_install -U setuptools</span><br><span class="hljs-meta"># git -C "$(brew --repo homebrew/core)" fetch --unshallow</span><br></code></pre></td></tr></table></figure>

<p>参考文档：<a href="https://www.giuspen.com/cherrytree/#downl" target="_blank" rel="noopener">https://www.giuspen.com/cherrytree/#downl</a><br>另 <a href="https://www.jianshu.com/p/434f99630640" target="_blank" rel="noopener">https://www.jianshu.com/p/434f99630640</a> 他的方法也可，稍微麻烦一点</p>
<p>ps：忍不住要吐槽一句，天知道Python环境有多烦人</p>
]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>cherrytree</tag>
      </tags>
  </entry>
  <entry>
    <title>自动检测服务器load抓取pprof</title>
    <url>/2018/09/25/28_shellpprof/</url>
    <content><![CDATA[<p>因为线上服务存在Bug，服务器的压力会突增，需要抓取一些信息供开发查Bug，写了这个小脚本，手动执行挺好使的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>load=`top -n 1 |grep <span class="hljs-string">"load average:"</span> |awk -F, <span class="hljs-string">'&#123;print $4&#125;'</span> |awk -F : <span class="hljs-string">'&#123;print $2&#125;'</span>`<br>avg=10.00<br><span class="hljs-comment">#shard=`ls /opt/supervisor/ |grep "gamex-" |awk -Fd '&#123;print $2&#125;'`</span><br>shard=/mnt/shard<br><br><span class="hljs-keyword">if</span> [ `<span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$load</span> &gt; <span class="hljs-variable">$avg</span>"</span> |bc` -gt 0 ];<span class="hljs-keyword">then</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> shardid;<span class="hljs-keyword">do</span><br>    /bin/sh gamex_run.sh <span class="hljs-variable">$shardid</span><br>        <span class="hljs-keyword">done</span> &lt; <span class="hljs-variable">$shard</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"it is not high"</span> &gt;&gt; /mnt/auto.log<br>    <span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure>
<p>将脚本放置定时任务中，每分钟执行一遍进行检测load，高于10则抓取服务器性能参数</p>
]]></content>
  </entry>
  <entry>
    <title>lrzsz安装文档</title>
    <url>/2018/12/11/29_lrzsz/</url>
    <content><![CDATA[<p>服务器经常需要上传和下载一些不是很大的文件，这时服务器上有这么一个可以直接只是上传下载的工具会很方便</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># wget http://ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz  --no-check-certificate</span><br><span class="hljs-meta"># yum install gcc -y</span><br><span class="hljs-meta"># tar zxvf lrzsz-0.12.20.tar.gz &amp;&amp; cd lrzsz-0.12.20</span><br><span class="hljs-meta"># ./configure &amp;&amp; make &amp;&amp; make install</span><br><br>上面安装过程默认把lsz和lrz安装到了/usr/local/bin/目录下, 下面创建软链接, 并命名为rz/sz:<br><span class="hljs-meta"># cd /usr/bin</span><br><span class="hljs-meta"># cp /usr/local/bin/lsz   /usr/bin/sz</span><br><span class="hljs-meta"># cp /usr/local/bin/lrz  /usr/bin/rz</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>lrzsz</tag>
      </tags>
  </entry>
  <entry>
    <title>shadowsocks</title>
    <url>/2018/12/19/30_shadowsocks/</url>
    <content><![CDATA[<p>既然买了海外的服务器，就打个隧道吧，话说用shadowsocks也太简单了</p>
<p>参考文档： <a href="https://github.com/zhaodanwjk/shadowsocks" target="_blank" rel="noopener">https://github.com/zhaodanwjk/shadowsocks</a></p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class="hljs-meta"># pip install shadowsocks</span><br><span class="hljs-meta"># sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start</span><br></code></pre></td></tr></table></figure>

<p>注意开放端口</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>shadowsocks</tag>
      </tags>
  </entry>
  <entry>
    <title>运维日常工作流程</title>
    <url>/2017/10/11/2_%E8%BF%90%E7%BB%B4%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<p>主要工作：<br>【一】线上工作：</p>
<ol>
<li>国内海外游戏服务器更新</li>
<li>监控报警维护处理</li>
<li>准备游戏新区服</li>
<li>根据运营需求进行合服</li>
</ol>
<p>【二】测试环境工作：</p>
<ol>
<li>内网AWS部署测试镜像服供QA使用</li>
<li>内网测试服务器部署</li>
<li>为开发人员部署其他测试环境</li>
</ol>
<p>【三】配合运营的工作：</p>
<ol>
<li>作弊日志上传内网FTP</li>
<li>海外反作弊的发送</li>
<li>userinfo的Log上传至FTP</li>
<li>根据运营要求生成激活码</li>
</ol>
<p>【四】内网其他工作：</p>
<ol>
<li>IT相关</li>
</ol>
<hr>
<p>####准备游戏新区服流程<br>#####操作流程CheckList</p>
<ul>
<li><input disabled="" type="checkbox"> 检查服务器压力负载</li>
<li><input disabled="" type="checkbox"> 检查redis内存大小</li>
<li><input disabled="" type="checkbox"> 检查新服与目标机器IP是否一致</li>
<li><input disabled="" type="checkbox"> 检查fact，dns是否正确</li>
<li><input disabled="" type="checkbox"> 检查etcd是否有改动</li>
<li><input disabled="" type="checkbox"> 检查目标机器端口是否开放</li>
<li><input disabled="" type="checkbox"> 检查当前gamex版本信息</li>
<li><input disabled="" type="checkbox"> 检查是否有热更</li>
<li><input disabled="" type="checkbox"> 检查启动时间</li>
</ul>
<p>#####部署操作</p>
<ul>
<li><input disabled="" type="checkbox"> 查看playbook中gamex信息，确定新服目标机器</li>
<li><input disabled="" type="checkbox"> 查看redis信息，确定新服目标空闲DB（ redis-cli -h IP -a PASSWD info ）</li>
<li><input disabled="" type="checkbox"> 本地修改playbook配置信息，增加新服gamex，etcd和csv的配置信息并提交git</li>
<li><input disabled="" type="checkbox"> jenkins上注册sn码</li>
<li><input disabled="" type="checkbox"> jenkins上注册etcd</li>
<li><input disabled="" type="checkbox"> 确定好目标机器IP，本地注册ansible的fact</li>
<li><input disabled="" type="checkbox"> jenkins上单服部署gamex</li>
<li><input disabled="" type="checkbox"> 部署redisstorage-userinfo</li>
<li><input disabled="" type="checkbox"> 重启GMtools</li>
<li><input disabled="" type="checkbox"> 验证新服是否注册成功，查看新服目标机器配置信息</li>
<li><input disabled="" type="checkbox"> 登陆GMtools检查新服信息</li>
</ul>
<hr>
<p>####线上合服流程<br>#####操作流程CheckList</p>
<ul>
<li><input disabled="" type="checkbox"> 检查数据库备份是否正常</li>
<li><input disabled="" type="checkbox"> 检查playbook中gamex配置信息是否正确</li>
<li><input disabled="" type="checkbox"> 检查机器fact，dns是否正确</li>
<li><input disabled="" type="checkbox"> 检查redis内存</li>
<li><input disabled="" type="checkbox"> 检查etcd是否有改动</li>
<li><input disabled="" type="checkbox"> 检查当前gamex版本信息</li>
</ul>
<p>#####合服准备</p>
<ul>
<li><input disabled="" type="checkbox"> 统计目标区服的详细信息，可在本地执行脚本查看（ python get_redis_used.py ）</li>
<li><input disabled="" type="checkbox"> 登陆跳板机查看redis db信息，规划合服后的redis db （ python get_redis_used.py ）</li>
<li><input disabled="" type="checkbox"> 本地修改目标区服的Etcd配置并删除被合区服的gamex</li>
</ul>
<p>#####合服操作</p>
<ul>
<li><input disabled="" type="checkbox"> 停服操作</li>
<li><input disabled="" type="checkbox"> Jenkins上手动执行上传日志到S3的3个job</li>
<li><input disabled="" type="checkbox"> 登陆跳板机，在all_shard_info.txt中写入统计的目标区服信息</li>
<li><input disabled="" type="checkbox"> 在merge_conf.txt中写入规划好的配置信息</li>
<li><input disabled="" type="checkbox"> 执行合服脚本，sh create_merge_conf.sh 创建merge.toml文件，同时再次检查merge.tom的配置是否与规划的一致</li>
<li><input disabled="" type="checkbox"> 记录合服脚本输出并归档到印象笔记</li>
<li><input disabled="" type="checkbox"> jenkins上删除目标区服对应的服务及配置</li>
<li><input disabled="" type="checkbox"> git提交修改代码</li>
<li><input disabled="" type="checkbox"> jenkins注册对应大区Etcd</li>
<li><input disabled="" type="checkbox"> jenkins选择对应大区部署gamex</li>
<li><input disabled="" type="checkbox"> jenkins选择对应大区部署redisstorage-userinfo</li>
<li><input disabled="" type="checkbox"> jenkins上传充值每小时log到S3</li>
<li><input disabled="" type="checkbox"> 登陆跳板机，连接合服完毕的机器，查看配置是否正确</li>
<li><input disabled="" type="checkbox"> 检查合服后的redis db的key值是否正常</li>
<li><input disabled="" type="checkbox"> QA测试完毕没有任何问题后，清理被合服区服的原db</li>
</ul>
<hr>
<h4 id="极无双线上部署流程规范"><a href="#极无双线上部署流程规范" class="headerlink" title="极无双线上部署流程规范"></a>极无双线上部署流程规范</h4><h4 id="上线CheckList"><a href="#上线CheckList" class="headerlink" title="上线CheckList"></a>上线CheckList</h4><ul>
<li><input disabled="" type="checkbox"> 是否有运维部署操作（服务器磁盘大小升级、服务器cpu升级、服务器内存升级、数据库机器进行升级、其它服务进行升级）<br>如果有运维部署操作，需要对应的操作流程<br>所有的操作大流程基本上是<br>首先和运营确认本次更新时间、运维操作预估时间，两者时间是否有较大的出入<br>根据对应的服务器操作流程进行服务器的升级和降级，必须保障数据的完整<br>如果对数据库操作，先备份   </li>
</ul>
<ul>
<li><input disabled="" type="checkbox"> <p>确认是否有提前停服需求–&gt;【运营、策划】<br>如果有停服需要，如何做，检查停服脚本的大区？<br>停服之后，如果删除这个脚本或者关闭这个脚本（避免出现忘记修改脚本，导致多次停服）</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查确认是否存在热更–&gt;【服务器】<br>如何去掉热更</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查确认是否存在敏感数据操作–&gt;【服务器】<br>敏感数据是否测试过；；；；</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查确认更新服务版本信息 –&gt;【邮件】</p>
</li>
<li><input disabled="" type="checkbox"> <p>记录版本信息到印象笔记并截图至服务器群组确认（记录信息命名格式：版本+时间）</p>
</li>
<li><input disabled="" type="checkbox"> <p>确认部署所需版本包已成功传至对应S3</p>
</li>
<li><input disabled="" type="checkbox"> <p>确认维护公告是否生效–&gt;【运维中心群组】</p>
</li>
<li><input disabled="" type="checkbox"> <p>开始更新维护并同步操作信息至群组 –&gt;【运维中心群组】<br>更新gamex、auth等操作需要注意的地方，比如选择大区，</p>
</li>
</ul>
<ul>
<li><input disabled="" type="checkbox"> <p>检查Ansible部署输出是否有Err日志</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查服务器进程是否Running<br>上机器检查、grafana</p>
</li>
<li><input disabled="" type="checkbox"> <p>是否需要重新部署redisstorage-userinfo<br>存在数据库操作的情况，都需要重新部署整个大区的redisstorage-userinfo<br>gamex增加、减少等</p>
</li>
<li><input disabled="" type="checkbox"> <p>是否需要重启GMtools<br>存在数据库操作的情况，都需要重新部署整个大区的redisstorage-userinfo<br>gamex增加、减少等</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查GM工具区服显示是否为可进<br>顺便检查下   所有的gamex 是否玩家可进</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查监控报警是否正常</p>
</li>
<li><input disabled="" type="checkbox"> <p>检查其它服务是否正常，eg     gamex、auth、crossservice、chat等</p>
</li>
<li><input disabled="" type="checkbox"> <p>通知QA进行测试</p>
</li>
<li><input disabled="" type="checkbox"> <p>维护完成后关注监控是否存在异常，服务器看看log</p>
</li>
</ul>
<h4 id="上线故障排除"><a href="#上线故障排除" class="headerlink" title="上线故障排除"></a>上线故障排除</h4><ul>
<li>1.）Jenkins部署未找到版本包<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#排错思路：查看确认内网Jenkins编译名称--&gt;Jenkins部署匹配名称是否一致--&gt;S3对应bucket是否存在该包</span><br><span class="hljs-comment">#一般解决：编辑对应jenkins任务配置选项，查看filename变量选项，如下行</span><br>s3://yingzhuo-gamex/gamexback/gmtools<span class="hljs-string">'.execute</span><br></code></pre></td></tr></table></figure></li>
<li>2.）Jenkins部署变量报错<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#排错思路：是否存在新添加Etcd key值需提交--&gt; 是否注册etcd --&gt; 打包配置模板变量名称与注册etcd变量名称是否一致</span><br><span class="hljs-comment">#一般解决：重新注册etcd</span><br></code></pre></td></tr></table></figure></li>
<li>3.）公告服务可用性快速验证<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">http://<span class="hljs-variable">$ip</span>:<span class="hljs-variable">$port</span>/notice/v1/getnotice?gid=<span class="hljs-variable">$gid</span>&amp;version=<span class="hljs-variable">$version</span><br><span class="hljs-comment"># a. 更改Notice的外网IP及端口，以及gid 和version信息，通过http方法进行访问，正常会返回公告信息</span><br><span class="hljs-comment"># b. 需注意现版本对外端口需要开放两个，port1 及 port2</span><br></code></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>chevereto</title>
    <url>/2018/12/21/31_chevereto/</url>
    <content><![CDATA[<p>博客搭建好以后有一个markdown里笔记插图的问题，在此记录下图床<br>参考文档： <a href="https://hub.docker.com/r/nmtan/chevereto/" target="_blank" rel="noopener">https://hub.docker.com/r/nmtan/chevereto/</a></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># pip install docker-compose</span><br><br><span class="hljs-meta"># cat Dockerfile</span><br><span class="hljs-symbol">version:</span> <span class="hljs-string">'3'</span><br><br><span class="hljs-symbol">services:</span><br><span class="hljs-symbol">  db:</span><br><span class="hljs-symbol">    image:</span> mariadb<br><span class="hljs-symbol">    volumes:</span><br>      - database:<span class="hljs-meta-keyword">/var/</span>lib/mysql:rw<br><span class="hljs-symbol">    restart:</span> always<br><span class="hljs-symbol">    networks:</span><br>      - private<br><span class="hljs-symbol">    environment:</span><br><span class="hljs-symbol">      MYSQL_ROOT_PASSWORD:</span> chevereto_root<br><span class="hljs-symbol">      MYSQL_DATABASE:</span> chevereto<br><span class="hljs-symbol">      MYSQL_USER:</span> chevereto<br><span class="hljs-symbol">      MYSQL_PASSWORD:</span> chevereto<br><br><span class="hljs-symbol">  chevereto:</span><br><span class="hljs-symbol">    depends_on:</span><br>      - db<br><span class="hljs-symbol">    image:</span> nmtan/chevereto<br><span class="hljs-symbol">    restart:</span> always<br><span class="hljs-symbol">    networks:</span><br>      - private<br><span class="hljs-symbol">    environment:</span><br><span class="hljs-symbol">      CHEVERETO_DB_HOST:</span> db<br><span class="hljs-symbol">      CHEVERETO_DB_USERNAME:</span> chevereto<br><span class="hljs-symbol">      CHEVERETO_DB_PASSWORD:</span> chevereto<br><span class="hljs-symbol">      CHEVERETO_DB_NAME:</span> chevereto<br><span class="hljs-symbol">      CHEVERETO_DB_PREFIX:</span> chv_<br><span class="hljs-symbol">    volumes:</span><br>      - chevereto_images:<span class="hljs-meta-keyword">/var/</span>www<span class="hljs-meta-keyword">/html/</span>images:rw<br><span class="hljs-symbol">    ports:</span><br>      - <span class="hljs-number">8080</span>:<span class="hljs-number">80</span><br><br><span class="hljs-symbol">networks:</span><br><span class="hljs-symbol">  private:</span><br><span class="hljs-symbol">volumes:</span><br><span class="hljs-symbol">  database:</span><br><span class="hljs-symbol">  chevereto_images:</span><br><br><br><span class="hljs-meta"># docker compose up -d</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>关于grafana collectd  解决合服后collectd有缓存的问题</title>
    <url>/2019/01/09/33_collectd/</url>
    <content><![CDATA[<p>监控流程：<br>Collectd ——&gt; carbonrelay  ——&gt; carboncache2 ——&gt; grafana</p>
<p>问题：合服后监控一个不存在的进程，监控一直报警，carboncache下的配置删除后重新自动生成<br>原因：collectd 没有真正停止，一直在发送缓存数据<br>解决办法：停止机器上的collectd服务，删除graphite数据</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>ip collectd.d]# /etc/init.d/collectd stop<br>Stopping collectd:                                         [  OK  ]<br>[<span class="hljs-symbol">root@</span>ip collectd.d]# ps axu | grep coll<br>zabbix    <span class="hljs-number">3786</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">119276</span>  <span class="hljs-number">1720</span> ?        S    Oct10  <span class="hljs-number">15</span>:<span class="hljs-number">41</span> /usr/sbin/zabbix_agentd: collector [idle <span class="hljs-number">1</span> sec]<br>root     <span class="hljs-number">21881</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">1636</span> ?        Ssl  Oct10  <span class="hljs-number">60</span>:<span class="hljs-number">44</span> collectd<br>root     <span class="hljs-number">22110</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">260</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22111</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">260</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22122</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">260</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22168</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">264</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22172</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2888</span> ?        Sl   Oct10  <span class="hljs-number">76</span>:<span class="hljs-number">50</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>root     <span class="hljs-number">22176</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2812</span> ?        Sl   Oct10  <span class="hljs-number">76</span>:<span class="hljs-number">02</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>root     <span class="hljs-number">22204</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2868</span> ?        Sl   Oct10  <span class="hljs-number">70</span>:<span class="hljs-number">57</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>root     <span class="hljs-number">22234</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2848</span> ?        Sl   Oct10  <span class="hljs-number">72</span>:<span class="hljs-number">51</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>[<span class="hljs-symbol">root@</span>ip collectd.d]# /etc/init.d/collectd stop<br>Stopping collectd:                                         [FAILED]<br>[<span class="hljs-symbol">root@</span>ip collectd.d]#<br>[<span class="hljs-symbol">root@</span>ip collectd.d]# ps axu | grep coll<br>zabbix    <span class="hljs-number">3786</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">119276</span>  <span class="hljs-number">1720</span> ?        S    Oct10  <span class="hljs-number">15</span>:<span class="hljs-number">41</span> /usr/sbin/zabbix_agentd: collector [idle <span class="hljs-number">1</span> sec]<br>root      <span class="hljs-number">4648</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">110460</span>   <span class="hljs-number">856</span> pts/<span class="hljs-number">0</span>    S+   <span class="hljs-number">01</span>:<span class="hljs-number">34</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> grep coll<br>root     <span class="hljs-number">21881</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">1636</span> ?        Ssl  Oct10  <span class="hljs-number">60</span>:<span class="hljs-number">44</span> collectd<br>root     <span class="hljs-number">22110</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">260</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22111</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">260</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22122</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">260</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22168</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span>   <span class="hljs-number">4344</span>   <span class="hljs-number">264</span> ?        Ss   Oct10   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> collectdmon -P /var/run/collectdmon.pid -c /usr/sbin/collectd -- -C /etc/collectd.conf<br>root     <span class="hljs-number">22172</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2888</span> ?        Sl   Oct10  <span class="hljs-number">76</span>:<span class="hljs-number">50</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>root     <span class="hljs-number">22176</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2812</span> ?        Sl   Oct10  <span class="hljs-number">76</span>:<span class="hljs-number">02</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>root     <span class="hljs-number">22204</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2868</span> ?        Sl   Oct10  <span class="hljs-number">70</span>:<span class="hljs-number">57</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>root     <span class="hljs-number">22234</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">774200</span>  <span class="hljs-number">2848</span> ?        Sl   Oct10  <span class="hljs-number">72</span>:<span class="hljs-number">51</span> /usr/sbin/collectd -C /etc/collectd.conf -f<br>[<span class="hljs-symbol">root@</span>ip collectd.d]# ps axu | grep coll |awk <span class="hljs-string">'&#123;print $2&#125;'</span> | xargs kill <span class="hljs-number">-9</span><br>kill: sending signal to <span class="hljs-number">4650</span> failed: No such process<br>[<span class="hljs-symbol">root@</span>ip collectd.d]# ps axu | grep coll<br>root      <span class="hljs-number">4656</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">110460</span>   <span class="hljs-number">856</span> pts/<span class="hljs-number">0</span>    S+   <span class="hljs-number">01</span>:<span class="hljs-number">34</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> grep coll<br></code></pre></td></tr></table></figure>



<hr>
<p>####记collectd插件<br>线上数据库压力比较大，导致玩家掉线，故需要一个可以监控到连接数的图表，collectd刚好有这个插件，监控某一个端口的TCP连接数<br>添加一个端口连接数的配置文件，（还需要将collectd.conf配置文件中的tcpconns插件打开）</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">监控单个端口：<br>[root@ip collectd.<span class="hljs-keyword">d</span>]# <span class="hljs-keyword">cat</span> ardb_port.<span class="hljs-keyword">conf</span><br>&lt;<span class="hljs-keyword">Plugin</span> <span class="hljs-string">"tcpconns"</span>&gt;<br>  ListeningPorts false<br>  LocalPort <span class="hljs-string">"16379"</span><br>  RemotePort <span class="hljs-string">"16379"</span><br>&lt;/<span class="hljs-keyword">Plugin</span>&gt;<br><br>监控多个端口：<br>[root@ip collectd.<span class="hljs-keyword">d</span>]# <span class="hljs-keyword">cat</span> ardb_tcpconns.<span class="hljs-keyword">conf</span><br>&lt;<span class="hljs-keyword">Plugin</span> <span class="hljs-string">"tcpconns"</span>&gt;<br>  ListeningPorts false<br>  LocalPort <span class="hljs-string">"16379"</span><br>  LocalPort <span class="hljs-string">"6379"</span><br>&lt;/<span class="hljs-keyword">Plugin</span>&gt;<br></code></pre></td></tr></table></figure>
<hr>
<p>解决collectd监控redis数据库获取redis info问题</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala">collectd监控redis的信息需要装额外的Python插件，安装了插件后查看会有Python模块，不装这个插件会报错<br><span class="hljs-meta"># yum install collectd-python.x86_64</span><br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/nX13V6k0" target="_blank" rel="noopener"><img src="https://i.postimg.cc/y8MtjKS4/collectd-python.png" alt="collectd-python.png"></a></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">下载redis Python插件到plugins目录下，Python插件地址：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/powdahound/</span>redis-collectd-plugin<br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/k2Cjmnx2" target="_blank" rel="noopener"><img src="https://i.postimg.cc/Sx2HcRRf/collectd-redis.png" alt="collectd-redis.png"></a></p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>mac下配置rz,sz工具</title>
    <url>/2019/01/02/32_mac%E4%B8%8B%E9%85%8D%E7%BD%AErz/</url>
    <content><![CDATA[<p>一直没有写过mac下如何配置lrzsz工具的文档，今天开发同事又来问如何配置，索性整理一下。<br>因为mac上的终端不支持rz和sz,所以需要安装iterm并配置使用。</p>
<ol>
<li>下载安装iterm2  <a href="http://www.iterm2.cn/download" target="_blank" rel="noopener">http://www.iterm2.cn/download</a></li>
<li>使用brew 安装 lrzsz   # brew install lrzsz</li>
<li>安装完成后检查 # ls -alh /usr/local/bin/sz 是否存在</li>
<li>下载2个上传下载的脚本 <a href="https://github.com/zhaodanwjk/iterm2-zmodem" target="_blank" rel="noopener">https://github.com/zhaodanwjk/iterm2-zmodem</a></li>
<li>在iterm2里添加trigger，打开iterm2使用快捷键 command + ， 打开配置窗口<br><a href="https://postimg.cc/8JbpZkBL" target="_blank" rel="noopener"><img src="https://i.postimg.cc/4dDYNmY2/rz1.png" alt="rz1.png"></a><br><a href="https://postimg.cc/vgy87x9Q" target="_blank" rel="noopener"><img src="https://i.postimg.cc/TwLy6r3W/rz2.png" alt="rz2.png"></a></li>
</ol>
<figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts">Regular expression: \*\*B0100<br><br><span class="hljs-symbol">Action:</span> Run Silent Coprocess<br><br><span class="hljs-symbol">Parameters:</span> <span class="hljs-meta-keyword">/usr/</span>local<span class="hljs-meta-keyword">/bin/</span>iterm2-send-zmodem.sh<br><br>Regular expression: \*\*B00000000000000<br><br><span class="hljs-symbol">Action:</span> Run Silent Coprocess<br><br><span class="hljs-symbol">Parameters:</span> <span class="hljs-meta-keyword">/usr/</span>local<span class="hljs-meta-keyword">/bin/</span>iterm2-recv-zmodem.sh<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>lrzsz</tag>
      </tags>
  </entry>
  <entry>
    <title>jumpserver权限划分</title>
    <url>/2019/01/10/34_jumpserver%E6%9D%83%E9%99%90%E5%88%92%E5%88%86/</url>
    <content><![CDATA[<p>因新项目使用了jumpserver来代替以前的跳板机服务器，现在使用了jumpserver所以需要在jumpserver上进行权限划分。<br>（以前权限控制都是通过秘钥，运维使用超级key，服务器使用普通key，并没有日志审计）</p>
<ol>
<li><p>在资产列表里将ROOT下的服务器进行分组，不同的服务放到不同的主机组里<br><a href="https://postimg.cc/FkdJ8JP2" target="_blank" rel="noopener"><img src="https://i.postimg.cc/C5JHZGbL/jumpserver6.png" alt="jumpserver6.png"></a></p>
</li>
<li><p>在用户管理里创建新的用户组</p>
</li>
<li><p>创建命令过滤器（开放个别命令可以让服务器使用，例如ls cat 查看log）<br><a href="https://postimg.cc/94g02QqV" target="_blank" rel="noopener"><img src="https://i.postimg.cc/26rZ4qkq/jumpserver1.png" alt="jumpserver1.png"></a><br><a href="https://postimg.cc/JsJ5tS59" target="_blank" rel="noopener"><img src="https://i.postimg.cc/137C7Qn5/jumpserver2.png" alt="jumpserver2.png"></a></p>
</li>
<li><p>创建新的资产授权规则<br><a href="https://postimg.cc/vg6YdLsL" target="_blank" rel="noopener"><img src="https://i.postimg.cc/76Kf0mtc/jumpserver3.png" alt="jumpserver3.png"></a><br><a href="https://postimg.cc/HV8QPFRV" target="_blank" rel="noopener"><img src="https://i.postimg.cc/jdZZCbhQ/jumpserver4.png" alt="jumpserver4.png"></a></p>
</li>
<li><p>创建新的系统用户dev，注意dev优先级要高于root，否则权限不生效<br><a href="https://postimg.cc/qNb4hZBx" target="_blank" rel="noopener"><img src="https://i.postimg.cc/hGgjYHH6/jumpserver7.png" alt="jumpserver7.png"></a><br><a href="https://postimg.cc/kVgGLbGf" target="_blank" rel="noopener"><img src="https://i.postimg.cc/R0ct61B5/jumpserver5.png" alt="jumpserver5.png"></a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
        <tag>JumpServer</tag>
      </tags>
  </entry>
  <entry>
    <title>Fluentd</title>
    <url>/2018/06/19/38_fluentd/</url>
    <content><![CDATA[<p>Fluentd 是由Ruby和C编写的，需要ruby进行，然而安装td-agent 是fluentd 的易安装版本，不用考虑太多的依赖关系。</p>
<p>编辑配置文件/etc/td-agent/td-agent.conf 中的source来设置日志来源</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts"><span class="hljs-params">&lt;source&gt;</span><br><br> type tail  <br><br> format apache  <br><br> path <span class="hljs-meta-keyword">/var/</span>log<span class="hljs-meta-keyword">/apache2/</span>access_log  <br><br> pos_file <span class="hljs-meta-keyword">/var/</span>log<span class="hljs-meta-keyword">/apache2/</span>access_log.pos  <br><br> tag mongo.apache  <br><br><span class="hljs-params">&lt;/source&gt;</span><br></code></pre></td></tr></table></figure>

<p>type tail: tail方式是 Fluentd 内置的输入方式，其原理是不停地从源文件中获取增量日志，与linx命令tail相似，也可以使用其他输入方式如http、forward等输入，也可以使用输入插件，将 tail 改为相应的插件名称 如： type tail_ex  ，注意tail_ex为下划线</p>
<ol>
<li>使用中转方式</li>
</ol>
<p>先发送给中转站，中转再发送至elatsearch</p>
<p>在本机修改tdagent配置</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"><br># <span class="hljs-keyword">vim</span> /etc/td-agent/<span class="hljs-keyword">conf</span>.d/td-agent.<span class="hljs-keyword">conf</span><br><br><span class="hljs-symbol">&lt;source&gt;</span><br><br>  <span class="hljs-built_in">type</span> tail<br><br>  format json<br><br>  time_key time<br><br>  time_format %<span class="hljs-keyword">N</span><br><br>  pos_file /var/<span class="hljs-built_in">log</span>/td-agent/<span class="hljs-keyword">x</span>.<span class="hljs-built_in">log</span>.pos<br><br>  path /<span class="hljs-built_in">log</span>/<span class="hljs-keyword">x</span>.%d.%<span class="hljs-keyword">m</span>.%Y.<span class="hljs-built_in">log</span><br><br>  <span class="hljs-keyword">tag</span>  <span class="hljs-built_in">log</span>.<span class="hljs-keyword">x</span><br><br>&lt;/<span class="hljs-keyword">source</span>&gt;<br><br>&lt;<span class="hljs-keyword">match</span> <span class="hljs-built_in">log</span>.**&gt;<br><br>   <span class="hljs-built_in">type</span> forward # forward模式，转发给其他服务器处理<br><br>   send_timeout <span class="hljs-number">60</span>s<br><br>   recover_wait <span class="hljs-number">10</span>s<br><br>   heartbeat_interval <span class="hljs-number">1</span>s<br><br>   phi_threshold <span class="hljs-number">16</span><br><br>   hard_timeout <span class="hljs-number">60</span>s<br><br>   heartbeat_type tcp<br><br>   <span class="hljs-symbol">&lt;server&gt;</span>  <br><br>      name auth.shard<br><br>      host td-agent<br><br>      port <span class="hljs-number">24</span><br><br>      weight <span class="hljs-number">1</span><br><br>  &lt;/server&gt;<br><br>  <span class="hljs-symbol">&lt;secondary&gt;</span><br><br>      <span class="hljs-built_in">type</span> <span class="hljs-keyword">file</span><br><br>      path /var/<span class="hljs-built_in">log</span>/td-agent/<span class="hljs-built_in">log</span>-forward-failed<br><br>&lt;/secondary&gt;<br><br>&lt;/<span class="hljs-keyword">match</span>&gt;<br></code></pre></td></tr></table></figure>

<p> 在中转修改tdagent配置</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"><br> #  <span class="hljs-keyword">vim</span> /etc/td-agent/<span class="hljs-keyword">conf</span>.d/td-agent-<span class="hljs-built_in">log</span>.<span class="hljs-keyword">conf</span><br><br> <span class="hljs-symbol">&lt;source&gt;</span><br><br> <span class="hljs-built_in">type</span> forward<br><br> &lt;/<span class="hljs-keyword">source</span>&gt;<br><br>&lt;<span class="hljs-keyword">match</span> <span class="hljs-built_in">log</span>.**&gt;<br><br>   <span class="hljs-built_in">type</span> forest<br><br>   subtype <span class="hljs-keyword">copy</span><br><br>   <span class="hljs-symbol">&lt;template&gt;</span>  <br><br>          <span class="hljs-symbol">&lt;store&gt;</span>      <br><br>          @type elasticsearch<br><br>           host elasticsearch<br><br>          port <span class="hljs-number">92</span><br><br>          ssl_verify false<br><br>          logstash_format true<br><br>          logstash_prefix bilogs<br><br>          logstash_dateformat <span class="hljs-built_in">log</span>.%<span class="hljs-keyword">m</span>.%d.%Y<br><br>          time_key time<br><br>          flush_interval <span class="hljs-number">10</span>s<br><br>          request_timeout <span class="hljs-number">15</span>s<br><br>          reload_on_failure true<br><br>          reconnect_on_error true<br><br>        &lt;/store&gt;<br><br>    &lt;/template&gt;<br><br>&lt;/<span class="hljs-keyword">match</span>&gt;<br><br>kibana上添加<span class="hljs-built_in">index</span>  <span class="hljs-built_in">log</span><br><br># <span class="hljs-keyword">cat</span> /<span class="hljs-keyword">opt</span>/supervisor/<span class="hljs-built_in">log</span>/<span class="hljs-number">12.12</span>.<span class="hljs-number">2017</span>.<span class="hljs-built_in">log</span> |/<span class="hljs-keyword">opt</span>/td-agent/embedded/bin/fluent-<span class="hljs-keyword">cat</span> <span class="hljs-built_in">log</span>.<span class="hljs-keyword">x</span> （非中转方式）<br></code></pre></td></tr></table></figure>

<ol start="2">
<li>不使用中转方式</li>
</ol>
<p>直接发送给elatsearch</p>
<p>在所要添加的服务本机</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><code class="hljs properties"><br><span class="hljs-comment"># vim /etc/td-agent/conf.d/td-agent.conf</span><br><br><span class="hljs-meta">&lt;match</span> <span class="hljs-string">bilog.**&gt;</span><br><br>  <span class="hljs-attr">type</span> <span class="hljs-string">forest</span><br><br>  <span class="hljs-attr">subtype</span> <span class="hljs-string">copy</span><br><br>  <span class="hljs-attr">&lt;template&gt;</span><br><br>      <span class="hljs-attr">&lt;store&gt;</span><br><br>          <span class="hljs-meta">@type</span> <span class="hljs-string">elasticsearch</span><br><br><span class="hljs-comment">          #type_name multiplayer.shard</span><br><br>          <span class="hljs-attr">host</span> <span class="hljs-string">elasticsearch</span><br><br>          <span class="hljs-attr">port</span> <span class="hljs-string">92</span><br><br>          <span class="hljs-attr">ssl_verify</span> <span class="hljs-string">false</span><br><br>          <span class="hljs-attr">logstash_format</span> <span class="hljs-string">true</span><br><br>          <span class="hljs-attr">logstash_prefix</span> <span class="hljs-string">bilogs</span><br><br>          <span class="hljs-attr">logstash_dateformat</span> <span class="hljs-string">bilog%m.%d.%Y</span><br><br>          <span class="hljs-attr">time_key</span> <span class="hljs-string">time</span><br><br>          <span class="hljs-attr">flush_interval</span> <span class="hljs-string">10s</span><br><br>          <span class="hljs-attr">request_timeout</span> <span class="hljs-string">15s</span><br><br>          <span class="hljs-attr">reload_on_failure</span> <span class="hljs-string">true</span><br><br>          <span class="hljs-attr">reconnect_on_error</span> <span class="hljs-string">true</span><br><br>            <span class="hljs-attr">&lt;/store&gt;</span><br><br>        <span class="hljs-attr">&lt;/template&gt;</span><br><br><span class="hljs-attr">&lt;/match&gt;</span><br><br><span class="hljs-comment"># cat *json* | /opt/td-agent/embedded/bin/fluent-cat bilog** (fluent-cat 直接发kibana bilog是tag)</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Python2 HackerRank刷题ing（持续更新）</title>
    <url>/2019/01/16/37_hackerrank/</url>
    <content><![CDATA[<figure class="highlight dts"><table><tr><td class="code"><pre><code class="hljs dts">刷题时在YouTube上看到一个外国小哥在刷题讲解，收藏下<br><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.youtube.com/watch?v=WUeKQc_sRBw</span><br></code></pre></td></tr></table></figure>



<p>Solve Me First</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">def solveMeFirst(a,b):<br>    # Hint:<span class="hljs-built_in"> Type </span>return a+b below<br>return int(a) + int(b)<br><br>num1 = input()<br>num2 = input()<br>res = solveMeFirst(num1,num2)<br><span class="hljs-builtin-name">print</span> res<br></code></pre></td></tr></table></figure>

<p>Simple Array Sum</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#!/bin/python</span><br><br><span class="hljs-built_in">from</span> __future__ import print_function<br><br>import os<br>import sys<br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Complete the simpleArraySum function below.</span><br><span class="hljs-comment">#</span><br>def simpleArraySum(ar):<br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Write your code here.</span><br><span class="hljs-comment">#</span><br><span class="hljs-literal">return</span> <span class="hljs-built_in">sum</span>(ar)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>fptr = <span class="hljs-built_in">open</span>(os.environ[<span class="hljs-string">'OUTPUT_PATH'</span>], <span class="hljs-string">'w'</span>)<br><br>ar_count = int(raw_input())<br><br>ar = map(int, raw_input().rstrip().<span class="hljs-built_in">split</span>())<br><br><span class="hljs-built_in">result</span> = simpleArraySum(ar)<br><br>fptr.<span class="hljs-built_in">write</span>(str(<span class="hljs-built_in">result</span>) + <span class="hljs-string">'\n'</span>)<br><br>fptr.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure>
<p>Compare the Triplets</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment">#!/bin/python</span><br><br>import math<br>import os<br>import <span class="hljs-built_in">random</span><br>import re<br>import sys<br><br><span class="hljs-comment"># Complete the compareTriplets function below.</span><br>def compareTriplets(<span class="hljs-keyword">a</span>, b):<br>out1=<span class="hljs-number">0</span><br>out2=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-built_in">len</span>(<span class="hljs-keyword">a</span>)):<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">a</span>[i] &gt; b[i]:<br>out1+=<span class="hljs-number">1</span><br>elif <span class="hljs-keyword">a</span>[i] == b[i]:<br>pass<br>elif <span class="hljs-keyword">a</span>[i] &lt; b[i]:<br>out2+=<span class="hljs-number">1</span><br><span class="hljs-literal">return</span> out1,out2<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>fptr = <span class="hljs-built_in">open</span>(os.environ[<span class="hljs-string">'OUTPUT_PATH'</span>], <span class="hljs-string">'w'</span>)<br><br><span class="hljs-keyword">a</span> = map(int, raw_input().rstrip().<span class="hljs-built_in">split</span>())<br><br>b = map(int, raw_input().rstrip().<span class="hljs-built_in">split</span>())<br><br><span class="hljs-built_in">result</span> = compareTriplets(<span class="hljs-keyword">a</span>, b)<br><br>fptr.<span class="hljs-built_in">write</span>(<span class="hljs-string">' '</span>.join(map(str, <span class="hljs-built_in">result</span>)))<br>fptr.<span class="hljs-built_in">write</span>(<span class="hljs-string">'\n'</span>)<br><br>fptr.<span class="hljs-built_in">close</span>()<br></code></pre></td></tr></table></figure>
<p>A Very Big Sum</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">#!/bin/<span class="hljs-keyword">python</span><br><br>import math<br>import os<br>import random<br>import re<br>import sys<br><br># Complete the aVeryBigSum <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">below</span>.</span><br>def aVeryBigSum(<span class="hljs-keyword">ar</span>):<br># the_sum = <span class="hljs-number">0</span><br># <span class="hljs-keyword">for</span> i in <span class="hljs-keyword">ar</span>:<br># the_sum += i<br># <span class="hljs-keyword">return</span> the_sum<br><span class="hljs-keyword">res</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i in <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(<span class="hljs-keyword">ar</span>)):<br><span class="hljs-keyword">res</span> += <span class="hljs-keyword">ar</span>[i]<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">res</span><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>fptr = <span class="hljs-keyword">open</span>(os.environ[<span class="hljs-string">'OUTPUT_PATH'</span>], <span class="hljs-string">'w'</span>)<br><br>ar_count = <span class="hljs-keyword">int</span>(raw_input())<br><br><span class="hljs-keyword">ar</span> = <span class="hljs-keyword">map</span>(long, raw_input().rstrip().<span class="hljs-keyword">split</span>())<br><br>result = aVeryBigSum(<span class="hljs-keyword">ar</span>)<br><br>fptr.<span class="hljs-keyword">write</span>(str(result) + <span class="hljs-string">'\n'</span>)<br><br>fptr.<span class="hljs-keyword">close</span>()<br></code></pre></td></tr></table></figure>

<p>Diagonal Difference</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">#!/bin/python</span><br><br>import math<br>import os<br>import random<br>import re<br>import sys<br><br><span class="hljs-section"># Complete the diagonalDifference function below.</span><br>def diagonalDifference(arr):<br><br>n=len(arr)<br>sum1 = 0<br>sum2 = 0<br>for i in range(n):<br>sum1 += int(arr[<span class="hljs-string">i</span>][<span class="hljs-symbol">i</span>])<br>sum2 += int(arr[<span class="hljs-string">i</span>][<span class="hljs-symbol">n-i-1</span>])<br>return abs(sum1 - sum2)<br><br>if <span class="hljs-strong">__name__</span> == '<span class="hljs-strong">__main__</span>':<br>fptr = open(os.environ['OUTPUT_PATH'], 'w')<br><br>n = int(raw_input())<br><br>arr = []<br><br>for _ in xrange(n):<br>arr.append(map(int, raw_input().rstrip().split()))<br><br>result = diagonalDifference(arr)<br><br>fptr.write(str(result) + '\n')<br><br>fptr.close()<br></code></pre></td></tr></table></figure>

<p>Plus Minus</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><code class="hljs typescript">#!<span class="hljs-regexp">/bin/</span>python<br><br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> decimal <span class="hljs-keyword">import</span> Decimal<br># Complete the plusMinus <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">below</span>.</span><br><span class="hljs-function"><span class="hljs-title">def</span> <span class="hljs-title">plusMinus</span>(<span class="hljs-params">arr</span>):</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">positive</span> = 0</span><br><span class="hljs-function"><span class="hljs-title">negative</span> = 0</span><br><span class="hljs-function"><span class="hljs-title">zero</span> = 0</span><br><span class="hljs-function"><span class="hljs-title">n</span>=<span class="hljs-title">len</span>(<span class="hljs-params">arr</span>)</span><br><span class="hljs-function"><span class="hljs-title">for</span> <span class="hljs-title">i</span> <span class="hljs-title">in</span> <span class="hljs-title">range</span>(<span class="hljs-params">len(arr)</span>):</span><br><span class="hljs-function"><span class="hljs-title">if</span> <span class="hljs-title">arr</span>[<span class="hljs-title">i</span>] &gt; 0:</span><br><span class="hljs-function"><span class="hljs-title">positive</span> += 1</span><br><span class="hljs-function"><span class="hljs-title">elif</span> <span class="hljs-title">arr</span>[<span class="hljs-title">i</span>] &lt; 0:</span><br><span class="hljs-function"><span class="hljs-title">negative</span> += 1</span><br><span class="hljs-function"><span class="hljs-title">elif</span> <span class="hljs-title">arr</span>[<span class="hljs-title">i</span>] == 0:</span><br><span class="hljs-function"><span class="hljs-title">zero</span> += 1</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params">positive/Decimal(n)</span>)</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params">negative/Decimal(n)</span>)</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params">zero/Decimal(n)</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">if</span> <span class="hljs-title">__name__</span> == '<span class="hljs-title">__main__</span>':</span><br><span class="hljs-function"><span class="hljs-title">n</span> = <span class="hljs-title">int</span>(<span class="hljs-params">raw_input()</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">arr</span> = <span class="hljs-title">map</span>(<span class="hljs-params">int, raw_input().rstrip().split()</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">plusMinus</span>(<span class="hljs-params">arr</span>)</span><br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/0M50r5Kk" target="_blank" rel="noopener"><img src="https://i.postimg.cc/B6HYYXqK/hacker.png" alt="hacker.png"></a><br>虽然刷的题很简单，但看到这个还是很感动，因为自己真的用心去做了，接下来要更加努力继续学习刷题ing</p>
<p>Staircase</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><code class="hljs typescript">#!<span class="hljs-regexp">/bin/</span>python<br><br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> sys<br><br># Complete the staircase <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">below</span>.</span><br><span class="hljs-function"><span class="hljs-title">def</span> <span class="hljs-title">staircase</span>(<span class="hljs-params">n</span>):</span><br><span class="hljs-function"><span class="hljs-title">for</span> <span class="hljs-title">i</span> <span class="hljs-title">in</span> <span class="hljs-title">range</span>(<span class="hljs-params">1,n+1</span>):</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params">(<span class="hljs-string">'#'</span> * i).rjust(n,<span class="hljs-string">' '</span>)</span>)</span><br><span class="hljs-function"><span class="hljs-title">if</span> <span class="hljs-title">__name__</span> == '<span class="hljs-title">__main__</span>':</span><br><span class="hljs-function"><span class="hljs-title">n</span> = <span class="hljs-title">int</span>(<span class="hljs-params">raw_input()</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">staircase</span>(<span class="hljs-params">n</span>)</span><br></code></pre></td></tr></table></figure>

<p>Mini-Max Sum</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><code class="hljs typescript">#!<span class="hljs-regexp">/bin/</span>python<br><br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> sys<br><br># Complete the miniMaxSum <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">below</span>.</span><br><span class="hljs-function"><span class="hljs-title">def</span> <span class="hljs-title">miniMaxSum</span>(<span class="hljs-params">arr</span>):</span><br><span class="hljs-function"><span class="hljs-title">arr</span>=<span class="hljs-title">sorted</span>(<span class="hljs-params">arr</span>)</span><br><span class="hljs-function"><span class="hljs-title">min</span> = <span class="hljs-title">sum</span>(<span class="hljs-params">arr[:-1]</span>)</span><br><span class="hljs-function"><span class="hljs-title">max</span> = <span class="hljs-title">sum</span>(<span class="hljs-params">arr[1:]</span>)</span><br><span class="hljs-function"><span class="hljs-title">print</span>(<span class="hljs-params">'&#123;&#125; &#123;&#125;'.format(min,max)</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">if</span> <span class="hljs-title">__name__</span> == '<span class="hljs-title">__main__</span>':</span><br><span class="hljs-function"><span class="hljs-title">arr</span> = <span class="hljs-title">map</span>(<span class="hljs-params">int, raw_input().rstrip().split()</span>)</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">miniMaxSum</span>(<span class="hljs-params">arr</span>)</span><br></code></pre></td></tr></table></figure>

<p>Birthday Cake Candles</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">#!/bin/<span class="hljs-keyword">python</span><br><br>import math<br>import os<br>import random<br>import re<br>import sys<br><br># Complete the birthdayCakeCandles <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">below</span>.</span><br>def birthdayCakeCandles(<span class="hljs-keyword">ar</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">ar</span>.<span class="hljs-built_in">count</span>(<span class="hljs-built_in">max</span>(<span class="hljs-keyword">ar</span>))<br>//<span class="hljs-keyword">return</span>(sum([i==<span class="hljs-built_in">max</span>(<span class="hljs-keyword">ar</span>) <span class="hljs-keyword">for</span> i in <span class="hljs-keyword">ar</span>]) )<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>fptr = <span class="hljs-keyword">open</span>(os.environ[<span class="hljs-string">'OUTPUT_PATH'</span>], <span class="hljs-string">'w'</span>)<br><br>ar_count = <span class="hljs-keyword">int</span>(raw_input())<br><br><span class="hljs-keyword">ar</span> = <span class="hljs-keyword">map</span>(<span class="hljs-keyword">int</span>, raw_input().rstrip().<span class="hljs-keyword">split</span>())<br><br>result = birthdayCakeCandles(<span class="hljs-keyword">ar</span>)<br><br>fptr.<span class="hljs-keyword">write</span>(str(result) + <span class="hljs-string">'\n'</span>)<br><br>fptr.<span class="hljs-keyword">close</span>()<br></code></pre></td></tr></table></figure>

<p>Time Conversion</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#!/bin/python</span><br><br>from __future__ import print_function<br><br>import os<br>import sys<br><br><span class="hljs-meta">#</span><br><span class="hljs-meta"># Complete the timeConversion function below.</span><br><span class="hljs-meta">#</span><br>def timeConversion(s):<br><span class="hljs-meta">#</span><br><span class="hljs-meta"># Write your code here.</span><br><span class="hljs-meta">#</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(s[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>])&lt;<span class="hljs-number">12</span> and s[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>]==<span class="hljs-string">'PM'</span>):<br>hours=str(<span class="hljs-keyword">int</span>(s[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>])+<span class="hljs-number">12</span>)<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(s[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>])&lt;<span class="hljs-number">12</span> and s[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>]==<span class="hljs-string">'AM'</span>):<br>hours=s[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(s[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>])==<span class="hljs-number">12</span> and s[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>]==<span class="hljs-string">'AM'</span>):<br>hours=<span class="hljs-string">'00'</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(s[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>])==<span class="hljs-number">12</span> and s[<span class="hljs-number">8</span>:<span class="hljs-number">10</span>]==<span class="hljs-string">'PM'</span>):<br>hours=<span class="hljs-string">'12'</span><br><br><span class="hljs-keyword">return</span>(hours+s[<span class="hljs-number">2</span>:<span class="hljs-number">8</span>])<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>f = open(os.environ[<span class="hljs-string">'OUTPUT_PATH'</span>], <span class="hljs-string">'w'</span>)<br><br>s = raw_input()<br><br>result = timeConversion(s)<br><br>f.write(result + <span class="hljs-string">'\n'</span>)<br><br>f.close()<br></code></pre></td></tr></table></figure>
<p>这个题遇到2个问题，一个是时间，原来12AM是00，12PM是12，我一直以为晚上12点就是12PM，也就是00，其实到现在我都是这么认为的。。被时间搞糊涂了。还有一个问题是数组切片，数组[起点：终点：步长]</p>
<p><a href="https://postimg.cc/ZWh3CYXG" target="_blank" rel="noopener"><img src="https://i.postimg.cc/mgPSptjg/easy.png" alt="easy.png"></a><br>刷到这里，提示之前的题都是热身项目！！！挑战才刚刚开始。 /(ㄒoㄒ)/<del>~  以泪洗面</del></p>
]]></content>
  </entry>
  <entry>
    <title>ansible</title>
    <url>/2017/12/01/3_ansible/</url>
    <content><![CDATA[<p>一. 设置ansible非root用户的免密登陆<br>1.<strong>将A服务器的公钥拷贝到B服务器的 <em>.ssh/authorized_keys</em> 中，如图所示:</strong></p>
<p><a href="https://postimg.cc/gXdPZqWD" target="_blank" rel="noopener"><img src="https://i.postimg.cc/C1nM9mrW/1.jpg" alt="1.jpg"></a></p>
<p>2.<strong>执行ansible时，在hosts文件中指定主机IP的同时指定用户,如图所示:</strong></p>
<p><a href="https://postimg.cc/NyRcFCWF" target="_blank" rel="noopener"><img src="https://i.postimg.cc/vmNHPphr/2.jpg" alt="2.jpg"></a><br>3.<strong>执行ansible测试ansible的ping模块和setup模块，如图所示：</strong><br/></p>
<p><a href="https://postimg.cc/qhLHXhBd" target="_blank" rel="noopener"><img src="https://i.postimg.cc/2ypjYhP3/3.jpg" alt="3.jpg"></a><br><a href="https://postimg.cc/H8kDSYj8" target="_blank" rel="noopener"><img src="https://i.postimg.cc/XqwjYXbL/4.jpg" alt="4.jpg"></a></p>
<p>二. ansible —— fact<br>Fact 是 ansible 用来采集目标系统信息的，具体是用setup模块来采集的。<br>&lt;br/ &gt;本地fact：<br>ansible提供了另外一种为某个主机设定fact的机制。可以将一个或多个文件放置在目标主机的<em>/etc/ansible/facts.d</em>目录下，如果该目录的文件是以下形式的，ansible会自动识别（.ini/JSON/）以这种形式加载的fact是key为ansible_local的特殊变量。</p>
<p>三. ansible —— 优先级<br>如果相同变量被定义了多次，优先级会决定哪个值将最终被赋予该变量。基本的优先级规则是：</p>
<ol>
<li>ansible-playbook -e var=value (最高优先级)</li>
<li>通过inventory文件或者YAML文件定义的主机变量</li>
<li>Fact</li>
<li>在role的<em>defaults/main.yml</em>文件中</li>
</ol>
<p>四. ansible —— 取消交互<br>$ vim /etc/ansible/ansible.cfg</p>
<p> [defaults]<br/><br> host<em>_</em>key_checking = False</p>
<p>五. ansible —— 实例<br>定义变量<br/></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml">   <span class="hljs-attr">vars:</span><br><span class="hljs-attr">user:</span> <span class="hljs-string">"<span class="hljs-template-variable">&#123;&#123; ansible_ssh_user &#125;&#125;</span>"</span><br><span class="hljs-attr">proj_name:</span> <span class="hljs-string">mezzanine-example</span><br><span class="hljs-attr">venv_home:</span> <span class="hljs-string">"<span class="hljs-template-variable">&#123;&#123; ansible_env.HOME &#125;&#125;</span>"</span><br><span class="hljs-attr">venv_path:</span> <span class="hljs-string">"<span class="hljs-template-variable">&#123;&#123; venv_home &#125;&#125;</span>/<span class="hljs-template-variable">&#123;&#123; proj_name &#125;&#125;</span>"</span><br><span class="hljs-attr">proj_path:</span> <span class="hljs-string">"<span class="hljs-template-variable">&#123;&#123; venv_path &#125;&#125;</span>/<span class="hljs-template-variable">&#123;&#123; proj_dirname &#125;&#125;</span>"</span><br>   <span class="hljs-attr">vars_files:</span><br>	<span class="hljs-bullet">-</span> <span class="hljs-string">secrets.yml</span><br></code></pre></td></tr></table></figure>

<p> 安装系统软件包<br/></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><code class="hljs markdown">(批量安装)<br><span class="hljs-bullet">    - </span>name: install apt packages<br><span class="hljs-code">	apt: pkg=&#123;&#123; item &#125;&#125; update_cache=yes cache_valid_time=3600</span><br><span class="hljs-code">	sudo: Ture</span><br><span class="hljs-code">	with_items:</span><br><span class="hljs-bullet">	  - </span>git<br><span class="hljs-bullet">	  - </span>libjpeg-dev<br><span class="hljs-bullet">	  - </span>libpq-dev<br><span class="hljs-bullet">	  - </span>memcached<br><span class="hljs-bullet">	  - </span>nginx<br></code></pre></td></tr></table></figure>

<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">（单个安装）<br>- name: install git<br>  apt: <span class="hljs-attribute">pkg</span>=git<br><br>- name: install libjpeg-dev<br>  apt: <span class="hljs-attribute">pkg</span>=libjpeg-dev<br></code></pre></td></tr></table></figure>

<figure class="highlight applescript"><table><tr><td class="code"><pre><code class="hljs applescript">（指定版本安装）<br>	- <span class="hljs-built_in">name</span>: python packages<br>	  pip: <span class="hljs-built_in">name</span>=&#123;&#123; <span class="hljs-built_in">item</span>.<span class="hljs-built_in">name</span> &#125;&#125; <span class="hljs-built_in">version</span>=&#123;&#123; <span class="hljs-built_in">item</span>.<span class="hljs-built_in">version</span> &#125;&#125; virtualenv=&#123;&#123; venv_path &#125;&#125;<br>	  with_items:<br>	    - &#123;<span class="hljs-built_in">name</span>: mezzanine,<span class="hljs-built_in">version</span>: <span class="hljs-number">3.1</span><span class="hljs-number">.10</span>&#125;<br>	    - &#123;<span class="hljs-built_in">name</span>: dunicorn, <span class="hljs-built_in">version</span>: <span class="hljs-number">19.1</span><span class="hljs-number">.1</span>&#125;<br>	    - &#123;<span class="hljs-built_in">name</span>: python-memcached, <span class="hljs-built_in">version</span>: <span class="hljs-number">1.5</span><span class="hljs-number">.3</span>&#125;<br></code></pre></td></tr></table></figure>

<p>设置配置文件</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">- name: <span class="hljs-builtin-name">set</span> the nginx<span class="hljs-built_in"> config </span>file<br>  template: <span class="hljs-attribute">src</span>=templates/nginx.conf.j2<br>  		<span class="hljs-attribute">dest</span>=/etc/nginx/sites-available/mezzanine.conf<br>  notify: restart nginx<br>  sudo : <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure>

<p>设置handler</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">handlers:</span><br>	<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">supervisor</span><br>	  <span class="hljs-attr">supervisorctl:</span> <span class="hljs-string">name=gunicorn_mezzanine</span> <span class="hljs-string">state=restarted</span><br>	  <span class="hljs-attr">sudo:</span> <span class="hljs-literal">True</span><br><br>	<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br>	  <span class="hljs-attr">service:</span> <span class="hljs-string">name=nginx</span> <span class="hljs-string">state=restarted</span><br>	  <span class="hljs-attr">sudo:</span> <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure>

<p>启用nginx配置文件</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">- name: <span class="hljs-builtin-name">enable</span> the nginx<span class="hljs-built_in"> config </span>file<br>file:<br>  src: /etc/nginx/sites-available/mezzanine.conf<br>  dest: /etc/nginx/sites-enabled/mezzanine.conf<br>  state: link<br>notify: restart nginx<br>sudo: <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure>

<p>语法检查</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">$ ansible-playbook <span class="hljs-comment">--syntax-check playbook.yml</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>自动化</tag>
      </tags>
  </entry>
  <entry>
    <title>Curator Elasticsearch indices 管理工具</title>
    <url>/2019/01/11/35_ES-curator/</url>
    <content><![CDATA[<p>ES索引数据太大，kibana查询数据总是内存爆满挂掉，为了方便管理索引文件，使用curator工具</p>
<p>curator下载地址：<br><a href="https://github.com/elastic/curator" target="_blank" rel="noopener">https://github.com/elastic/curator</a></p>
<p>ES-curator/curator-config/curator配置文件编写</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">##curator.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Remember, leave a key empty if there is no value.  None will be a string,</span><br><span class="hljs-comment"># not a Python "NoneType"</span><br><span class="hljs-attr">client:</span><br>  <span class="hljs-attr">hosts:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">'es-curator-ip'</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">'es-curator-ip'</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">'es-curator-ip'</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">9200</span><br>  <span class="hljs-attr">url_prefix:</span><br>  <span class="hljs-attr">use_ssl:</span> <span class="hljs-literal">False</span><br>  <span class="hljs-attr">certificate:</span><br>  <span class="hljs-attr">client_cert:</span><br>  <span class="hljs-attr">client_key:</span><br>  <span class="hljs-attr">aws_key:</span><br>  <span class="hljs-attr">aws_secret_key:</span><br>  <span class="hljs-attr">aws_region:</span><br>  <span class="hljs-attr">ssl_no_validate:</span> <span class="hljs-literal">False</span><br>  <span class="hljs-attr">http_auth:</span><br>  <span class="hljs-attr">timeout:</span> <span class="hljs-number">30</span><br>  <span class="hljs-attr">master_only:</span> <span class="hljs-literal">False</span><br><br><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">loglevel:</span> <span class="hljs-string">INFO</span><br>  <span class="hljs-attr">logfile:</span> <span class="hljs-string">/data/ES-curator/curator-config/log/curator.log</span><br>  <span class="hljs-attr">logformat:</span> <span class="hljs-string">default</span><br>  <span class="hljs-attr">blacklist:</span> <span class="hljs-string">['elasticsearch',</span> <span class="hljs-string">'urllib3'</span><span class="hljs-string">]</span><br></code></pre></td></tr></table></figure>


<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">##close.yml 按时间匹配，关闭15天以前的index</span><br><span class="hljs-attr">actions:</span><br>  <span class="hljs-attr">1:</span><br>    <span class="hljs-attr">action:</span> <span class="hljs-string">close</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">&gt;-</span><br>      <span class="hljs-string">Close</span> <span class="hljs-string">indices</span> <span class="hljs-string">older</span> <span class="hljs-string">than</span> <span class="hljs-number">15</span> <span class="hljs-string">days</span> <span class="hljs-string">(based</span> <span class="hljs-string">on</span> <span class="hljs-string">index</span> <span class="hljs-string">name),</span> <span class="hljs-string">for</span> <span class="hljs-string">logstash-</span><br>      <span class="hljs-string">prefixed</span> <span class="hljs-string">indices.</span><br>    <span class="hljs-attr">options:</span><br>      <span class="hljs-attr">delete_aliases:</span> <span class="hljs-literal">False</span><br>      <span class="hljs-attr">timeout_override:</span> <span class="hljs-number">180</span><br>      <span class="hljs-attr">continue_if_exception:</span> <span class="hljs-literal">False</span><br>      <span class="hljs-attr">disable_action:</span> <span class="hljs-literal">False</span><br>    <span class="hljs-attr">filters:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">pattern</span><br>      <span class="hljs-attr">kind:</span> <span class="hljs-string">prefix</span><br>      <span class="hljs-attr">value:</span> <span class="hljs-string">kbilogs-logics</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">age</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">name</span><br>      <span class="hljs-attr">direction:</span> <span class="hljs-string">older</span><br>      <span class="hljs-attr">timestring:</span> <span class="hljs-string">'%Y.%m.%d'</span><br>      <span class="hljs-attr">unit:</span> <span class="hljs-string">days</span><br>      <span class="hljs-attr">unit_count:</span> <span class="hljs-number">15</span><br></code></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">##delete.yml 按时间匹配，删除365天之前的index</span><br><span class="hljs-attr">actions:</span><br>  <span class="hljs-attr">1:</span><br>    <span class="hljs-attr">action:</span> <span class="hljs-string">delete_indices</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">"delete pay index"</span><br>    <span class="hljs-attr">options:</span><br>      <span class="hljs-attr">ignore_empty_list:</span> <span class="hljs-literal">True</span><br>      <span class="hljs-attr">timeout_override:</span> <span class="hljs-number">500</span><br>      <span class="hljs-attr">disable_action:</span> <span class="hljs-literal">False</span><br>    <span class="hljs-attr">filters:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">pattern</span><br>      <span class="hljs-attr">kind:</span> <span class="hljs-string">regex</span><br>      <span class="hljs-attr">value:</span> <span class="hljs-string">'^(kbilogs-logics-pay-200|kbilogs-logics-pay-201|kbilogs-logics-pay-202|kbilogs-logics-pay-203|kbilogs-logics-pay-204).*$'</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">age</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">creation_date</span><br>      <span class="hljs-attr">direction:</span> <span class="hljs-string">older</span><br>      <span class="hljs-attr">timestring:</span> <span class="hljs-string">'%Y.%m.%d'</span><br>      <span class="hljs-attr">unit:</span> <span class="hljs-string">days</span><br>      <span class="hljs-attr">unit_count:</span> <span class="hljs-number">365</span><br>  <span class="hljs-attr">2:</span><br>    <span class="hljs-attr">action:</span> <span class="hljs-string">delete_indices</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">"delete game index"</span><br>    <span class="hljs-attr">options:</span><br>      <span class="hljs-attr">ignore_empty_list:</span> <span class="hljs-literal">True</span><br>      <span class="hljs-attr">timeout_override:</span> <span class="hljs-number">500</span><br>      <span class="hljs-attr">disable_action:</span> <span class="hljs-literal">False</span><br>    <span class="hljs-attr">filters:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">pattern</span><br>      <span class="hljs-attr">kind:</span> <span class="hljs-string">regex</span><br>      <span class="hljs-attr">value:</span> <span class="hljs-string">'^(kbilogs-logics-gamex-200|kbilogs-logics-gamex-201|kbilogs-logics-gamex-202|kbilogs-logics-gamex-203|kbilogs-logics-gamex-204).*$'</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">age</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">creation_date</span><br>      <span class="hljs-attr">direction:</span> <span class="hljs-string">older</span><br>      <span class="hljs-attr">timestring:</span> <span class="hljs-string">'%Y.%m.%d'</span><br>      <span class="hljs-attr">unit:</span> <span class="hljs-string">days</span><br>      <span class="hljs-attr">unit_count:</span> <span class="hljs-number">60</span><br></code></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">##merge_index_rule.yml  合并一天前的index</span><br><span class="hljs-attr">actions:</span><br>  <span class="hljs-attr">1:</span><br>    <span class="hljs-attr">action:</span> <span class="hljs-string">forcemerge</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">"forcemerge pay index"</span><br>    <span class="hljs-attr">options:</span><br>      <span class="hljs-attr">ignore_empty_list:</span> <span class="hljs-literal">True</span><br>      <span class="hljs-attr">timeout_override:</span> <span class="hljs-number">50000</span><br>      <span class="hljs-attr">disable_action:</span> <span class="hljs-literal">False</span><br>      <span class="hljs-attr">max_num_segments:</span> <span class="hljs-number">1</span><br>      <span class="hljs-attr">delay:</span> <span class="hljs-number">120</span><br>    <span class="hljs-attr">filters:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">pattern</span><br>      <span class="hljs-attr">kind:</span> <span class="hljs-string">regex</span><br>      <span class="hljs-attr">value:</span> <span class="hljs-string">'^(kbilogs-logics-pay-200|kbilogs-logics-pay-201|kbilogs-logics-pay-202|kbilogs-logics-pay-203|kbilogs-logics-pay-204).*$'</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">filtertype:</span> <span class="hljs-string">age</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">creation_date</span><br>      <span class="hljs-attr">direction:</span> <span class="hljs-string">older</span><br>      <span class="hljs-attr">timestring:</span> <span class="hljs-string">'%Y.%m.%d'</span><br>      <span class="hljs-attr">unit:</span> <span class="hljs-string">days</span><br>      <span class="hljs-attr">unit_count:</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## /etc/init.d/curator-manage-index     启动脚本</span><br><br><span class="hljs-meta">#!/bin/bash</span><br><br>DOCKER_IMG=<span class="hljs-string">'curator:v5.5.4'</span><br>DOCKER_MOUNT_DIR=<span class="hljs-string">'/data/ES-curator/curator-config/:/data/ES-curator/curator-config'</span><br>CURATOR_MAIN_CONFIG=<span class="hljs-string">'/data/ES-curator/curator-config/curator.yml'</span><br>CURATOR_ACTION_CLOSE_CONFIG=<span class="hljs-string">'/data/ES-curator/curator-config/close.yml'</span><br>CURATOR_ACTION_OPEN_CONFIG=<span class="hljs-string">'/data/ES-curator/curator-config/open_index_rule.yml'</span><br>CURATOR_ACTION_MERGE_CONFIG=<span class="hljs-string">'/data/ES-curator/curator-config/merge_index_rule.yml'</span><br>CURATOR_ACTION_DELETE_CONFIG=<span class="hljs-string">'/data/ES-curator/curator-config/delete.yml'</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">close</span></span>()&#123;<br>docker run -d --rm -v <span class="hljs-variable">$&#123;DOCKER_MOUNT_DIR&#125;</span> <span class="hljs-variable">$&#123;DOCKER_IMG&#125;</span> --config <span class="hljs-variable">$&#123;CURATOR_MAIN_CONFIG&#125;</span> <span class="hljs-variable">$&#123;CURATOR_ACTION_CLOSE_CONFIG&#125;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">open</span></span>()&#123;<br>docker run -d --rm -v <span class="hljs-variable">$&#123;DOCKER_MOUNT_DIR&#125;</span> <span class="hljs-variable">$&#123;DOCKER_IMG&#125;</span> --config <span class="hljs-variable">$&#123;CURATOR_MAIN_CONFIG&#125;</span> <span class="hljs-variable">$&#123;CURATOR_ACTION_OPEN_CONFIG&#125;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">merge</span></span>()&#123;<br>docker run -d --rm -v <span class="hljs-variable">$&#123;DOCKER_MOUNT_DIR&#125;</span> <span class="hljs-variable">$&#123;DOCKER_IMG&#125;</span> --config <span class="hljs-variable">$&#123;CURATOR_MAIN_CONFIG&#125;</span> <span class="hljs-variable">$&#123;CURATOR_ACTION_MERGE_CONFIG&#125;</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">delete</span></span>()&#123;<br>docker run -d --rm -v <span class="hljs-variable">$&#123;DOCKER_MOUNT_DIR&#125;</span> <span class="hljs-variable">$&#123;DOCKER_IMG&#125;</span> --config <span class="hljs-variable">$&#123;CURATOR_MAIN_CONFIG&#125;</span> <span class="hljs-variable">$&#123;CURATOR_ACTION_DELETE_CONFIG&#125;</span><br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span> <span class="hljs-keyword">in</span><br>    close)<br>    close<br>    ;;<br>    open)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Edit <span class="hljs-variable">$&#123;CURATOR_ACTION_OPEN_CONFIG&#125;</span> then run this comand again"</span><br>    open<br>    ;;<br>    merge)<br>    merge<br>    ;;<br>    delete)<br>    delete<br>    ;;<br>    cron)<br>    delete &amp;&amp; merge &amp;&amp; close<br>    ;;<br>    *)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Usage: <span class="hljs-variable">$0</span> close|open|merge|delete|cron"</span><br><span class="hljs-keyword">esac</span><br></code></pre></td></tr></table></figure>

<p>配置文件和启动脚本编写好后，将启动脚本挂到定时任务里，每天定时执行即可</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins插件解决任务超时堆积问题</title>
    <url>/2019/02/22/42_jenkins%E6%8F%92%E4%BB%B6-timeout/</url>
    <content><![CDATA[<p>遇到的问题： 现在线上jenkins有很多任务定时执行，有的是连环任务，简单说就是执行完一个自动触发执行下一个，最后达到想要的结果，在使用中遇到一个问题就是其中一环失败或者超时后序的任务便不会再执行了，超时时反而还会任务堆积<br>解决办法： jenkins的一个插件 build timeout plugin</p>
<ol>
<li>安装插件，如果自动安装失败，可以手动下载插件再上传<br><a href="https://postimg.cc/9rT2LczF" target="_blank" rel="noopener"><img src="https://i.postimg.cc/CLrKL1gD/jenkins-time1.png" alt="jenkins-time1.png"></a></li>
<li>在任务面板配置，构建环境中勾选About the build if it’s stuck，根据任务执行时间设置超时时间，以及设置动作，默认动作是超时流产，添加一个description方便查询任务失败原因<br><a href="https://postimg.cc/PNCT8WjD" target="_blank" rel="noopener"><img src="https://i.postimg.cc/bYTJWgVm/jenkins-time2.png" alt="jenkins-time2.png"></a></li>
<li>测试结果<br><a href="https://postimg.cc/zHHNZrj7" target="_blank" rel="noopener"><img src="https://i.postimg.cc/VvDkts0x/jenkins-time3.png" alt="jenkins-time3.png"></a></li>
<li>还可以添加报警，当任务超时发送报警邮件<br><a href="https://postimg.cc/QVvsgF8y" target="_blank" rel="noopener"><img src="https://i.postimg.cc/m2gDs90B/jenkins-time4.png" alt="jenkins-time4.png"></a></li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Git服务器</title>
    <url>/2019/02/13/41_%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<figure class="highlight ruby"><table><tr><td class="code"><pre><code class="hljs ruby"><span class="hljs-number">1</span>. 安装git<br><span class="hljs-comment"># yum install -y git</span><br><span class="hljs-number">2</span>. 创建git用户<br><span class="hljs-comment"># useradd git</span><br><span class="hljs-number">3</span>. 初始化git仓库<br><span class="hljs-comment"># git init --bare new.git</span><br><span class="hljs-number">4</span>. 更改git仓库权限，不更改权限测试时不能推送和拉取代码<br><span class="hljs-comment"># chown -R git:git new.git</span><br><span class="hljs-number">5</span>. 设置git用户为不可登录状态，出于安全考虑<br><span class="hljs-comment"># vim /etc/passwd</span><br><span class="hljs-symbol">git:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span>,,,<span class="hljs-symbol">:/home/git</span><span class="hljs-symbol">:/bin/bash</span> 改为<br><span class="hljs-symbol">git:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span>,,,<span class="hljs-symbol">:/home/git</span><span class="hljs-symbol">:/usr/bin/git-shell</span><br><span class="hljs-number">6</span>. 本地测试克隆远程仓库<br><span class="hljs-comment"># git clone git<span class="hljs-doctag">@server</span>:/data/new.git</span><br><span class="hljs-number">7</span>. 公钥可放 /home/git/.ssh/authorized_keys下<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>记录一次mysql性能调优</title>
    <url>/2019/02/26/43_mysql%E8%B0%83%E4%BC%98/</url>
    <content><![CDATA[<p>####userinfo to mysql 优化<br>主机配置： aws m4.xlarge 4核16G MySQL 5.6<br>优化原因： userinfo to db 任务时有超时的情况发生，并且任务执行时间特别长，最大的一个库导入MySQL是4个小时<br>优化过程： 通过配置mysql innodb参数提高写入速度<br>具体配置如下：<br><a href="https://postimg.cc/47mkVgrG" target="_blank" rel="noopener"><img src="https://i.postimg.cc/Kz5GXcf1/mysql.png" alt="mysql.png"></a></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">1</span>） innodb_buffer_pool_size<br>表示缓冲池字节大小，InnoDB缓存表和索引数据的内存区域。Innodb的缓冲池会缓存数据和索引，值越大，IO读写就越少，默认的值是<span class="hljs-number">128</span>M，如果只用Innodb，可以把这个值设为内存的<span class="hljs-number">70</span>%<span class="hljs-number">-80</span>%<br><br><span class="hljs-number">2</span>） innodb_buffer_pool_instances<br>主要用于将innodb buffer pool进行划分，开启多个内存缓冲池，把需要缓冲的数据hash到不同的缓冲池中，这样可以并行的内存读写,可以提高并发能力，并且减少了不同线程读写造成的缓冲页。使用大的 buffer_pool 时，innodb_buffer_pool_instances=<span class="hljs-number">1</span> 的表现最棒<br><br><span class="hljs-number">3</span>） innodb_log_file_size<br>表示在一个日志组每个日志文件的字节大小。该值越大，缓冲池中必要的检查点刷新活动就会越少，节省磁盘I/O。但是越大的日志文件，mysql的崩溃恢复就越慢<br><br><span class="hljs-number">4</span>)  innodb_log_buffer_size<br>表示InnoDB写入到磁盘上的日志文件时使用的缓冲区的字节数，默认值为<span class="hljs-number">8</span>M。一个大的日志缓冲区允许大量的事务在提交之前不写日志到磁盘。因此，如果你有很多事务的更新，插入或删除很操作，通过这个参数会大量的节省了磁盘I/O。<br><br><span class="hljs-number">5</span>） innodb_flush_log_at_trx_commit<br>用于设置这两个缓存的刷新，默认innodb_flush_log_at_trx_commit=<span class="hljs-number">1</span>，表示在每次事务提交的时候，都把log buffer刷到文件系统中去，并且调用文件系统的“flush”操作将缓存刷新到磁盘上去。这样的话数据库对IO的要求就非常高，如果底层的硬件提供的IOPS比较差，那么MySQL数据库的并发很快就会由于硬件IO的问题而无法提升，innodb_flush_log_at_trx_commit=<span class="hljs-number">0</span>时，每隔一秒把log buffer刷到文件系统中去，并且调用文件系统的“flush”操作将缓存刷新到磁盘上去。这样的话可能丢失<span class="hljs-number">1</span>秒的事务数据。innodb_flush_log_at_trx_commit=<span class="hljs-number">2</span>时，在每次事务提交的时候会把log buffer刷到文件系统中去，但是每隔一秒调用文件系统的“flush”操作将缓存刷新到磁盘上去。如果只是MySQL数据库挂掉了，由于文件系统没有问题，那么对应的事务数据并没有丢失。只有在数据库所在的主机操作系统损坏或者突然掉电的情况下，数据库的事务数据可能丢失<span class="hljs-number">1</span>秒之类的事务数据。<br></code></pre></td></tr></table></figure>

<p>调优结果： mysql调优后，任务进程时间缩短了将近一半</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>整理一些有关监控的一些事情</title>
    <url>/2019/04/09/44_%E6%9C%89%E5%85%B3%E7%9B%91%E6%8E%A7%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>之前整理过现在线上使用的监控搭建过程，然鹅当时并没有深入理解，只是会照葫芦画瓢的搭建出来使用而已，近期线上出现了一些有关监控方面的问题才开始深入去了解</p>
<p>现在监控的架构是这样的;</p>
<figure class="highlight xl"><table><tr><td class="code"><pre><code class="hljs xl">collectd+graphite+grafana<br><br>graphite数据流向<br><span class="hljs-function"><span class="hljs-title">collectd</span>(收集数据可以配置使用哪些监控项) ----&gt;</span> <span class="hljs-function"><span class="hljs-title">carbon</span>-c-relay(过滤聚合转发) ----&gt;</span> <span class="hljs-function"><span class="hljs-title">go</span>-carbon(存储设置) ----&gt;</span> <span class="hljs-function"><span class="hljs-title">graphite</span>(whisper、uswgi、nginx) ----&gt;</span> granfana(展示)<br></code></pre></td></tr></table></figure>

<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">问题一 carbon-c-relay ：<br><br>现在版本： carbon-c-relay-1.10-1.el6.x86_64.rpm<br><br>发现问题：程序崩溃<br><br>系统报错：<br><br>Feb  3 03:10:03 ip-10-33-3-12 kernel: [8905913.334999] carbon-c-relay[5707]: segfault at 2fce8<span class="hljs-built_in"> ip </span>000000000040dacf sp 00007f9ecaf5bcd0 <span class="hljs-builtin-name">error</span> 6 <span class="hljs-keyword">in</span> carbon-c-relay[400000+17000]<br>Feb  3 03:10:03 ip-10-33-3-12 kernel: [8905913.359297] carbon-c-relay[5708]: segfault at 2fcf0<span class="hljs-built_in"> ip </span>000000000040dacf sp 00007f9eca75acd0 <span class="hljs-builtin-name">error</span> 6 <span class="hljs-keyword">in</span> carbon-c-relay[400000+17000]<br>Feb  3 03:10:03 ip-10-33-3-12 kernel: [8905913.377903] carbon-c-relay[5709]: segfault at 2fcf8<span class="hljs-built_in"> ip </span>000000000040dacf sp 00007f9ec9f59cd0 <span class="hljs-builtin-name">error</span> 6 <span class="hljs-keyword">in</span> carbon-c-relay[400000+17000]<br>Feb  3 03:10:03 ip-10-33-3-12 kernel: [8905913.393349] carbon-c-relay[5710]: segfault at 2fd00<span class="hljs-built_in"> ip </span>000000000040dacf sp 00007f9ec9758cd0 <span class="hljs-builtin-name">error</span> 6 <span class="hljs-keyword">in</span> carbon-c-relay[400000+17000]<br><br> carbon-c-relay: *** <span class="hljs-builtin-name">Error</span> <span class="hljs-keyword">in</span> `/usr/bin/carbon-c-relay<span class="hljs-string">': corrupted double-linked list: 0x00007fbde00a4740 ***、</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">升级版本： carbon-c-relay-2.6-1.el6.x86_64.rpm</span><br></code></pre></td></tr></table></figure>

<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">问题二 IOPS ：<br>问题原因： 服务器发送数据多，每当触发数据库操作，gamex就会发送一条数据到go-carbon，go-carbon一直处于读写状态，IO处理不过来，机器CPU正常，内存正常，但是load高，是因为写磁盘压力大<br><br>[<span class="hljs-symbol">root@</span>ip<span class="hljs-number">-10</span><span class="hljs-number">-33</span><span class="hljs-number">-3</span><span class="hljs-number">-152</span> whisper]# iostat -x <span class="hljs-number">2</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip<span class="hljs-number">-10</span><span class="hljs-number">-33</span><span class="hljs-number">-3</span><span class="hljs-number">-152</span>)     <span class="hljs-number">03</span>/<span class="hljs-number">29</span>/<span class="hljs-number">2019</span>     _x86_64_    (<span class="hljs-number">4</span> CPU)<br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">5.99</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">3.42</span>   <span class="hljs-number">28.05</span>    <span class="hljs-number">0.14</span>   <span class="hljs-number">62.41</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.01</span>    <span class="hljs-number">56.77</span>    <span class="hljs-number">1.09</span>  <span class="hljs-number">144.61</span>    <span class="hljs-number">45.80</span>  <span class="hljs-number">1639.67</span>    <span class="hljs-number">11.57</span>     <span class="hljs-number">0.02</span>    <span class="hljs-number">0.14</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.07</span><br>xvdf              <span class="hljs-number">0.10</span>   <span class="hljs-number">653.70</span>   <span class="hljs-number">62.43</span> <span class="hljs-number">1524.71</span>  <span class="hljs-number">1069.56</span> <span class="hljs-number">17813.12</span>    <span class="hljs-number">11.90</span>     <span class="hljs-number">0.02</span>    <span class="hljs-number">0.01</span>   <span class="hljs-number">0.01</span>   <span class="hljs-number">2.37</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">6.97</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">2.19</span>   <span class="hljs-number">68.13</span>    <span class="hljs-number">0.39</span>   <span class="hljs-number">22.32</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">1.50</span>    <span class="hljs-number">0.50</span>    <span class="hljs-number">1.00</span>     <span class="hljs-number">8.00</span>    <span class="hljs-number">20.00</span>    <span class="hljs-number">18.67</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br>xvdf              <span class="hljs-number">1.50</span>  <span class="hljs-number">2457.50</span>  <span class="hljs-number">595.00</span> <span class="hljs-number">3657.50</span>  <span class="hljs-number">8672.00</span> <span class="hljs-number">49832.00</span>    <span class="hljs-number">13.76</span>   <span class="hljs-number">133.24</span>   <span class="hljs-number">31.67</span>   <span class="hljs-number">0.24</span> <span class="hljs-number">100.00</span><br><br>发现问题： go-carbon进程奔溃<br><br>解决办法： 磁盘为<span class="hljs-number">700</span>G IOPS原来是<span class="hljs-number">3000</span>，调高了磁盘的IOPS为<span class="hljs-number">4000</span>，情况稍有缓解但并没有彻底解决，go-carbon进程每隔一段时间依旧会挂掉，等维护时更新了服务器,减少了一半的数据发送，磁盘的读下降，写升高。进程奔溃的问题才得以解决，但go-carbon占用系统的CPU依旧不低，大概在<span class="hljs-number">70</span>%<span class="hljs-number">-80</span>%左右。<br></code></pre></td></tr></table></figure>

<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">问题三 <span class="hljs-keyword">go</span>-carbon升级 <span class="hljs-built_in">and</span> 修改storage存储策略 :<br>问题原因： 监控部分数据只能保留<span class="hljs-number">7</span>天，当线上出现问题想要看近一个月的监控数据走向时很不方便<br>现在版本： <span class="hljs-keyword">go</span>-carbon-<span class="hljs-number">0.8</span>.<span class="hljs-number">1</span>-<span class="hljs-number">1</span>.el6.x86_64.rpm<br>升级版本： # rpm -Uvh <span class="hljs-keyword">go</span>-carbon-<span class="hljs-number">0.13</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1</span>.x86_64.rpm （为了减小对监控业务使用的影响使用了 rpm -Uvh 直接升级）<br><span class="hljs-keyword">go</span>-carbon从 <span class="hljs-number">0.10</span>版本 以后就更改了很多配置文件的路径，具体版本更改了什么可以到github上查询 http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/lomik/<span class="hljs-keyword">go</span>-carbon/releases ，<span class="hljs-keyword">go</span>-carbon升级后发现磁盘的IOPS恢复了正常值，系统的load也降低了，<span class="hljs-keyword">go</span>-carbon占用系统CPU在<span class="hljs-number">30</span>%-<span class="hljs-number">40</span>%，可能作者对<span class="hljs-keyword">go</span>-carbon做了优化~~~~<br><br>再来说storage-schemas.<span class="hljs-keyword">conf</span>存储策略的问题，因为之前更改了好几次发现并没有生效，数据依旧只能保留<span class="hljs-number">7</span>天，因此还给<span class="hljs-keyword">go</span>-carbon提了一个issue...<br>其实是这样的，查了一些文档和别人使用的一些经验得知 ：<br>“ whisper是一个固定大小的数据库，所以当 storage-schemas.<span class="hljs-keyword">conf</span> 设定以后，一个metrics所占的磁盘空间就已经确定了。在系统运行的周期中只要根据 metrics 的增加进行适当扩容即可 ” “ storage-schemas.<span class="hljs-keyword">conf</span>修改以后对于已经在磁盘上进行记录的Metrics不会生效，需要删除数据重新写入或者进行数据迁移才行 ” “ 修改完毕，页面指标数据依然保持一天的量，当时想当然的以为需要重启graphite使配置生效。后来验证表明，调整这里的配置后，必须删除以前生成的wsp文件，生成新的wsp文件后方可生效。 ”<br><br>大概是因为监控搭建初期，其中部分数据设定值就是保留<span class="hljs-number">7</span>天，所以我将collectd下的数据备份后全部删除，使其发送过来的数据全是新生成的，期待能看到第<span class="hljs-number">8</span>天的数据。。。<br><br>还有有关我给<span class="hljs-keyword">go</span>-carbon提了一个issue，报错是一条“<span class="hljs-keyword">bad</span> message”,是因为carbon不支持存储 “nan”格式的数据<br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/PChgKZB2" target="_blank" rel="noopener"><img src="https://i.postimg.cc/ht7KD1MW/gocarbon.png" alt="gocarbon.png"></a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>监控</tag>
        <tag>graphite</tag>
      </tags>
  </entry>
  <entry>
    <title>有关jenkins的一些问题，基于role-based权限控制</title>
    <url>/2019/04/19/45_jenkins%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>之前整理过jenkins权限是因为不同开发项目组运维访问服务器的权限不一样的，按项目进行了jenkins用户权限的划分和管理。</p>
<ol>
<li><p>安装 Role Strategy Plugin插件</p>
</li>
<li><p>在全局安全配置中选择授权策略</p>
</li>
</ol>
<p><a href="https://postimg.cc/zVPdHhqy" target="_blank" rel="noopener"><img src="https://i.postimg.cc/Vkz2T9TW/jenkins-1.jpg" alt="jenkins-1.jpg"></a></p>
<p><a href="https://postimg.cc/YGk8Bfzs" target="_blank" rel="noopener"><img src="https://i.postimg.cc/50QrvsYb/jenkins-2.jpg" alt="jenkins-2.jpg"></a></p>
<p>3.进行授权配置</p>
<p><a href="https://postimg.cc/HrqBBCcH" target="_blank" rel="noopener"><img src="https://i.postimg.cc/VN6psfzS/jenkins-3.jpg" alt="jenkins-3.jpg"></a><br><a href="https://postimg.cc/WFn8NF9b" target="_blank" rel="noopener"><img src="https://i.postimg.cc/mkx5S7CM/jenkins-4.jpg" alt="jenkins-4.jpg"></a><br>4.进行用户分配角色<br><a href="https://postimg.cc/9wQprmSP" target="_blank" rel="noopener"><img src="https://i.postimg.cc/wMhb43Qr/jenkins-5.png" alt="jenkins-5.png"></a></p>
<p>——————</p>
<p>后来因为jenkins bug升级了jenkins版本，国服我选择升级了长线稳定版2.164.1，暂时没有出现什么问题，港澳台日本等地区升级了weekly的最新版2.168，在近期使用中出现了几个问题，一个是ssh和ansible插件问题，升级后插件不支持原来的执行方式，为了快速解决问题，进行了插件降级得以解决。还有一个就是今天解决的基于role的权限，如下：</p>
<p><a href="https://postimg.cc/NKdQHp51" target="_blank" rel="noopener"><img src="https://i.postimg.cc/pdHr3Sv1/jenkins-role-access.png" alt="jenkins-role-access.png"></a><br>在全局安全配置中设置执行者为Run as System，之前是Run as User who Triggered Build，所以大数据同事明明有执行权限当任务执行后却显示缺少运行权限</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python3」关于AWS SDK API</title>
    <url>/2019/04/19/46_AWS_SDK/</url>
    <content><![CDATA[<p>aws官方有提供Python接口：<br><a href="https://boto3.amazonaws.com/v1/documentation/api/latest/index.html" target="_blank" rel="noopener">https://boto3.amazonaws.com/v1/documentation/api/latest/index.html</a></p>
<p>这几天小试牛刀写了一个获取AWS EC2信息的脚本：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> boto3<br><br>aws_key = <span class="hljs-string">'XXX'</span><br>aws_secret = <span class="hljs-string">'XXX'</span><br>aws_region = <span class="hljs-string">'XXX'</span><br><span class="hljs-keyword">session</span> = boto3.<span class="hljs-keyword">session</span>.<span class="hljs-keyword">Session</span>(aws_access_key_id=aws_key, aws_secret_access_key=aws_secret, region_name=aws_region)<br><br>#获取预留实例信息<br><span class="hljs-string">'''</span><br><span class="hljs-string">ec2_client = session.client('</span>ec2<span class="hljs-string">')</span><br><span class="hljs-string">reserved_instances = ec2_client.describe_reserved_instances()</span><br><span class="hljs-string">for reserved_instance in reserved_instances['</span>ReservedInstances<span class="hljs-string">']:</span><br><span class="hljs-string">   print(reserved_instance['</span>ReservedInstancesId<span class="hljs-string">'],reserved_instance['</span>InstanceTyp<span class="hljs-string">e'],reserved_instance['</span>ProductDescription<span class="hljs-string">'],reserved_instance['</span>Stat<span class="hljs-string">e'],reserved_instance['</span><span class="hljs-keyword">Start</span><span class="hljs-string">'],reserved_instance['</span><span class="hljs-keyword">End</span><span class="hljs-string">'],reserved_instance['</span>RecurringCharges<span class="hljs-string">'],reserved_instance['</span>InstanceCount<span class="hljs-string">'])</span><br><span class="hljs-string">'''</span><br>#获取实例信息<br>ec2_resource = <span class="hljs-keyword">session</span>.resource(<span class="hljs-string">'ec2'</span>)<br>ec2_list = []<br><span class="hljs-keyword">for</span> instance <span class="hljs-keyword">in</span> ec2_resource.instances.<span class="hljs-keyword">all</span>():<br>    ec2_server = &#123;&#125;<br>    # ec2_name = list(enumerate(instance.tags))<br>    # print(ec2_name)<br>    ec2_Name_index = [i <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> enumerate(instance.tags) <span class="hljs-keyword">if</span> x[<span class="hljs-string">'Key'</span>].find(<span class="hljs-string">'Name'</span>) == <span class="hljs-number">0</span>]<br>    # print(ec2_Name_index)<br>    # <span class="hljs-type">name</span> = []<br>    # <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> enumerate(instance.tags):<br>    #     <span class="hljs-keyword">if</span> x[<span class="hljs-string">'Key'</span>].find(<span class="hljs-string">'Name'</span>) == <span class="hljs-number">0</span>:<br>    #         <span class="hljs-type">name</span>.append(i)<br>    #         print(<span class="hljs-type">name</span>)<br>    ec2_Service_index = [i <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> enumerate(instance.tags) <span class="hljs-keyword">if</span> x[<span class="hljs-string">'Key'</span>].find(<span class="hljs-string">'Service'</span>) == <span class="hljs-number">0</span>]<br>    # print(ec2_Service_index)<br>    ec2_server[<span class="hljs-string">'id'</span>] = instance.id<br>    ec2_server[<span class="hljs-string">'ip'</span>] = instance.private_ip_address<br>    ec2_server[<span class="hljs-string">'hostname'</span>] = instance.tags[ec2_Name_index[<span class="hljs-number">0</span>]][<span class="hljs-string">'Value'</span>]<br>    ec2_server[<span class="hljs-string">'port'</span>] = <span class="hljs-string">'22'</span><br>    ec2_server[<span class="hljs-string">'Server'</span>] = instance.tags[ec2_Service_index[<span class="hljs-number">0</span>]][<span class="hljs-string">'Value'</span>]<br>    ec2_list.append(ec2_server)<br>print(ec2_list)<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>traceroute</title>
    <url>/2018/06/19/40_traceroute/</url>
    <content><![CDATA[<p>traceroute 是用来检测发出数据包的主机到目标主机之间所经过的网关数量的工具。traceroute 的原理是试图以最小的TTL发出探测包来跟踪数据包到达目标主机所经过的网关，然后监听一个来自网关ICMP的应答。发送数据包的大小默认为 38个字节。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><br><span class="hljs-selector-tag">tracert</span> <span class="hljs-selector-attr">[-d]</span> <span class="hljs-selector-attr">[-h maximum_hops]</span> <span class="hljs-selector-attr">[-j computer-list]</span> <span class="hljs-selector-attr">[-w timeout]</span> <span class="hljs-selector-tag">target_name</span><br><br><span class="hljs-selector-tag">SYNOPSIS</span><br><br>       <span class="hljs-selector-tag">traceroute</span> <span class="hljs-selector-attr">[-46dFITUnreAV]</span> <span class="hljs-selector-attr">[-f first_ttl]</span> <span class="hljs-selector-attr">[-g gate,...]</span><br><br>               <span class="hljs-selector-attr">[-i device]</span> <span class="hljs-selector-attr">[-m max_ttl]</span> <span class="hljs-selector-attr">[-p port]</span> <span class="hljs-selector-attr">[-s src_addr]</span><br><br>               <span class="hljs-selector-attr">[-q nqueries]</span> <span class="hljs-selector-attr">[-N squeries]</span> <span class="hljs-selector-attr">[-t tos]</span><br><br>               <span class="hljs-selector-attr">[-l flow_label]</span> <span class="hljs-selector-attr">[-w waittime]</span> <span class="hljs-selector-attr">[-z sendwait]</span><br><br>               <span class="hljs-selector-attr">[-UL]</span> <span class="hljs-selector-attr">[-P proto]</span> <span class="hljs-selector-attr">[--sport=port]</span> <span class="hljs-selector-attr">[-M method]</span> <span class="hljs-selector-attr">[-O mod_options]</span><br><br>               <span class="hljs-selector-attr">[--mtu]</span> <span class="hljs-selector-attr">[--back]</span><br><br>               <span class="hljs-selector-tag">host</span> <span class="hljs-selector-attr">[packet_len]</span><br><br><span class="hljs-selector-tag">traceroute</span> <span class="hljs-selector-attr">[参数选项]</span> <span class="hljs-selector-tag">hostname</span>，域名或 <span class="hljs-selector-tag">IP</span>地址<br><br><span class="hljs-selector-tag">-i</span> 指定网络接口，对于多个网络接口有用。比如 <span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">eth1</span> 或<span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">ppp1</span>等；<br><br><span class="hljs-selector-tag">-m</span> 把在外发探测试包中所用的最大生存期设置为<span class="hljs-selector-tag">max-ttl</span>次转发，默认值为30次；<br><br><span class="hljs-selector-tag">-n</span> 显示<span class="hljs-selector-tag">IP</span>地址，不查主机名。当<span class="hljs-selector-tag">DNS</span>不起作用时常用到这个参数；<br><br><span class="hljs-selector-tag">-p</span> <span class="hljs-selector-tag">port</span> 探测包使用的基本<span class="hljs-selector-tag">UDP</span>端口设置为<span class="hljs-selector-tag">port</span> ，默认值是33434<br><br><span class="hljs-selector-tag">-q</span> <span class="hljs-selector-tag">n</span> 在每次设置生存期时，把探测包的个数设置为值<span class="hljs-selector-tag">n</span>，默认时为3；<br><br><span class="hljs-selector-tag">-r</span> 绕过正常的路由表，直接发送到网络相连的主机；<br><br><span class="hljs-selector-tag">-w</span> <span class="hljs-selector-tag">n</span> 把对外发探测包的等待响应时间设置为<span class="hljs-selector-tag">n</span>秒，默认值为3秒；<br></code></pre></td></tr></table></figure>

<p>用法实例：</p>
<p>traceroute <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh"><br>pc:~$ traceroute www.baidu.com<br><br>traceroute: Warning:www.baidu.comhas multiple addresses; using <span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span><br><br>traceroute towww.a.shifen.com(<span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span>), <span class="hljs-number">64</span> hops max, <span class="hljs-number">52</span> byte packets<br><br><span class="hljs-number">1</span>  bogon (<span class="hljs-number">10</span>.x.x.x)  <span class="hljs-number">0.968</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">711</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">710</span> ms<br><br><span class="hljs-number">2</span>  bogon (<span class="hljs-number">172</span>.x.x.x)  <span class="hljs-number">0.571</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">545</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">429</span> ms<br><br><span class="hljs-number">3129</span>.x.x.x.broad.bj.bj.dynamic.<span class="hljs-number">163</span>data.com.cn (<span class="hljs-number">219</span>.x.x.x)  <span class="hljs-number">4.131</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">3</span>.<span class="hljs-number">252</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">789</span> ms<br><br><span class="hljs-number">425</span>.x.x.x.static.bjtelecom.net(<span class="hljs-number">106</span>.x.x.x)  <span class="hljs-number">2.565</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">067</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">133</span> ms<br><br><span class="hljs-number">5</span>  * * *<br><br><span class="hljs-number">6</span>  <span class="hljs-number">36</span>.x.x.x (<span class="hljs-number">36</span>.x.x.x)  <span class="hljs-number">3.360</span> ms<br><br>    <span class="hljs-number">219</span>.x.x.x (<span class="hljs-number">219</span>.x.x.x)  <span class="hljs-number">3.425</span> ms<br><br>    <span class="hljs-number">36</span>.x.x.x (<span class="hljs-number">36</span>.x.x.x)  <span class="hljs-number">3.304</span> ms<br><br><span class="hljs-number">7</span>  * * *<br><br><span class="hljs-number">8</span>  <span class="hljs-number">220</span>.x.x.x (<span class="hljs-number">220</span>.x.x.x)  <span class="hljs-number">2.803</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">4</span>.<span class="hljs-number">935</span> ms<br><br>    <span class="hljs-number">220</span>.x.x.x (<span class="hljs-number">220</span>.x.x.x)  <span class="hljs-number">3.736</span> ms<br><br><span class="hljs-number">9</span>  * * *<br></code></pre></td></tr></table></figure>

<p>traceroute -m 10 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>      设置跳数为10</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">pc:~ $ traceroute -m <span class="hljs-number">10</span> www.baidu.com<br><br>traceroute: Warning:www.baidu.comhas multiple addresses; using <span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span><br><br>traceroute to www.a.shifen.com(<span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span>), <span class="hljs-number">10</span> hops max, <span class="hljs-number">52</span> byte packets<br><br><span class="hljs-number">1</span>  bogon (<span class="hljs-number">10</span>.x.x.x)  <span class="hljs-number">1.067</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">4</span>.<span class="hljs-number">024</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">712</span> ms<br><br><span class="hljs-number">2</span>  bogon (<span class="hljs-number">172</span>.x.x.x)  <span class="hljs-number">0.309</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">337</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">607</span> ms<br><br><span class="hljs-number">3</span>  <span class="hljs-number">129</span>.x.x.x.broad.bj.bj.dynamic.<span class="hljs-number">163</span>data.com.cn (<span class="hljs-number">219</span>.x.x.x)  <span class="hljs-number">2.683</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">3</span>.<span class="hljs-number">353</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">947</span> ms<br><br><span class="hljs-number">4</span>  <span class="hljs-number">25</span>.x.x.x.static.bjtelecom.net(x.x.x.<span class="hljs-number">25</span>)  <span class="hljs-number">2.179</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">325</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">043</span> ms<br><br><span class="hljs-number">5</span>  * * *<br><br><span class="hljs-number">6</span>  <span class="hljs-number">36</span>.x.x.x (<span class="hljs-number">36</span>.x.x.x)  <span class="hljs-number">3.590</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">7</span>.<span class="hljs-number">793</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">6</span>.<span class="hljs-number">461</span> ms<br><br><span class="hljs-number">7</span>  * * *<br><br><span class="hljs-number">8</span>  <span class="hljs-number">220</span>.x.x.x (<span class="hljs-number">220</span>.x.x.x)  <span class="hljs-number">3.175</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">893</span> ms<br><br>    <span class="hljs-number">220</span>.x.x.x (<span class="hljs-number">220</span>.x.x.x)  <span class="hljs-number">5.538</span> ms<br><br><span class="hljs-number">9</span>  * * *<br><br><span class="hljs-number">10</span>  * * *<br></code></pre></td></tr></table></figure>

<p>traceroute -n <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>     只显示ip</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">pc:~ $ traceroute -n www.baidu.com<br><br>traceroute: Warning:www.baidu.comhas multiple addresses; using <span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span><br><br>traceroute to www.a.shifen.com(<span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span>), <span class="hljs-number">64</span> hops max, <span class="hljs-number">52</span> byte packets<br><br><span class="hljs-number">1</span>  <span class="hljs-number">10</span>.x.x.x  <span class="hljs-number">0.946</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">761</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">718</span> ms<br><br><span class="hljs-number">2</span>  <span class="hljs-number">172</span>.x.x.x  <span class="hljs-number">0.452</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">338</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">389</span> ms<br><br><span class="hljs-number">3</span>  <span class="hljs-number">219</span>.x.x.x  <span class="hljs-number">3.174</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">4</span>.<span class="hljs-number">038</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">379</span> ms<br><br><span class="hljs-number">4</span>  <span class="hljs-number">106</span>.x.x.x  <span class="hljs-number">2.910</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">1</span>.<span class="hljs-number">960</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">1</span>.<span class="hljs-number">654</span> ms<br><br><span class="hljs-number">5</span>  * * *<br><br><span class="hljs-number">6</span>  <span class="hljs-number">36</span>.x.x.x  <span class="hljs-number">3.321</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">4</span>.<span class="hljs-number">275</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">3</span>.<span class="hljs-number">637</span> ms<br></code></pre></td></tr></table></figure>

<p>traceroute -p 6888 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>    设置探测包使用的基本UDP端口</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">pc:~ $ traceroute -p <span class="hljs-number">6888</span> www.baidu.com<br><br>traceroute: Warning:www.baidu.comhas multiple addresses; using <span class="hljs-number">220.181</span><span class="hljs-number">.111</span><span class="hljs-number">.188</span><br><br>traceroute to www.a.shifen.com(<span class="hljs-number">220.181</span><span class="hljs-number">.111</span><span class="hljs-number">.188</span>), <span class="hljs-number">64</span> hops max, <span class="hljs-number">52</span> byte packets<br><br><span class="hljs-number">1</span>  bogon (<span class="hljs-number">10.</span>x.x.x)  <span class="hljs-number">0.989</span> ms  <span class="hljs-number">0.752</span> ms  <span class="hljs-number">0.722</span> ms<br><br><span class="hljs-number">2</span>  bogon (<span class="hljs-number">172.</span>x.x.x)  <span class="hljs-number">0.489</span> ms  <span class="hljs-number">0.399</span> ms  <span class="hljs-number">0.327</span> ms<br><br><span class="hljs-number">3</span>  <span class="hljs-number">129.</span>x.x.x.broad.bj.bj.dynamic<span class="hljs-number">.163</span>data.com.cn (<span class="hljs-number">219.</span>x.x.x)  <span class="hljs-number">3.094</span> ms  <span class="hljs-number">3.442</span> ms  <span class="hljs-number">3.529</span> ms<br><br><span class="hljs-number">4</span>  <span class="hljs-number">25.</span>x.x.x.static.bjtelecom.net(<span class="hljs-number">106.</span>x.x.x)  <span class="hljs-number">1.837</span> ms  <span class="hljs-number">2.488</span> ms  <span class="hljs-number">2.516</span> ms<br><br><span class="hljs-number">5</span>  * * *<br><br><span class="hljs-number">6</span>  * <span class="hljs-number">36.</span>x.x.x (<span class="hljs-number">36.</span>x.x.x)  <span class="hljs-number">4.876</span> ms<br></code></pre></td></tr></table></figure>

<p>traceroute -q 4 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>   设置探测包的个数</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><code class="hljs crmsh">pc:~$ traceroute -q <span class="hljs-number">4</span> www.baidu.com<br><br>traceroute: Warning:www.baidu.comhas multiple addresses; using <span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span><br><br>traceroute to www.a.shifen.com(<span class="hljs-number">220.181</span>.<span class="hljs-number">111.188</span>), <span class="hljs-number">64</span> hops max, <span class="hljs-number">52</span> byte packets<br><br><span class="hljs-number">1</span>  bogon (<span class="hljs-number">10</span>.x.x.x)  <span class="hljs-number">0.970</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">721</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">4</span>.<span class="hljs-number">360</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">667</span> ms<br><br><span class="hljs-number">2</span>  bogon (<span class="hljs-number">172</span>.x.x.x)  <span class="hljs-number">0.534</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">640</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">363</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">0</span>.<span class="hljs-number">449</span> ms<br><br><span class="hljs-number">3</span>  <span class="hljs-number">129</span>.x.x.x.broad.bj.bj.dynamic.<span class="hljs-number">163</span>data.com.cn (x.x.x.<span class="hljs-number">129</span>)  <span class="hljs-number">2.831</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">3</span>.<span class="hljs-number">221</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">878</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">814</span> ms<br><br><span class="hljs-number">4</span>  <span class="hljs-number">25</span>.x.x.x.static.bjtelecom.net(x.x.x.<span class="hljs-number">25</span>)  <span class="hljs-number">1.921</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">564</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">2</span>.<span class="hljs-number">472</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">3</span>.<span class="hljs-number">979</span> ms<br><br><span class="hljs-number">5</span>  <span class="hljs-number">177</span>.x.x.x.static.bjtelecom.net(x.x.x.<span class="hljs-number">177</span>)  <span class="hljs-number">2.465</span> <span class="hljs-keyword">ms</span> <span class="hljs-title">* * *</span><br><span class="hljs-title"></span><br><span class="hljs-title">6</span>  <span class="hljs-number">219</span>.x.x.x (<span class="hljs-number">219</span>.x.x.x)  <span class="hljs-number">4.245</span> ms<br><br>    <span class="hljs-number">36</span>.x.x.x (<span class="hljs-number">36</span>.x.x.x)  <span class="hljs-number">3.681</span> <span class="hljs-keyword">ms</span>  <span class="hljs-title">3</span>.<span class="hljs-number">053</span> ms<br><br>    <span class="hljs-number">220</span>.x.x.x (<span class="hljs-number">220</span>.x.x.x)  <span class="hljs-number">3.444</span> ms<br></code></pre></td></tr></table></figure>

<p>traceroute -r <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>     绕过正常的路由表直接发送到网络相连的主机</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">pc:~ $ traceroute -r www.baidu.com<br><br>traceroute: Warning:www.baidu.comhas multiple addresses; using 220.181.111.188<br><br>traceroute <span class="hljs-keyword">to</span> www.a.shifen.com(220.181.111.188), 64 hops max, 52 byte packets<br><br>traceroute: sendto:<span class="hljs-built_in"> Network </span>is unreachable<br><br>1 traceroute: wrotewww.a.shifen.com52 chars, <span class="hljs-attribute">ret</span>=-1<br><br>*traceroute: sendto:<span class="hljs-built_in"> Network </span>is unreachable<br><br>traceroute: wrotewww.a.shifen.com52 chars, <span class="hljs-attribute">ret</span>=-1<br><br>*traceroute: sendto:<span class="hljs-built_in"> Network </span>is unreachable<br><br>traceroute: wrotewww.a.shifen.com52 chars, <span class="hljs-attribute">ret</span>=-1<br><br>*<br><br>traceroute: sendto:<span class="hljs-built_in"> Network </span>is unreachable<br><br>2 traceroute: wrotewww.a.shifen.com52 chars, <span class="hljs-attribute">ret</span>=-1<br><br>traceroute -w 3 www.baidu.com       把对外发探测包的等待响应时间设置为n秒，默认值为3秒<br></code></pre></td></tr></table></figure>

<p>pc:~ $ traceroute -w 3<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">traceroute</span>: <span class="hljs-selector-tag">Warning</span><span class="hljs-selector-pseudo">:www.baidu.comhas</span> <span class="hljs-selector-tag">multiple</span> <span class="hljs-selector-tag">addresses</span>; <span class="hljs-selector-tag">using</span> 220<span class="hljs-selector-class">.181</span><span class="hljs-selector-class">.111</span><span class="hljs-selector-class">.188</span><br><br><span class="hljs-selector-tag">traceroute</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">www</span><span class="hljs-selector-class">.a</span><span class="hljs-selector-class">.shifen</span><span class="hljs-selector-class">.com</span>(220<span class="hljs-selector-class">.181</span><span class="hljs-selector-class">.111</span><span class="hljs-selector-class">.188</span>), 64 <span class="hljs-selector-tag">hops</span> <span class="hljs-selector-tag">max</span>, 52 <span class="hljs-selector-tag">byte</span> <span class="hljs-selector-tag">packets</span><br><br>1  <span class="hljs-selector-tag">bogon</span> (10<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  0<span class="hljs-selector-class">.957</span> <span class="hljs-selector-tag">ms</span>  0<span class="hljs-selector-class">.710</span> <span class="hljs-selector-tag">ms</span>  0<span class="hljs-selector-class">.713</span> <span class="hljs-selector-tag">ms</span><br><br>2  <span class="hljs-selector-tag">bogon</span> (172<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  0<span class="hljs-selector-class">.603</span> <span class="hljs-selector-tag">ms</span>  0<span class="hljs-selector-class">.616</span> <span class="hljs-selector-tag">ms</span>  0<span class="hljs-selector-class">.321</span> <span class="hljs-selector-tag">ms</span><br><br>3 129<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.broad</span><span class="hljs-selector-class">.bj</span><span class="hljs-selector-class">.bj</span><span class="hljs-selector-class">.dynamic</span><span class="hljs-selector-class">.163data</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-class">.cn</span> (<span class="hljs-selector-tag">x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.129</span>)  3<span class="hljs-selector-class">.744</span> <span class="hljs-selector-tag">ms</span>  2<span class="hljs-selector-class">.371</span> <span class="hljs-selector-tag">ms</span>  2<span class="hljs-selector-class">.625</span> <span class="hljs-selector-tag">ms</span><br><br>4 25<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.static</span><span class="hljs-selector-class">.bjtelecom</span><span class="hljs-selector-class">.net</span>(<span class="hljs-selector-tag">x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.25</span>)  2<span class="hljs-selector-class">.022</span> <span class="hljs-selector-tag">ms</span> *  3<span class="hljs-selector-class">.474</span> <span class="hljs-selector-tag">ms</span><br><br>5  * * *<br><br>6  36<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (36<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  4<span class="hljs-selector-class">.408</span> <span class="hljs-selector-tag">ms</span>  5<span class="hljs-selector-class">.760</span> <span class="hljs-selector-tag">ms</span>  3<span class="hljs-selector-class">.091</span> <span class="hljs-selector-tag">ms</span><br><br>7  * * *<br><br>8  220<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (220<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  3<span class="hljs-selector-class">.482</span> <span class="hljs-selector-tag">ms</span><br><br>    220<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (220<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  3<span class="hljs-selector-class">.024</span> <span class="hljs-selector-tag">ms</span><br><br>    220<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (220<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  3<span class="hljs-selector-class">.377</span> <span class="hljs-selector-tag">ms</span><br><br>9  * *<br></code></pre></td></tr></table></figure>

<p>traceroute -i eth0 -4 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 使用eth0网口以及IPV4协议</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@ip-ops]</span># <span class="hljs-selector-tag">traceroute</span> <span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">eth0</span> <span class="hljs-selector-tag">-4</span> <span class="hljs-selector-tag">www</span><span class="hljs-selector-class">.baidu</span><span class="hljs-selector-class">.com</span><br><br><span class="hljs-selector-tag">traceroute</span> <span class="hljs-selector-tag">towww</span><span class="hljs-selector-class">.baidu</span><span class="hljs-selector-class">.com</span>(220<span class="hljs-selector-class">.181</span><span class="hljs-selector-class">.112</span><span class="hljs-selector-class">.244</span>), 30 <span class="hljs-selector-tag">hops</span> <span class="hljs-selector-tag">max</span>, 60 <span class="hljs-selector-tag">byte</span> <span class="hljs-selector-tag">packets</span><br><br>1 <span class="hljs-selector-tag">compute</span><span class="hljs-selector-class">.amazonaws</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-class">.cn</span> (54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  15<span class="hljs-selector-class">.993</span> <span class="hljs-selector-tag">ms</span> <span class="hljs-selector-tag">compute</span><span class="hljs-selector-class">.amazonaws</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-class">.cn</span> (54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  11<span class="hljs-selector-class">.778</span> <span class="hljs-selector-tag">ms</span><span class="hljs-selector-class">.compute</span><span class="hljs-selector-class">.amazonaws</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-class">.cn</span> (54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  12<span class="hljs-selector-class">.896</span> <span class="hljs-selector-tag">ms</span><br><br>2  100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  21<span class="hljs-selector-class">.890</span> <span class="hljs-selector-tag">ms</span> 100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  21<span class="hljs-selector-class">.880</span> <span class="hljs-selector-tag">ms</span> 100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  21<span class="hljs-selector-class">.630</span> <span class="hljs-selector-tag">ms</span><br><br>3  100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  12<span class="hljs-selector-class">.609</span> <span class="hljs-selector-tag">ms</span> 100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  22<span class="hljs-selector-class">.017</span> <span class="hljs-selector-tag">ms</span> 100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>(100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  14<span class="hljs-selector-class">.010</span> <span class="hljs-selector-tag">ms</span><br><br>4  100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  0<span class="hljs-selector-class">.256</span> <span class="hljs-selector-tag">ms</span> 100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  0<span class="hljs-selector-class">.261</span> <span class="hljs-selector-tag">ms</span> 100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (100<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  0<span class="hljs-selector-class">.209</span> <span class="hljs-selector-tag">ms</span><br><br>5  54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  1<span class="hljs-selector-class">.071</span> <span class="hljs-selector-tag">ms</span> 54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span> (54<span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span><span class="hljs-selector-class">.x</span>)  1<span class="hljs-selector-class">.536</span> <span class="hljs-selector-tag">ms</span>  1<span class="hljs-selector-class">.639</span> <span class="hljs-selector-tag">ms</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>go环境安装升级整理</title>
    <url>/2019/05/10/47_go/</url>
    <content><![CDATA[<p>安装新的go环境 go version &gt;= 1.5<br>$HOME = /usr/local/bin</p>
<ol>
<li>下载go1.4   wget <a href="https://studygolang.com/dl/golang/go1.4.linux-amd64.tar.gz" target="_blank" rel="noopener">https://studygolang.com/dl/golang/go1.4.linux-amd64.tar.gz</a><br>解压安装  $ tar -zxvf go1.4.tar.gz   &amp;&amp;    cd go1.4/src   &amp;&amp;    ./make.bash</li>
<li>准备临时环境变量<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># vim .bashrc</span><br><span class="hljs-comment">#go runtime</span><br><span class="hljs-comment">#go install path</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOROOT</span>=<span class="hljs-variable">$HOME</span>/go.11.2<br><span class="hljs-comment">#go complier and linker installation locaition |default:$GOROOT/bin</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:GOROOT/bin<br><span class="hljs-comment">#go src|bin:dir|myworkdir|default:$HOME/go</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOPATH</span>=<span class="hljs-variable">$HOME</span>/Applications/Go<br><span class="hljs-comment">#go bootstrap|go&gt;=1.5|must</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOROOT_BOOTSTRAP</span>=<span class="hljs-variable">$HOME</span>/go1.4<br></code></pre></td></tr></table></figure>
$ source $HOME/.bashrc  使配置生效</li>
<li>下载go1.11.2   wget  <a href="https://studygolang.com/dl/golang/go1.11.2.linux-amd64.tar.gz" target="_blank" rel="noopener">https://studygolang.com/dl/golang/go1.11.2.linux-amd64.tar.gz</a><br>解压安装  $ tar -zxvf go.1.11.2    &amp;&amp;    cd src  &amp;&amp;  ./all.bash</li>
<li>$ go version<br>$ go version go1.11.2 linux/amd64</li>
</ol>
<hr>
<p>原来有go环境，升级go的版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cat go_install.sh</span><br><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">cd</span> /mnt<br>wget https://dl.google.com/go/go1.11.2.linux-amd64.tar.gz &amp;&amp; tar zxvf go1.11.2.linux-amd64.tar.gz<br>mv /usr/<span class="hljs-built_in">local</span>/go /tmp<br>mv /mnt/go /usr/<span class="hljs-built_in">local</span>/<br>go version<br></code></pre></td></tr></table></figure>

<p>因为开发go版本的升级，内网jenkins编包时所用go环境需要升级</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum --enablerepo=epel search procinfo</span><br><span class="hljs-meta"># yum --enablerepo=epel install procinfo</span><br><span class="hljs-meta"># yum install gcc gcc-c++ vim* ntpdate xinetd wget make cmake gd gd-devel openssl sysstat lrzsz net-snmp net-snmp-devel net-snmp-utils snmp* bc openssh-clients</span><br><span class="hljs-meta"># yum install nrpe</span><br><span class="hljs-meta"># yum install gcc-c++</span><br><br><span class="hljs-meta"># tar czvf ~/ssdb_1.9.3.tar.gz ./</span><br><span class="hljs-meta"># cd /usr/local/ssdb</span><br><span class="hljs-meta"># ./ssdb-server ssdb.conf</span><br><span class="hljs-meta"># ./ssdb-server ssdb.conf</span><br><br><span class="hljs-meta"># yum search golang --enablerepo=epel</span><br><span class="hljs-meta"># mkdir go_1.9</span><br><span class="hljs-meta"># cd go_1.9/</span><br><span class="hljs-meta"># wget https://www.golangtc.com/static/go/1.9.2/go1.9.2.linux-amd64.tar.gz</span><br><span class="hljs-meta"># tar xvf go1.9.2.linux-amd64.tar.gz</span><br><span class="hljs-meta"># mv go /usr/local/bin/go1.9</span><br><span class="hljs-meta"># /usr/local/bin/go1.9/bin/go version</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python3」获取本地代码信息写入aws tag中 -- 整理版来了</title>
    <url>/2019/05/15/48_get_fact_to_aws/</url>
    <content><![CDATA[<p>此脚本是获取playbook/files/200-204下的fact信息，写入aws web备注,已在国服测试使用<br>默认执行打印信息，如需导入aws web备注中，打开下面response注释即可<br>因各个地区可能目录结构和地区、秘钥不一样，需要更改3个地方使用</p>
<ol>
<li>更改秘钥credentials.ini</li>
<li>更改地区local</li>
<li>更改目录dire</li>
</ol>
<p>说明： 当服务部署有迁移或合并时，aws实例tag信息跟着变动，手动修改费时又费劲，当当当脚本来了，还是利用aws SDK功能<br>2个脚本，一个为秘钥配置信息，一个获取本地代码中的服务的信息整理写入aws tag</p>
<p>秘钥配置信息脚本：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[aws_cn]</span><br><span class="hljs-attr">aws_access_key_id</span>=XXX<br><span class="hljs-attr">aws_secret_access_key</span>=XXX<br><span class="hljs-attr">aws_region</span>=XXX<br></code></pre></td></tr></table></figure>
<p>导入脚本：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">#此脚本是获取playbook/<span class="hljs-keyword">files</span>/<span class="hljs-number">200</span>-<span class="hljs-number">204</span>下的fact信息，写入aws web备注,已在国服测试使用<br>#默认执行打印信息，如需导入aws web备注中，打开下面response注释即可<br>#因各个地区可能目录结构和地区、秘钥不一样，需要更改<span class="hljs-number">3</span>个地方使用<br>#<span class="hljs-number">1</span>. 更改秘钥credentials.ini<br>#<span class="hljs-number">2</span>. 更改地区local<br>#<span class="hljs-number">3</span>. 更改目录dire<br>import configparser<br>import boto3<br>import json<br>import os<br><br>cfg = configparser.ConfigParser()<br>cfg.<span class="hljs-keyword">read</span>(<span class="hljs-string">'credentials.ini'</span>)<br>local = <span class="hljs-string">'aws_cn'</span><br>dire = <span class="hljs-string">'playbook/register/files/'</span><br>session = boto3.session.Session(aws_access_key_id=cfg.<span class="hljs-built_in">get</span>(local, <span class="hljs-string">'aws_access_key_id'</span>),<br>                                aws_secret_access_key=cfg.<span class="hljs-built_in">get</span>(local, <span class="hljs-string">'aws_secret_access_key'</span>),<br>                                region_name=cfg.<span class="hljs-built_in">get</span>(local, <span class="hljs-string">'aws_region'</span>))<br>def get_facts(directory):<br>    fact_list = []<br>    <span class="hljs-keyword">for</span> root,dirs,<span class="hljs-keyword">files</span> in os.walk(directory):<br>        <span class="hljs-keyword">for</span> <span class="hljs-keyword">file</span> in <span class="hljs-keyword">file</span><span class="hljs-variable">s:</span><br>            fact = os.path.<span class="hljs-keyword">join</span>(root,<span class="hljs-keyword">file</span>)<br>            <span class="hljs-keyword">fo</span> = <span class="hljs-keyword">open</span>(os.path.<span class="hljs-keyword">join</span>(fact))<br>            item = json.loads(<span class="hljs-keyword">fo</span>.<span class="hljs-keyword">read</span>())<br>            facts = &#123;&#125;<br>            facts[<span class="hljs-string">'hostname'</span>] = <span class="hljs-keyword">file</span><br>            facts[<span class="hljs-string">'facts'</span>] = [fact <span class="hljs-keyword">for</span> fact in item[<span class="hljs-string">'shardsinfo'</span>]]<br>            fact_list.<span class="hljs-keyword">append</span>(facts)<br>            <span class="hljs-keyword">fo</span>.<span class="hljs-keyword">close</span>()<br>    <span class="hljs-keyword">return</span> fact_list<br><br>def get_aws_info(local):<br>    ec2_resource = session.resource(<span class="hljs-string">'ec2'</span>)<br>    ec2_list = []<br>    <span class="hljs-keyword">for</span> instance in ec2_resource.instances.<span class="hljs-keyword">all</span>():<br>        ec2_server = &#123;&#125;<br>        gamex_server = &#123;&#125;<br>        ec2_Name_index = [i <span class="hljs-keyword">for</span> i, <span class="hljs-keyword">x</span> in enumerate(instance.<span class="hljs-keyword">tags</span>) <span class="hljs-keyword">if</span> <span class="hljs-keyword">x</span>[<span class="hljs-string">'Key'</span>].<span class="hljs-keyword">find</span>(<span class="hljs-string">'Name'</span>) == <span class="hljs-number">0</span>]<br>        ec2_Service_index = [i <span class="hljs-keyword">for</span> i, <span class="hljs-keyword">x</span> in enumerate(instance.<span class="hljs-keyword">tags</span>) <span class="hljs-keyword">if</span> <span class="hljs-keyword">x</span>[<span class="hljs-string">'Key'</span>].<span class="hljs-keyword">find</span>(<span class="hljs-string">'Service'</span>) == <span class="hljs-number">0</span>]<br>        ec2_server[<span class="hljs-string">'hostname'</span>] = instance.<span class="hljs-keyword">tags</span>[ec2_Name_index[<span class="hljs-number">0</span>]][<span class="hljs-string">'Value'</span>]<br>        <span class="hljs-keyword">if</span> ec2_server[<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'gamex'</span>):<br>            gamex_server[<span class="hljs-string">'id'</span>] = instance.id<br>            gamex_server[<span class="hljs-string">'hostname'</span>] = instance.<span class="hljs-keyword">tags</span>[ec2_Name_index[<span class="hljs-number">0</span>]][<span class="hljs-string">'Value'</span>]<br>            gamex_server[<span class="hljs-string">'service'</span>] = instance.<span class="hljs-keyword">tags</span>[ec2_Service_index[<span class="hljs-number">0</span>]][<span class="hljs-string">'Value'</span>]<br>            ec2_list.<span class="hljs-keyword">append</span>(gamex_server)<br>    <span class="hljs-keyword">return</span> ec2_list<br><br>def write_gamex_info():<br>    gamex_list = get_facts(dire)<br>    ec2_list = get_aws_info(local)<br>    gamex_service = []<br>    <span class="hljs-keyword">for</span> ec2_hostname in ec2_lis<span class="hljs-variable">t:</span><br>        ec2_service = &#123;&#125;<br>        <span class="hljs-keyword">for</span> gamex_hostname in gamex_lis<span class="hljs-variable">t:</span><br>            <span class="hljs-keyword">if</span> ec2_hostname[<span class="hljs-string">'hostname'</span>] == gamex_hostname[<span class="hljs-string">'hostname'</span>]:<br>                ec2_service[<span class="hljs-string">'id'</span>] = ec2_hostname[<span class="hljs-string">'id'</span>]<br>                ec2_service[<span class="hljs-string">'service'</span>] = gamex_hostname[<span class="hljs-string">'facts'</span>]<br>                gamex_service.<span class="hljs-keyword">append</span>(ec2_service)<br>    <span class="hljs-keyword">return</span> gamex_service<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    ec2_client = session.client(<span class="hljs-string">'ec2'</span>)<br>    service_list = write_gamex_info()<br>    <span class="hljs-keyword">for</span> i in service_lis<span class="hljs-variable">t:</span><br>        ami = i[<span class="hljs-string">'id'</span>]<br>        <span class="hljs-built_in">values</span> = i[<span class="hljs-string">'service'</span>]<br>        v = <span class="hljs-string">','</span>.<span class="hljs-keyword">join</span>(<span class="hljs-built_in">values</span>)<br>        <span class="hljs-keyword">print</span>(v)<br>        # response = ec2_client.create_tags(Resources=[ami,],Tags=[&#123;<span class="hljs-string">'Key'</span>: <span class="hljs-string">'Service'</span>,<span class="hljs-string">'Value'</span>: v,&#125;,],)<br>        # <span class="hljs-keyword">print</span>(response)<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python3」删除S3上过期的zip安装包</title>
    <url>/2019/05/23/50_%E5%88%A0%E9%99%A4S3%E8%BF%87%E6%9C%9F%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    <content><![CDATA[<ol>
<li>此脚本的作用是清除S3上过期的zip包</li>
<li>修改credentials.ini中秘钥bucket信息，修改下面local支持不同地区</li>
<li>执行方式，打开下面注释</li>
<li>注： 此脚本支持的目录结构是二级目录例如Bucket/gamexback/</li>
</ol>
<p>credentials.ini配置文件</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[aws_dev]</span><br><span class="hljs-attr">aws_access_key_id</span>=XX<br><span class="hljs-attr">aws_secret_access_key</span>=XX<br><span class="hljs-attr">aws_region</span>=XX<br><span class="hljs-attr">bucket</span> =itbackups<br><span class="hljs-attr">dir</span> =gamexback<br><span class="hljs-attr">date</span> =<span class="hljs-number">2018</span><br></code></pre></td></tr></table></figure>

<p>删除安装包脚本</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">import boto3<br>import configparser<br><br>cfg = configparser.ConfigParser()<br>cfg.read(<span class="hljs-string">'credentials.ini'</span>)<br>local = <span class="hljs-string">'aws_dev'</span><br>buckets = cfg.<span class="hljs-builtin-name">get</span>(local,<span class="hljs-string">'bucket'</span>)<br>dir = cfg.<span class="hljs-builtin-name">get</span>(local,<span class="hljs-string">'dir'</span>)<br>date = cfg.<span class="hljs-builtin-name">get</span>(local,<span class="hljs-string">'date'</span>)<br>session = boto3.session.Session(<span class="hljs-attribute">aws_access_key_id</span>=cfg.get(local, <span class="hljs-string">'aws_access_key_id'</span>),<br>                                <span class="hljs-attribute">aws_secret_access_key</span>=cfg.get(local, <span class="hljs-string">'aws_secret_access_key'</span>),<br>                                <span class="hljs-attribute">region_name</span>=cfg.get(local, <span class="hljs-string">'aws_region'</span>))<br>client = session.client(<span class="hljs-string">'s3'</span>)<br>s3 = session.resource(<span class="hljs-string">'s3'</span>)<br>bucket = s3.Bucket(buckets)<br><br>objects_list = []<br><span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> bucket.objects.filter(<span class="hljs-attribute">Prefix</span>=dir):<br>    objects_list.append(&#123;<span class="hljs-string">'Key'</span>:obj.key&#125;)<br><br>delete_list = []<br><span class="hljs-keyword">for</span> packages <span class="hljs-keyword">in</span> objects_list:<br>    <span class="hljs-keyword">if</span> packages[<span class="hljs-string">'Key'</span>].__contains__(date):<br>        delete_list.append(packages[<span class="hljs-string">'Key'</span>])<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> delete_list:<br>    <span class="hljs-builtin-name">print</span>(i)<br>    #执行删除命令<br>    # bucket.delete_objects(Delete=&#123;<span class="hljs-string">'Objects'</span>: [&#123;<span class="hljs-string">'Key'</span>: i,&#125;,],&#125;)<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>「Python3」实现获取aws实例信息导入jumpserver --整理版又来了</title>
    <url>/2019/05/16/49_get_ec2_info_to_jump/</url>
    <content><![CDATA[<ol>
<li>此脚本的作用是获取aws备注信息写入jumpserver的备注信息中</li>
<li>秘钥节点信息请修改credentials.ini配置文件，修改下面region支持不同的地区</li>
<li>更新新增加的资产不需要删除直接导入，更新现有的资产信息需要先删除jumpserver中现有的资产，删除操作执行方式打开register_ec2函数中的delete</li>
<li>导入时先执行导入service_data（即先导入服务器的资产）再执行导入全部，执行方式打开main里的service_data</li>
<li>原因还是因为3，已经存在资产不能再次导入，如果先导入全部，再执行导入服务器资会导致分组失败</li>
</ol>
<p>说明：工作需求，线上服务器几百台，手动写到jumpserver里不现实，这个脚本是使用AWS的SDK和jumpserver的SDK、RESTAPI实现从aws获取实例的信息然后自动导入jumpserver，因为jumpserver已经导入的实例存在唯一的UUID，所以重复导入会有问题，要先删除原来的实例才能重新导入，（jumpserver应该也支持更新的实例信息的接口，需要信息为list，有时间再继续研究）<br>第一个是配置文件，将aws和jumpserver需要的秘钥信息提取到了一个文件里，通过第二个脚本读取获取认证信息<br>整理版将脚本中的变量信息都提取到了配置文件中，方便更改</p>
<p>配置信息[region] 通过更改region来实现支持不同的地区：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[dev]</span><br><span class="hljs-attr">aws_access_key_id</span>=XXX<br><span class="hljs-attr">aws_secret_access_key</span>=XXX<br><span class="hljs-attr">aws_region</span>=XXX<br><br><span class="hljs-section">[aws_cn]</span><br><span class="hljs-attr">aws_access_key_id</span>=XXX<br><span class="hljs-attr">aws_secret_access_key</span>=XXX<br><span class="hljs-attr">aws_region</span>=XXX<br><br><span class="hljs-section">[aws_ko]</span><br><span class="hljs-attr">aws_access_key_id</span> = XXX<br><span class="hljs-attr">aws_secret_access_key</span> = XXX<br><span class="hljs-attr">aws_region</span> = XXX<br><br><span class="hljs-section">[jms_cn]</span><br><span class="hljs-attr">jms_server</span> = http://XX.XX.XX.XX<br><span class="hljs-attr">jms_port</span> = XX<br><span class="hljs-attr">jms_username</span> = XX<br><span class="hljs-attr">jms_password</span> = XX<br><span class="hljs-attr">jms_user</span> = XX<br><span class="hljs-attr">jms_dev_node</span> = XX<br><span class="hljs-attr">jms_default_node</span> = XX<br></code></pre></td></tr></table></figure>

<p>执行时更改要执行的地区region、aws_local信息，打开register函数：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">import configparser<br>import boto3<br><span class="hljs-keyword">from</span> jms import service<br>import requests<br>import json<br>import uuid<br><span class="hljs-keyword">from</span> pprint import pprint<br><br>cfg = configparser.ConfigParser()<br>cfg.read(<span class="hljs-string">'credentials.ini'</span>)<br>region = <span class="hljs-string">'jms_cn'</span><br>jump_service = service.UserService(<span class="hljs-attribute">endpoint</span>=cfg.get(region,'jms_server'))<br>jump_service.login(<span class="hljs-attribute">username</span>=cfg.get(region,'jms_username'),password=cfg.get(region,'jms_password'),pubkey=None)<br>jump_endpoint = cfg.<span class="hljs-builtin-name">get</span>(region, <span class="hljs-string">'jms_server'</span>)<br>admin = cfg.<span class="hljs-builtin-name">get</span>(region,<span class="hljs-string">'jms_username'</span>)<br>passowrd = cfg.<span class="hljs-builtin-name">get</span>(region,<span class="hljs-string">'jms_password'</span>)<br>jump_user = cfg.<span class="hljs-builtin-name">get</span>(region,<span class="hljs-string">'jms_user'</span>)<br>jump_dev_node_name = cfg.<span class="hljs-builtin-name">get</span>(region,<span class="hljs-string">'jms_dev_node'</span>)<br>jump_default_node_name = cfg.<span class="hljs-builtin-name">get</span>(region,<span class="hljs-string">'jms_default_node'</span>)<br><span class="hljs-comment"># assents = jump_service.get_assets()</span><br><br>def get_aws_info(local,default_node_uuid):<br>    session = boto3.session.Session(<span class="hljs-attribute">aws_access_key_id</span>=cfg.get(local, <span class="hljs-string">'aws_access_key_id'</span>), <span class="hljs-attribute">aws_secret_access_key</span>=cfg.get(local,'aws_secret_access_key'), <span class="hljs-attribute">region_name</span>=cfg.get(local,'aws_region'))<br>    ec2_resource = session.resource(<span class="hljs-string">'ec2'</span>)<br>    ec2_list = []<br>    admin_user_uuid = get_user_info()<br>    <span class="hljs-keyword">for</span><span class="hljs-built_in"> instance </span><span class="hljs-keyword">in</span> ec2_resource.instances.all():<br>        ec2_server = &#123;&#125;<br>        ec2_Name_index = [i <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> enumerate(instance.tags) <span class="hljs-keyword">if</span> x[<span class="hljs-string">'Key'</span>].<span class="hljs-builtin-name">find</span>(<span class="hljs-string">'Name'</span>) == 0]<br>    # <span class="hljs-builtin-name">print</span>(ec2_Name_index)<br>    # name = []<br>    # <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> enumerate(instance.tags):<br>    #     <span class="hljs-keyword">if</span> x[<span class="hljs-string">'Key'</span>].<span class="hljs-builtin-name">find</span>(<span class="hljs-string">'Name'</span>) == 0:<br>    #         name.append(i)<br>    #         <span class="hljs-builtin-name">print</span>(name)<br>        ec2_Service_index = [i <span class="hljs-keyword">for</span> i, x <span class="hljs-keyword">in</span> enumerate(instance.tags) <span class="hljs-keyword">if</span> x[<span class="hljs-string">'Key'</span>].<span class="hljs-builtin-name">find</span>(<span class="hljs-string">'Service'</span>) == 0]<br>    #   ec2_server[<span class="hljs-string">'id'</span>] = instance.id<br>        ec2_server[<span class="hljs-string">'id'</span>] = str(uuid.uuid3(uuid.NAMESPACE_DNS, instance.id))<br>        ec2_server[<span class="hljs-string">'ip'</span>] = instance.private_ip_address<br>        ec2_server[<span class="hljs-string">'hostname'</span>] = instance.tags[ec2_Name_index[0]][<span class="hljs-string">'Value'</span>]<br>        ec2_server[<span class="hljs-string">'protocol'</span>] = <span class="hljs-string">'ssh'</span><br>        ec2_server[<span class="hljs-string">'port'</span>] = <span class="hljs-string">'22'</span><br>        ec2_server[<span class="hljs-string">'platform'</span>] = <span class="hljs-string">'Linux'</span><br>        ec2_server[<span class="hljs-string">'is_active'</span>] = <span class="hljs-string">'true'</span><br>        ec2_server[<span class="hljs-string">'comment'</span>] = instance.tags[ec2_Service_index[0]][<span class="hljs-string">'Value'</span>]<br>        ec2_server[<span class="hljs-string">'admin_user'</span>] = admin_user_uuid<br>        ec2_server[<span class="hljs-string">'nodes'</span>] = [default_node_uuid]<br>        ec2_server[<span class="hljs-string">'org_name'</span>] = <span class="hljs-string">'DEFAULT'</span><br>        ec2_list.append(ec2_server)<br>    return ec2_list<br><br>def services_list_info(default_node_uuid):<br>    service_list = []<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(len(ec2_list)):<br>        <span class="hljs-keyword">if</span> ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'match'</span>) <span class="hljs-keyword">or</span> ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'multiplay'</span>) <span class="hljs-keyword">or</span> \<br>                ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'crossservice'</span>) <span class="hljs-keyword">or</span> ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'auth'</span>) <span class="hljs-keyword">or</span> \<br>                ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'gamex'</span>) <span class="hljs-keyword">or</span> ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'pay'</span>) <span class="hljs-keyword">or</span> \<br>                ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'gatex'</span>) <span class="hljs-keyword">or</span> ec2_list[j][<span class="hljs-string">'hostname'</span>].__contains__(<span class="hljs-string">'crossall'</span>):<br>            service_list.append(ec2_list[j])<br>    service_node_list = []<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> service_list:<br>        node_server = &#123;&#125;<br>        node_server[<span class="hljs-string">'id'</span>] = k[<span class="hljs-string">'id'</span>]<br>        node_server[<span class="hljs-string">'ip'</span>] = k[<span class="hljs-string">'ip'</span>]<br>        node_server[<span class="hljs-string">'hostname'</span>] = k[<span class="hljs-string">'hostname'</span>]<br>        node_server[<span class="hljs-string">'protocol'</span>] = k[<span class="hljs-string">'protocol'</span>]<br>        node_server[<span class="hljs-string">'port'</span>] = k[<span class="hljs-string">'port'</span>]<br>        node_server[<span class="hljs-string">'platform'</span>] = k[<span class="hljs-string">'platform'</span>]<br>        node_server[<span class="hljs-string">'is_active'</span>] = <span class="hljs-string">'true'</span><br>        node_server[<span class="hljs-string">'comment'</span>] = k[<span class="hljs-string">'comment'</span>]<br>        node_server[<span class="hljs-string">'admin_user'</span>] = k[<span class="hljs-string">'admin_user'</span>]<br>        node_server[<span class="hljs-string">'nodes'</span>] = [default_node_uuid]<br>        node_server[<span class="hljs-string">'org_name'</span>] = k[<span class="hljs-string">'org_name'</span>]<br>        service_node_list.append(node_server)<br>    return service_node_list<br><br>def get_token():<br>    url = <span class="hljs-string">'%s/api/users/v1/auth/'</span> % jump_endpoint<br>    query_args = &#123;<br>        <span class="hljs-string">"username"</span>: admin,<br>        <span class="hljs-string">"password"</span>: passowrd<br>    &#125;<br>    response = requests.post(url, data = query_args)<br>    return json.loads(response.text)[<span class="hljs-string">'token'</span>]<br><br>def get_nodes_info():<br>    url_nodes = <span class="hljs-string">'%s/api/assets/v1/nodes/'</span> % jump_endpoint<br>    token = get_token()<br>    header_info = &#123; <span class="hljs-string">"Authorization"</span>: <span class="hljs-string">'Bearer '</span> + token &#125;<br>    response = requests.<span class="hljs-builtin-name">get</span>(url_nodes, <span class="hljs-attribute">headers</span>=header_info)<br><span class="hljs-comment">#    pprint(json.loads(response.text))</span><br>    nodes_info = json.loads(response.text)<br>    nodes_list = []<br>    <span class="hljs-keyword">for</span> nodes <span class="hljs-keyword">in</span> nodes_info:<br>        nodes_server = &#123;&#125;<br>        nodes_server[<span class="hljs-string">'id'</span>] = nodes[<span class="hljs-string">'id'</span>]<br>        nodes_server[<span class="hljs-string">'value'</span>] = nodes[<span class="hljs-string">'value'</span>]<br>        nodes_list.append(nodes_server)<br>    service_node_info = &#123;&#125;<br>   <span class="hljs-built_in"> service </span>= nodes_list[0][<span class="hljs-string">'value'</span>]<br>   <span class="hljs-built_in"> default </span>= nodes_list[1][<span class="hljs-string">'value'</span>]<br>    service_node_info[service] = nodes_list[0][<span class="hljs-string">'id'</span>]<br>    service_node_info[default] = nodes_list[1][<span class="hljs-string">'id'</span>]<br>    service_node_uuid = service_node_info[jump_dev_node_name]<br>    default_node_uuid = service_node_info[jump_default_node_name]<br>    return default_node_uuid,service_node_uuid<br><br>def get_user_info():<br>    url_nodes = <span class="hljs-string">'%s/api/assets/v1/admin-user/'</span> % jump_endpoint<br>    token = get_token()<br>    header_info = &#123; <span class="hljs-string">"Authorization"</span>: <span class="hljs-string">'Bearer '</span> + token &#125;<br>    response = requests.<span class="hljs-builtin-name">get</span>(url_nodes, <span class="hljs-attribute">headers</span>=header_info)<br>    users_info = json.loads(response.text)<br>    users_server = &#123;&#125;<br>    <span class="hljs-keyword">for</span><span class="hljs-built_in"> users </span><span class="hljs-keyword">in</span> users_info:<br>        users_server[users[<span class="hljs-string">'name'</span>]] = users[<span class="hljs-string">'id'</span>]<br>    admin_uuid = users_server[jump_user]<br>    return admin_uuid<br><br>def register_ec2(data):<br>    url = <span class="hljs-string">'%s/api/assets/v1/assets/'</span> % jump_endpoint<br>    token = get_token()<br>    header_info = &#123;<span class="hljs-string">'Content-Type'</span>: <span class="hljs-string">'application/json'</span>, <span class="hljs-string">'Accept'</span>: <span class="hljs-string">'application/json'</span>,<span class="hljs-string">"Authorization"</span>: <span class="hljs-string">'Bearer '</span> + token&#125;<br><span class="hljs-comment">#    requests.delete(url, headers = header_info, data=json.dumps(data))</span><br>    requests.post(url, headers = header_info, <span class="hljs-attribute">data</span>=json.dumps(data))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    get_user_info()<br>    nodes_list = get_nodes_info()<br>    default_node_uuid = nodes_list[0]<br>    service_node_uuid = nodes_list[1]<br>    aws_local = <span class="hljs-string">'aws_cn'</span><br>    ec2_list = get_aws_info(aws_local,default_node_uuid)<br>    service_list = services_list_info(service_node_uuid)<br><br>    <span class="hljs-keyword">for</span> ec2_data <span class="hljs-keyword">in</span> ec2_list:<br>        <span class="hljs-builtin-name">print</span>(ec2_data)<br>        # register_ec2(ec2_data)<br><br>    # <span class="hljs-keyword">for</span> service_data <span class="hljs-keyword">in</span> service_list:<br>    #     <span class="hljs-builtin-name">print</span>(service_data)<br>    #     register_ec2(service_data)<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次jenkins插件升级问题</title>
    <url>/2019/06/10/52_jenins%E6%8F%92%E4%BB%B6%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>问题原因： 因为线上维护时jenkins压力过大部署延迟，维护结束后，顺手升级了jenkins的机器类型，升配后jenkins出现问题。。。。<br>总结：线上使用工具应追求稳定为主，不要轻易升级变动，如有需求也应在测试环境测试好后再同步到线上</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">没有发生问题之前的版本： 稳定版<span class="hljs-number">2.164</span><span class="hljs-number">.1</span><br>问题产生过程：将云主机stop  —— 升级实例配置  ——  start  ，启动jenkins进程，秘钥失效<br>解决过程中又制造问题：为了解决秘钥问题，升级了部分插件 credentials、ansible、ssh，无法完全还原到升级之前的状态<br></code></pre></td></tr></table></figure>

<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">解决问题过程：<br><span class="hljs-number">1.</span> 将jenkins版本升级为<span class="hljs-number">2.168</span><span class="hljs-number">-1</span>，使用插件备份进行还原，git秘钥正常，执行任务无法连接远程主机<br><span class="hljs-number">2.</span> 将jenkins版本还原为<span class="hljs-number">2.164</span><span class="hljs-number">.1</span>，使用插件备份进行还原，git秘钥正常，执行任务无法连接远程主机<br><span class="hljs-number">3.</span> 将jenkins版本升级海外版本<span class="hljs-number">2.164</span><span class="hljs-number">.2</span>并使用海外版本的插件（全部拷贝），git秘钥正常，执行任务无法连接远程主机<br></code></pre></td></tr></table></figure>

<figure class="highlight crystal"><table><tr><td class="code"><pre><code class="hljs crystal">问题产生原因：怀疑是jenkins插件bug<br>解决问题： 原先的机器，删除了jenkins整个 /var/<span class="hljs-class"><span class="hljs-keyword">lib</span>/<span class="hljs-title">jenkins</span>/目录，重新安装王牌<span class="hljs-title">jenkins</span>版本2.138.3和插件，秘钥正常，执行远程任务正常</span><br></code></pre></td></tr></table></figure>

<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">尝试复现连接问题复现失败：<br><span class="hljs-number">1.</span> 新开一台实例，安装jenkins <span class="hljs-number">2.164</span><span class="hljs-number">.1</span>，拷贝当时问题备份插件启动jenkins，jenkins启动后秘钥失效，重新填写秘钥后正常，执行远程任务正常<br><span class="hljs-number">2.</span> 拷贝版本<span class="hljs-number">2.168</span>备份的插件替换重启jenkins，秘钥正常，执行远程任务正常<br><span class="hljs-number">3.</span> 拷贝海外<span class="hljs-number">2.164</span><span class="hljs-number">.2</span>版本的插件替换后重启jenkins，秘钥正常，执行远程任务正常<br><span class="hljs-number">4.</span> 将主机stop再start，启动jenkins，秘钥正常，执行远程任务正常<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>sshpass非交互式SSH密码验证</title>
    <url>/2019/06/12/53_sshpass/</url>
    <content><![CDATA[<p>sshpass介绍：<br>ssh登陆不能在命令行中指定密码，sshpass解决了这一问题。sshpass用于非交互SSH的密码验证，一般用在sh脚本中，无须再次输入密码。它允许你用 -p 参数指定明文密码，然后直接登录远程服务器，它支持密码从命令行、文件、环境变量中读取。由于sshpass不能使用yum安装，使用源码包安装。本文档是介绍如何在mac环境下配置sshpass，以此方便服务器工程师们登录服务器。</p>
<p>安装步骤：<br>1、下载sshpass源码包：</p>
<p>zhaodan$  wget <a href="http://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz" target="_blank" rel="noopener">http://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz</a><br>Connecting to jaist.dl.sourceforge.net|150.65.7.130|:443… connected.<br>HTTP request sent, awaiting response… 200 OK<br>Length: 98362 (96K) [application/x-gzip]<br>Saving to: ‘sshpass-1.06.tar.gz’</p>
<p>sshpass-1.06.tar.gz               100%[==========================================================&gt;]  96.06K   305KB/s    in 0.3s</p>
<p>2019-06-12 16:42:12 (305 KB/s) - ‘sshpass-1.06.tar.gz’ saved [98362/98362]</p>
<p>2、解压</p>
<p>zhaodan$ tar zxvf sshpass-1.06.tar.gz<br>x sshpass-1.06/<br>x sshpass-1.06/main.c<br>x sshpass-1.06/install-sh<br>x sshpass-1.06/AUTHORS<br>x sshpass-1.06/config.h.in<br>x sshpass-1.06/depcomp<br>x sshpass-1.06/aclocal.m4<br>x sshpass-1.06/configure<br>x sshpass-1.06/NEWS<br>x sshpass-1.06/compile<br>x sshpass-1.06/ChangeLog<br>x sshpass-1.06/INSTALL<br>x sshpass-1.06/Makefile.am<br>x sshpass-1.06/sshpass.1<br>x sshpass-1.06/COPYING<br>x sshpass-1.06/README<br>x sshpass-1.06/Makefile.in<br>x sshpass-1.06/configure.ac<br>x sshpass-1.06/missing</p>
<p>3、进入解压后的sshpass目录编译安装</p>
<p>zhaodan$ cd sshpass-1.06<br>zhaodan$ ls<br>AUTHORS        INSTALL        NEWS        compile        configure.ac    main.c<br>COPYING        Makefile.am    README        config.h.in    depcomp        missing<br>ChangeLog    Makefile.in    aclocal.m4    configure    install-sh    sshpass.1</p>
<p>zhaodan$ ./configure<br>checking for a BSD-compatible install… /usr/bin/install -c<br>checking whether build environment is sane… yes<br>checking for a thread-safe mkdir -p… ./install-sh -c -d<br>checking for gawk… no<br>……此处省去中间编译输出日志……<br>checking that generated files are newer than configure… done<br>configure: creating ./config.status<br>config.status: creating Makefile<br>config.status: creating config.h<br>config.status: executing depfiles commands</p>
<p>zhaodan$ make &amp;&amp; make install<br>/Library/Developer/CommandLineTools/usr/bin/make  all-am<br>gcc -DHAVE_CONFIG_H -I.     -g -O2 -MT main.o -MD -MP -MF .deps/main.Tpo -c -o main.o main.c<br>mv -f .deps/main.Tpo .deps/main.Po<br>gcc  -g -O2   -o sshpass main.o<br>./install-sh -c -d ‘/usr/local/bin’<br>  /usr/bin/install -c sshpass ‘/usr/local/bin’<br>./install-sh -c -d ‘/usr/local/share/man/man1’<br>/usr/bin/install -c -m 644 sshpass.1 ‘/usr/local/share/man/man1’</p>
<p>4、尝试实行sshpass命令</p>
<p>zhaodan$ sshpass<br>Usage: sshpass [-f|-d|-p|-e] [-hV] command parameters<br>   -f filename   Take password to use from file<br>   -d number     Use number as file descriptor for getting password<br>   -p password   Provide password as argument (security unwise)<br>   -e            Password is passed as env-var “SSHPASS”<br>   With no parameters - password will be taken from stdin</p>
<p>   -P prompt     Which string should sshpass search for to detect a password prompt<br>   -v            Be verbose about what you’re doing<br>   -h            Show help (this screen)<br>   -V            Print version information<br>At most one of -f, -d, -p or -e should be used</p>
<p>5、查看路径（默认为/usr/local/bin/sshpass）</p>
<p>zhaodan$ which sshpass<br>/usr/local/bin/sshpass</p>
<p>配置iTerm2：<br><a href="https://postimg.cc/Q9nMLD2Y" target="_blank" rel="noopener"><img src="https://i.postimg.cc/C5wnqLm0/sshpass1.png" alt="sshpass1.png"></a></p>
<p>command里的命令格式如下：</p>
<p>/usr/local/bin/sshpass  -p ‘YourPassword’  ssh  -o StrictHostKeychecking=no   YourName@PublicIP  -p  port</p>
<p>配置完成后测试如下：<br><a href="https://postimg.cc/SY2xk5qS" target="_blank" rel="noopener"><img src="https://i.postimg.cc/7hXGM8W2/sshpass2.png" alt="sshpass2.png"></a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>TeamCity还原备份数据及升级文档</title>
    <url>/2019/06/14/54_TC/</url>
    <content><![CDATA[<p>没有用过TC因为工作需求现读官方文档做备份还原等操作，以下是我读参考文档的顺序（建议新手读文档一步一步了解）：</p>
<p>查看版本信息<br><a href="https://confluence.jetbrains.com/display/TW/Previous+Releases+Downloads" target="_blank" rel="noopener">https://confluence.jetbrains.com/display/TW/Previous+Releases+Downloads</a><br>安装与启动<br><a href="https://confluence.jetbrains.com/display/TCD18/Installation+Quick+Start#InstallationQuickStart-onLinuxandOSX" target="_blank" rel="noopener">https://confluence.jetbrains.com/display/TCD18/Installation+Quick+Start#InstallationQuickStart-onLinuxandOSX</a><br>主目录介绍<br><a href="https://confluence.jetbrains.com/display/TCD10/TeamCity+Data+Directory" target="_blank" rel="noopener">https://confluence.jetbrains.com/display/TCD10/TeamCity+Data+Directory</a><br>数据库<br><a href="https://confluence.jetbrains.com/display/TCD18/Setting+up+an+External+Database" target="_blank" rel="noopener">https://confluence.jetbrains.com/display/TCD18/Setting+up+an+External+Database</a><br>备份还原<br><a href="https://confluence.jetbrains.com/display/TCD18/Restoring+TeamCity+Data+from+Backup" target="_blank" rel="noopener">https://confluence.jetbrains.com/display/TCD18/Restoring+TeamCity+Data+from+Backup</a></p>
<hr>
<p>操作步骤：</p>
<p>环境说明：在内网开一台测试机，脱离生产环境进行备份还原操作</p>
<p>新建目录下载生产环境中使用的相同version压缩包：</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># mkdir /data</span><br><span class="hljs-meta"># cd /data/</span><br><span class="hljs-meta"># wget https://download.jetbrains.8686c.com/teamcity/TeamCity-10.0.1.tar.gz</span><br></code></pre></td></tr></table></figure>

<p>连接服务器获取TC备份数据到测试机：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><code class="hljs stylus">scp -<span class="hljs-selector-tag">i</span> XXX<span class="hljs-selector-class">.pem</span>  TeamCity_Backup_20190612_151253<span class="hljs-selector-class">.zip</span> ec2-user@<span class="hljs-number">52.82</span><span class="hljs-selector-class">.XX</span><span class="hljs-selector-class">.XX</span>:/tmp<br></code></pre></td></tr></table></figure>

<p>安装MySQL并创建数据库：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><code class="hljs n1ql"># yum install mysql-server mysql<br># mysql<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> teamcity <span class="hljs-keyword">collate</span> utf8_bin;<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> restoretc <span class="hljs-keyword">collate</span> utf8_bin;<br>mysql&gt; <span class="hljs-keyword">update</span> mysql.<span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">PASSWORD</span>(<span class="hljs-string">'password'</span>) <span class="hljs-keyword">where</span> <span class="hljs-keyword">User</span>=<span class="hljs-string">'root’;</span><br><span class="hljs-string">mysql&gt; flush privileges;</span><br></code></pre></td></tr></table></figure>

<p>升级Java版本:</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala">如果已经有低版本Java需卸载再安装<br><span class="hljs-meta"># yum install java-1.8.0-openjdk-src.x86_64</span><br><span class="hljs-meta"># java -version</span><br><span class="hljs-meta"># echo $JAVA_HOME</span><br>/usr/lib/jvm/jre<br></code></pre></td></tr></table></figure>

<p>解压并启动TC：</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># tar zxvf TeamCity-10.0.1.tar.gz</span><br><span class="hljs-meta"># cd TeamCity</span><br><span class="hljs-meta"># cd bin/</span><br><span class="hljs-meta"># sh runAll.sh start</span><br></code></pre></td></tr></table></figure>

<p>下载连接数据库工具并拷贝到所需目录：</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># wget https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-8.0.16.tar.gz</span><br><span class="hljs-meta"># tar zxvf mysql-connector-java-8.0.16.tar.gz</span><br><span class="hljs-meta"># cd mysql-connector-java-8.0.16</span><br><span class="hljs-meta"># cp mysql-connector-java-8.0.16.jar /root/.BuildServer/lib/jdbc/</span><br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/SYCbZpkM" target="_blank" rel="noopener"><img src="https://i.postimg.cc/QCnNdXz0/TC1.png" alt="TC1.png"></a><br><a href="https://postimg.cc/mcp4kwmt" target="_blank" rel="noopener"><img src="https://i.postimg.cc/G2dmMgYJ/TC2.png" alt="TC2.png"></a></p>
<p>创建还原备份的新目录并拷贝连接数据库工具到对应目录：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><code class="hljs gradle"># mkdir <span class="hljs-regexp">/mnt/</span>restoretc<span class="hljs-regexp">/lib/</span>jdbc -p<br># cp -r <span class="hljs-regexp">/root/</span>.BuildServer<span class="hljs-regexp">/lib/</span>jdbc<span class="hljs-regexp">/mysql-connector-java-8.0.16.jar /m</span>nt<span class="hljs-regexp">/restoretc/</span>lib<span class="hljs-regexp">/jdbc/</span><br></code></pre></td></tr></table></figure>

<p>还原备份命令：</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">-A 指定新路径	-F 指定备份数据路径		-T 指定数据库配置<br># <span class="hljs-keyword">sh</span> maintainDB.<span class="hljs-keyword">sh</span> <span class="hljs-keyword">restore</span> -A /mnt/restoretc -F /mnt/TeamCity_Backup_20190612_151253.<span class="hljs-keyword">zip</span> -T /mnt/database.properties<br></code></pre></td></tr></table></figure>

<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"># cat /mnt/BuildServer/config/database.properties<br>#Thu Jun <span class="hljs-number">13</span> <span class="hljs-number">09</span>:<span class="hljs-number">48</span>:<span class="hljs-number">47</span> UTC <span class="hljs-number">2019</span><br>connectionProperties.user=root<br>connectionProperties.password=password<br>connectionUrl=jdbc\:mysql\:<span class="hljs-comment">///uu</span><br>[<span class="hljs-symbol">root@</span>ip<span class="hljs-number">-10</span><span class="hljs-number">-17</span><span class="hljs-number">-0</span><span class="hljs-number">-248</span> TeamCity]# cat  conf/teamcity-startup.properties<br>^[[A#Thu Jun <span class="hljs-number">13</span> <span class="hljs-number">09</span>:<span class="hljs-number">45</span>:<span class="hljs-number">23</span> UTC <span class="hljs-number">2019</span><br>teamcity.data.path=/mnt/BuildServer<br></code></pre></td></tr></table></figure>

<p>还原后需修改目录名字为新的路径, 现在备份还原后数据存在，但是登录模块有问题,因为生产环境中登录接入了LDAP</p>
<p>踩过的坑：</p>
<ol>
<li>使用2018-02-24版本，不需要手动安装连接数据库的工具，还原时也不需要删除原来的数据库，只要新建新的数据库就行，但是因为生产中使用的TC版本太低，数据还原后会出现版本不支持数据无法显示的问题。</li>
<li>10.0.1版本还原时必须删除原始数据库并创建新的数据库才能正常导入。</li>
</ol>
<hr>
<p>#####TC备份还原后升级2018-02-24版本</p>
<ol>
<li>下载新版压缩包 # wget <a href="https://download.jetbrains.8686c.com/teamcity/TeamCity-2018.2.4.tar.gz" target="_blank" rel="noopener">https://download.jetbrains.8686c.com/teamcity/TeamCity-2018.2.4.tar.gz</a></li>
<li>解压并替换原目录，拷贝原目录下的配置文件到解压后的新目录 conf/teamcity-startup.properties，然后启动</li>
</ol>
<p>升级到新版后遇到的问题：<br>设置JVM内存,解决内存溢出问题 /data/TeamCity/bin/catalina.sh<br>升级后有一个自动重启的功能，使用原来命令stop不能停止，停掉就会立马重启一个</p>
<p><a href="https://postimg.cc/dhBwPvdR" target="_blank" rel="noopener"><img src="https://i.postimg.cc/HLGxMkkN/TC3.png" alt="TC3.png"></a><br><a href="https://postimg.cc/xk1Y97yw" target="_blank" rel="noopener"><img src="https://i.postimg.cc/SKWKfbXx/TC4.png" alt="TC4.png"></a><br><a href="https://postimg.cc/r0vLCpXT" target="_blank" rel="noopener"><img src="https://i.postimg.cc/L5s6SqxJ/TC5.png" alt="TC5.png"></a><br><a href="https://postimg.cc/ygJHZZGn" target="_blank" rel="noopener"><img src="https://i.postimg.cc/Pxyr0bQG/TC6.png" alt="TC6.png"></a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>TC</tag>
      </tags>
  </entry>
  <entry>
    <title>关于jenkins邮件报警设置文档</title>
    <url>/2018/12/18/58_jenkins%E6%B7%BB%E5%8A%A0%E9%82%AE%E4%BB%B6%E6%8A%A5%E8%AD%A6/</url>
    <content><![CDATA[<ol>
<li>安装邮件扩展插件<br><a href="https://postimg.cc/FfgDRwVT" target="_blank" rel="noopener"><img src="https://i.postimg.cc/k5LZjm6P/jenkins-1.png" alt="jenkins-1.png"></a></li>
</ol>
<ol start="2">
<li>进入系统设置</li>
</ol>
<p><a href="https://postimg.cc/yg1nSnfs" target="_blank" rel="noopener"><img src="https://i.postimg.cc/DZsNHMLJ/jenkins-2.png" alt="jenkins-2.png"></a></p>
<ol start="3">
<li>找到Extended E-mail Notification点开高级选项进行设置SMTP server及邮箱</li>
</ol>
<p><a href="https://postimg.cc/jLwcNDhw" target="_blank" rel="noopener"><img src="https://i.postimg.cc/L6vbcfYT/jenkins-3.png" alt="jenkins-3.png"></a></p>
<p>4.打开一个任务，进行构建后操作配置，填写接收邮箱其余可默认</p>
<p><a href="https://postimg.cc/7bQXf3Sr" target="_blank" rel="noopener"><img src="https://i.postimg.cc/rFqHZgms/jenkins-4.png" alt="jenkins-4.png"></a></p>
<ol start="5">
<li>点开Advanced Settings 添加trigger，此处为添加success触发器，每当任务执行成功则发送邮件<br><a href="https://postimg.cc/qzPLGpmm" target="_blank" rel="noopener"><img src="https://i.postimg.cc/pLT6RTKt/jenkins-5.png" alt="jenkins-5.png"></a></li>
</ol>
<ol start="6">
<li>Apply - save  测试结果</li>
</ol>
<p><a href="https://postimg.cc/dZDB53Pf" target="_blank" rel="noopener"><img src="https://i.postimg.cc/wMQGTRW9/jenkins-6.png" alt="jenkins-6.png"></a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>rocketmq搭建精简版</title>
    <url>/2019/12/19/60_rocketmq/</url>
    <content><![CDATA[<p>德国地区是三台主机组成的集群，分配情况为三个nameserver三个broker无slave</p>
<p>所有主机都要配置：</p>
<ol>
<li>配置hosts主机名</li>
<li>配置java环境</li>
<li>部署rocketmq</li>
<li>部署rocketmq_console（部署一台有外网IP的服务器即可）</li>
</ol>
<p>[rocketmq]<br>172.17.4.20    rocketmq-nameserver1    rocketmq-master1<br>172.17.4.21    rocketmq-nameserver2    rocketmq-master2<br>172.17.4.22    rocketmq-nameserver3    rocketmq-master3</p>
<p>jdk-8u181-linux-x64.tar.gz<br>rocketmq-all-4.5.2-bin-release.tar.gz<br>rocketmq-console-ng-1.0.1.jar</p>
<p>配置java环境:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">mkdir  /usr/lib/jvm/<br>tar  -xzvf  jdk-8u181-linux-x64.tar.gz -C /usr/lib/jvm/<br>echo <span class="hljs-string">"export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_181"</span>&gt;&gt;/etc/profile<br>echo <span class="hljs-string">'export JRE_HOME=$&#123;JAVA_HOME&#125;/jre'</span>&gt;&gt;/etc/profile<br>echo  <span class="hljs-string">'export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib'</span>&gt;&gt;/etc/profile<br>echo  <span class="hljs-string">'export  PATH=$&#123;JAVA_HOME&#125;/bin:$PATH'</span>&gt;&gt;/etc/profile<br>source  /etc/profile<br>java -version<br></code></pre></td></tr></table></figure>

<p>部署rocketmq：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">mkdir -p /data/rocketmq/store<br>cd rocketmq/store/<br>mkdir commitlog config consumequeue <span class="hljs-keyword">index</span><br>touch <span class="hljs-keyword">abort</span> <span class="hljs-keyword">checkpoint</span> <span class="hljs-keyword">lock</span><br></code></pre></td></tr></table></figure>

<p>解压rocketmq并修改配置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># cat /usr/local/rocketmq-all-4.5.2-bin-release/conf/2m-noslave/broker-a.properties</span><br><span class="hljs-comment"># Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="hljs-comment"># contributor license agreements.  See the NOTICE file distributed with</span><br><span class="hljs-comment"># this work for additional information regarding copyright ownership.</span><br><span class="hljs-comment"># The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="hljs-comment"># (the "License"); you may not use this file except in compliance with</span><br><span class="hljs-comment"># the License.  You may obtain a copy of the License at</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment"># distributed under the License is distributed on an "AS IS" BASIS,</span><br><span class="hljs-comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment"># See the License for the specific language governing permissions and</span><br><span class="hljs-comment"># limitations under the License.</span><br><span class="hljs-attr">brokerClusterName</span>=rocketmq-Cluster<br><span class="hljs-attr">brokerName</span>=broker-a<br><span class="hljs-attr">brokerId</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">namesrvAddr</span>=<span class="hljs-number">172.17</span>.<span class="hljs-number">4.20</span>:<span class="hljs-number">9876</span><span class="hljs-comment">;172.17.4.21:9876;172.17.4.22:9876</span><br><span class="hljs-attr">defaultTopicQueueNums</span>=<span class="hljs-number">6</span><br><span class="hljs-attr">autoCreateTopicEnable</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">autoCreateSubscriptionGroup</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">listenPort</span>=<span class="hljs-number">10911</span><br><span class="hljs-attr">deleteWhen</span>=<span class="hljs-number">04</span><br><span class="hljs-attr">fileReservedTime</span>=<span class="hljs-number">24</span><br><span class="hljs-attr">storePathRootDir</span>=/data/rocketmq/store<br><span class="hljs-attr">storePathCommitLog</span>=/data/rocketmq/store/commitlog<br><span class="hljs-attr">storePathConsumeQueue</span>=/data/rocketmq/store/consumequeue<br><span class="hljs-attr">storePathIndex</span>=/data/rocketmq/store/index<br><span class="hljs-attr">storeCheckpoint</span>=/data/rocketmq/store/checkpoint<br><span class="hljs-attr">abortFile</span>=/data/rocketmq/store/abort<br><span class="hljs-attr">brokerRole</span>=ASYNC_MASTER<br><span class="hljs-attr">flushDiskType</span>=ASYNC_FLUSH<br><span class="hljs-attr">messageDelayLevel</span>=<span class="hljs-number">1</span>s <span class="hljs-number">5</span>s <span class="hljs-number">10</span>s <span class="hljs-number">30</span>s <span class="hljs-number">1</span>m <span class="hljs-number">2</span>m <span class="hljs-number">3</span>m <span class="hljs-number">4</span>m <span class="hljs-number">5</span>m <span class="hljs-number">6</span>m <span class="hljs-number">7</span>m <span class="hljs-number">8</span>m <span class="hljs-number">9</span>m <span class="hljs-number">10</span>m <span class="hljs-number">20</span>m <span class="hljs-number">30</span>m <span class="hljs-number">1</span>h <span class="hljs-number">2</span>h<br><span class="hljs-attr">maxTransferCountOnMessageInMemory</span>=<span class="hljs-number">400</span><br><span class="hljs-comment">#发送消息的最大线程数</span><br><span class="hljs-attr">sendMessageThreadPoolNums</span>=<span class="hljs-number">32</span><br><span class="hljs-comment">#large thread numbers</span><br><span class="hljs-comment">#发送消息是否使用可重入锁</span><br><span class="hljs-attr">useReentrantLockWhenPutMessage</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">waitTimeMillsInSendQueue</span>=<span class="hljs-number">1000</span><br><span class="hljs-attr">transientStorePoolEnable</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">transientStorePoolSize</span>=<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure>
<p>根据实例配置调整内存：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">vim /usr/<span class="hljs-keyword">local</span>/rocketmq-<span class="hljs-keyword">all</span><span class="hljs-number">-4.5</span><span class="hljs-number">.2</span>-bin-<span class="hljs-keyword">release</span>/bin/runbroker.sh<br>JAVA_OPT="$&#123;JAVA_OPT&#125; -server -Xms4g -Xmx4g -Xmn2g"<br></code></pre></td></tr></table></figure>

<p>启动服务顺序：<br>先启动nameserver再启动broker，停止服务时顺序也一样</p>
<p>启动nameserver：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"># cat /home/david/start_mqnamesrv.sh<br>nohup sh /usr/local/rocketmq-all<span class="hljs-number">-4.5</span><span class="hljs-number">.2</span>-bin-release/bin/mqnamesrv &gt; /dev/<span class="hljs-literal">null</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure>

<p>启动broker:</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"># cat /home/david/start_mqbroker.sh<br>nohup sh /usr/local/rocketmq-all<span class="hljs-number">-4.5</span><span class="hljs-number">.2</span>-bin-release/bin/mqbroker -c /usr/local/rocketmq-all<span class="hljs-number">-4.5</span><span class="hljs-number">.2</span>-bin-release/conf/<span class="hljs-number">2</span>m-noslave/broker-a.properties &gt; /dev/<span class="hljs-literal">null</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;<br></code></pre></td></tr></table></figure>

<p>检查集群状态：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>rocketmq-nameserver1 ~]# cd /usr/local/rocketmq-all<span class="hljs-number">-4.5</span><span class="hljs-number">.2</span>-bin-release/bin/<br>[<span class="hljs-symbol">root@</span>rocketmq-nameserver1 bin]# ./mqadmin clusterList --namesrvAddr=<span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.20</span>:<span class="hljs-number">9876</span><br>RocketMQLog:WARN No appenders could be found <span class="hljs-keyword">for</span> logger (io.netty.util.<span class="hljs-built_in">int</span>ernal.PlatformDependent0).<br>RocketMQLog:WARN Please initialize the logger system properly.<br>#Cluster Name     #Broker Name            #BID  #Addr                  #Version                #InTPS(LOAD)       #OutTPS(LOAD) #PCWait(ms) #Hour #SPACE<br>rocketmq-cluster  broker-b                <span class="hljs-number">0</span>     <span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.21</span>:<span class="hljs-number">10911</span>      V4_5_2                   <span class="hljs-number">0.00</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>ms)         <span class="hljs-number">0.00</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>ms)          <span class="hljs-number">0</span> <span class="hljs-number">438169.53</span> <span class="hljs-number">0.0003</span><br>rocketmq-cluster  broker-c                <span class="hljs-number">0</span>     <span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.22</span>:<span class="hljs-number">10911</span>      V4_5_2                   <span class="hljs-number">0.00</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>ms)         <span class="hljs-number">0.00</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>ms)          <span class="hljs-number">0</span> <span class="hljs-number">438169.53</span> <span class="hljs-number">0.0003</span><br>rocketmq-Cluster  broker-a                <span class="hljs-number">0</span>     <span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.20</span>:<span class="hljs-number">10911</span>      V4_5_2                   <span class="hljs-number">0.00</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>ms)         <span class="hljs-number">0.00</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>ms)          <span class="hljs-number">0</span> <span class="hljs-number">438169.53</span> <span class="hljs-number">0.0003</span><br></code></pre></td></tr></table></figure>

<p>启动rocketmq_console：<br>console启动时只能识别第一个IP，所以开发打包时写死了集群IP</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">java -jar /opt/rocketmq-console/rocketmq-console-ng<span class="hljs-number">-1.0</span><span class="hljs-number">.1</span>.jar --server.port=<span class="hljs-number">12581</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>消息</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins在生产环境中的应用部署</title>
    <url>/2019/06/20/55_jenkins%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<p>官方文档：<a href="https://jenkins.io/zh/doc/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/</a><br>1.搭建安装</p>
<blockquote>
<p>最低环境要求：<br>            Java8<br>            256M可用内存<br>            1GB磁盘<br>生产中使用配置:<br>            java8<br>            m4.xlarge(4核16G)<br>            200GB磁盘</p>
</blockquote>
<p><em>jenins分2个版本，LTS和WEEK也就是稳定版和每周更新版，生产环境中使用稳定版。官方版本信息：<a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a></em></p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># wget https://pkg.jenkins.io/redhat-stable/jenkins-2.138.3-1.1.noarch.rpm</span><br><span class="hljs-meta"># rpm -ivh jenkins-2.138.3-1.1.noarch.rpm</span><br><span class="hljs-meta"># /etc/init.d/jenkins start</span><br></code></pre></td></tr></table></figure>
<p>生产环境中使用了nginx反向代理，jenkins启动后访问web，从jenkins log中获取认证秘钥进行下一步</p>
<hr>
<p>2.插件<br>输入秘钥后会提示安装插件（默认建议安装的先进行安装），下面列出的是线上所使用到的主要关键插件及版本信息<br>name|version|function<br>—–|—–|—–<br>Active Choices Plug-in|2.1|构建选项列表，我们的生产环境中是用来选择部署zip包<br>Ansible plugin|1.0|运行ansible playbook<br>Build Timeout|1.19|任务构建超时自动终止<br>Credentials|2.1.18|存储秘钥凭据<br>SSH Credentials|1.14|存储ssh凭据<br>Email Extension Template Plugin|1.1|邮件扩展模板<br>Job DSL|1.70|脚本<br>Role-based Authorization Strategy|2.9.0|基于role的权限控制<br>Script Security|1.49|我们此处使用这个插件获取代码的附加路径</p>
<hr>
<p>3.秘钥key<br>安装好Credentials插件后会有凭据的图标显示，进入里面进行配置，我们的生产环境中一共使用4个秘钥</p>
<blockquote>
<ol>
<li>Git秘钥<br><a href="https://postimg.cc/Bt036Xg5" target="_blank" rel="noopener"><img src="https://i.postimg.cc/XNZYs5BP/jenkins-dev1.png" alt="jenkins-dev1.png"></a></li>
<li>ssh秘钥<br><a href="https://postimg.cc/D8C3B5K5" target="_blank" rel="noopener"><img src="https://i.postimg.cc/W1VppfYR/jenkins-dev2.png" alt="jenkins-dev2.png"></a></li>
<li>dynamodb key id<br><a href="https://postimg.cc/30BnrLZq" target="_blank" rel="noopener"><img src="https://i.postimg.cc/pyN7Z45P/jenkins-dev3.png" alt="jenkins-dev3.png"></a></li>
<li>dynamodb key sec<br><a href="https://postimg.cc/tnyBj0FP" target="_blank" rel="noopener"><img src="https://i.postimg.cc/6q4gCt3H/jenkins-dev4.png" alt="jenkins-dev4.png"></a></li>
</ol>
</blockquote>
<hr>
<p>4.初始化一个groovy任务(git+ansible)<br><a href="https://postimg.cc/QHNrQwvH" target="_blank" rel="noopener"><img src="https://i.postimg.cc/hPTPBqrb/jenkins-dev5.png" alt="jenkins-dev5.png"></a><br><a href="https://postimg.cc/Mnv24R6w" target="_blank" rel="noopener"><img src="https://i.postimg.cc/y8T1DX2D/jenkins-dev6.png" alt="jenkins-dev6.png"></a></p>
<hr>
<p>5.创建线上部署任务<br>执行创建好的groovy任务，创建线上部署任务<br><a href="https://postimg.cc/t7NjVpSK" target="_blank" rel="noopener"><img src="https://i.postimg.cc/wxSTZBhj/jenkins-dev7.png" alt="jenkins-dev7.png"></a><br><a href="https://postimg.cc/bZWcjJrt" target="_blank" rel="noopener"><img src="https://i.postimg.cc/d0tqrZK4/jenkins-dev8.png" alt="jenkins-dev8.png"></a><br><a href="https://postimg.cc/Q9gR5JbQ" target="_blank" rel="noopener"><img src="https://i.postimg.cc/DZRF9C4M/jenkins-dev9.png" alt="jenkins-dev9.png"></a></p>
<hr>
<p>6.邮件报警<br>在全局配置中设置邮件服务器信息，在部署任务中使用邮件扩展插件进行添加邮件报警<br><a href="https://postimg.cc/TLvzp4r2" target="_blank" rel="noopener"><img src="https://i.postimg.cc/gJxmB9jh/jenkins-dev10.png" alt="jenkins-dev10.png"></a><br><a href="https://postimg.cc/f3d4WNSg" target="_blank" rel="noopener"><img src="https://i.postimg.cc/MGPzDZ6x/jenkins-dev11.png" alt="jenkins-dev11.png"></a></p>
]]></content>
      <categories>
        <category>linux</category>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>修复磁盘解决不能写和清理结构问题</title>
    <url>/2020/01/16/61_fdisk/</url>
    <content><![CDATA[<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">touch</span> <span class="hljs-string">a.txt</span><br><span class="hljs-attr">touch:</span> <span class="hljs-string">cannot</span> <span class="hljs-string">touch</span> <span class="hljs-attr">'a.txt':</span> <span class="hljs-string">Read-only</span> <span class="hljs-string">file</span> <span class="hljs-string">system</span><br><br><span class="hljs-string">$</span> <span class="hljs-string">cat</span> <span class="hljs-string">/etc/fstab</span><br><span class="hljs-string">/dev/mapper/lumi1--vg-root</span> <span class="hljs-string">/</span>               <span class="hljs-string">ext4</span>    <span class="hljs-string">errors=remount-ro</span> <span class="hljs-number">0</span>       <span class="hljs-number">1</span><br><br><span class="hljs-string">boot</span>           <span class="hljs-string">ext2</span>    <span class="hljs-string">defaults</span>        <span class="hljs-number">0</span>       <span class="hljs-number">2</span><br><span class="hljs-string">/dev/mapper/lumi1--vg-swap_1</span> <span class="hljs-string">none</span>            <span class="hljs-string">swap</span>    <span class="hljs-string">sw</span>              <span class="hljs-number">0</span>       <span class="hljs-number">0</span><br><br><span class="hljs-string">$</span> <span class="hljs-string">sudo</span> <span class="hljs-string">su</span><br><span class="hljs-string">[sudo]</span> <span class="hljs-attr">password for lumi:</span><br><br><span class="hljs-comment"># mount -o rw,remount /</span><br><span class="hljs-attr">mount:</span> <span class="hljs-string">cannot</span> <span class="hljs-string">remount</span> <span class="hljs-string">/dev/mapper/lumi1--vg-root</span> <span class="hljs-string">read-write,</span> <span class="hljs-string">is</span> <span class="hljs-string">write-protected</span><br><br><span class="hljs-comment"># fsck -t ext4 /</span><br><span class="hljs-string">fsck</span> <span class="hljs-string">from</span> <span class="hljs-string">util-linux</span> <span class="hljs-number">2.27</span><span class="hljs-number">.1</span><br><span class="hljs-string">e2fsck</span> <span class="hljs-number">1.42</span><span class="hljs-number">.13</span> <span class="hljs-string">(17-May-2015)</span><br><span class="hljs-string">/dev/mapper/lumi1--vg-root:</span> <span class="hljs-string">recovering</span> <span class="hljs-string">journal</span><br><br><span class="hljs-comment"># mount -o rw,remount /</span><br><span class="hljs-attr">mount:</span> <span class="hljs-string">cannot</span> <span class="hljs-string">remount</span> <span class="hljs-string">/dev/mapper/lumi1--vg-root</span> <span class="hljs-string">read-write,</span> <span class="hljs-string">is</span> <span class="hljs-string">write-protected</span><br></code></pre></td></tr></table></figure>
<p>重启服务器</p>
<p>恢复正常</p>
<p>参考文档：<br><a href="http://blog.c1gstudio.com/archives/1526" target="_blank" rel="noopener">http://blog.c1gstudio.com/archives/1526</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>磁盘</tag>
      </tags>
  </entry>
  <entry>
    <title>jenkins自动打包maven类型项目踩坑记录</title>
    <url>/2020/02/24/62_jenkins%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85maven%E9%A1%B9%E7%9B%AE%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<p>问题：ansible调用command远程启动服务，找不到JAVA_HOME。已经写在/etc/profile中并source生效，登录远端服务器echo $JAVA_HOME显示正常<br>原因：ansible里不加载profile的变量，找不到java路径，所以远程调用脚本需要重申变量。ansible远程执行的是non-login shell 并不会加载/etc/profile和<del>/.bash_profile下的环境变量，只加载</del>/.bashrc和/etc/bashrc</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># cat /etc/bashrc</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/usr/lib/jvm/jdk1.8.0_181<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">JRE_HOME</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/jre<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/lib<br><span class="hljs-builtin-name">export</span>  <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:$PATH<br><br><span class="hljs-comment"># cat ~/.bash_profile</span><br><span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:$HOME/bin<br><br><span class="hljs-builtin-name">export</span> PATH<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>sed &amp; 记一次线上log遇到的问题</title>
    <url>/2018/06/21/56_sed/</url>
    <content><![CDATA[<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim">先总结一个工作中遇到的实例：<br>有一个<span class="hljs-built_in">log</span>文件因为json格式错误，自动导入kibana失败后手动执行fluent-<span class="hljs-keyword">cat</span>报错<br><br>[root@ip <span class="hljs-built_in">log</span>]# <span class="hljs-keyword">cat</span> logics_auth.<span class="hljs-number">06.12</span>.<span class="hljs-number">2018</span>.<span class="hljs-built_in">log</span> |/<span class="hljs-keyword">opt</span>/td-agent/embedded/bin/fluent-<span class="hljs-keyword">cat</span> auth<br>parse error: unallowed token at this point in JSON text<br>                                       :<span class="hljs-string">"[Debug]"</span>&#125;<br>                     (<span class="hljs-keyword">right</span> here) ------^<br>[root@ip <span class="hljs-built_in">log</span>]# <span class="hljs-keyword">cat</span> logics_auth.<span class="hljs-number">07.12</span>.<span class="hljs-number">2018</span>.<span class="hljs-built_in">log</span> |/<span class="hljs-keyword">opt</span>/td-agent/embedded/bin/fluent-<span class="hljs-keyword">cat</span> auth<br>parse error: unallowed token at this point in JSON text<br>                                       ,<span class="hljs-string">"DeviceId"</span>:<span class="hljs-comment">"imeiA00000731A2953</span><br>                     (<span class="hljs-keyword">right</span> here) ------^<br><br>[root@ip <span class="hljs-built_in">log</span>]# <span class="hljs-keyword">cat</span> logics_auth.<span class="hljs-number">06.12</span>.<span class="hljs-number">2018</span>.<span class="hljs-built_in">log</span> | <span class="hljs-keyword">grep</span> ^:				（通过<span class="hljs-keyword">grep</span> ^: 找到以：开头的报错信息）<br>:<span class="hljs-string">"[Debug]"</span>&#125;<br>[root@ip <span class="hljs-built_in">log</span>]# <span class="hljs-keyword">cat</span> logics_auth.<span class="hljs-number">06.12</span>.<span class="hljs-number">2018</span>.<span class="hljs-built_in">log</span> | <span class="hljs-keyword">grep</span> ^: -n			 （-n 确定报错的行数）<br><span class="hljs-number">1153064</span>::<span class="hljs-string">"[Debug]"</span>&#125;<br><br>[root@ip <span class="hljs-built_in">log</span>]# sed -i <span class="hljs-string">'1153064d'</span> logics_auth.<span class="hljs-number">06.12</span>.<span class="hljs-number">2018</span>.<span class="hljs-built_in">log</span>			（删除确定行的错误信息）<br>[root@ip <span class="hljs-built_in">log</span>]# <span class="hljs-keyword">cat</span> logics_auth.<span class="hljs-number">06.12</span>.<span class="hljs-number">2018</span>.<span class="hljs-built_in">log</span> |/<span class="hljs-keyword">opt</span>/td-agent/embedded/bin/fluent-<span class="hljs-keyword">cat</span> auth		（执行fluent-<span class="hljs-keyword">cat</span>）<br></code></pre></td></tr></table></figure>


<p>sed基本用法：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><code class="hljs taggerscript"><span class="hljs-symbol">\(</span>..<span class="hljs-symbol">\)</span>匹配子串，保存匹配的字符，如s/<span class="hljs-symbol">\(</span>love<span class="hljs-symbol">\)</span>able/<span class="hljs-symbol">\1</span>rs，loveable被替换成lovers。<br><br>替换文本中的字符串：<br><br>sed 's/book/books/' file<br></code></pre></td></tr></table></figure>

<figure class="highlight vhdl"><table><tr><td class="code"><pre><code class="hljs vhdl">直接编辑文件选项-i，会匹配<span class="hljs-keyword">file</span>文件中每一行的第一个book替换为books：<br><br>sed -i<span class="hljs-symbol">'s</span>/book/books/g’ <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight vhdl"><table><tr><td class="code"><pre><code class="hljs vhdl">使用后缀 /g 标记会替换每一行中的所有匹配：<br><br>sed <span class="hljs-symbol">'s</span>/book/books/g’ <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">当需要从第N处匹配开始替换时，可以使用 /Ng：<br><br><span class="hljs-built_in">echo</span> sksksksksksk | sed <span class="hljs-string">'s/sk/SK/2g'</span><br><br>skSKSKSKSKSK<br><br><span class="hljs-built_in">echo</span> sksksksksksk | sed <span class="hljs-string">'s/sk/SK/3g'</span><br><br>skskSKSKSKSK<br><br><span class="hljs-built_in">echo</span> sksksksksksk | sed <span class="hljs-string">'s/sk/SK/4g'</span><br><br>skskskSKSKSK<br></code></pre></td></tr></table></figure>

<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">定界符出现在样式内部时，需要进行转义：<br><br>sed 's/\<span class="hljs-string">/bin/</span>\<span class="hljs-string">/usr</span>\<span class="hljs-string">/local</span>\<span class="hljs-string">/bin/g</span>’<br></code></pre></td></tr></table></figure>

<figure class="highlight applescript"><table><tr><td class="code"><pre><code class="hljs applescript">删除空白行：<br><br>sed '/^$/d’ <span class="hljs-built_in">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight lsl"><table><tr><td class="code"><pre><code class="hljs lsl">删除文件的第<span class="hljs-number">2</span>行：<br><br>sed '<span class="hljs-number">2</span>d’ file<br></code></pre></td></tr></table></figure>

<figure class="highlight lsl"><table><tr><td class="code"><pre><code class="hljs lsl">删除文件的第<span class="hljs-number">2</span>行到末尾所有行：<br><br>sed '<span class="hljs-number">2</span>,$d’ file<br></code></pre></td></tr></table></figure>

<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">删除文件最后一行：<br><br>sed '<span class="hljs-variable">$d</span>’ <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">删除文件中所有开头是<span class="hljs-built_in">test</span>的行：<br><br>sed <span class="hljs-string">'/^test/'</span>dfile<br></code></pre></td></tr></table></figure>

<figure class="highlight taggerscript"><table><tr><td class="code"><pre><code class="hljs taggerscript">love被标记为1，所有loveable会被替换成lovers，并打印出来：<br><br>sed -n 's/<span class="hljs-symbol">\(</span>love<span class="hljs-symbol">\)</span>able/<span class="hljs-symbol">\1</span>rs/p’ file<br></code></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><code class="hljs cmake">打印从第<span class="hljs-number">5</span>行开始到第一个包含以<span class="hljs-keyword">test</span>开始的行之间的所有行：<br><br>sed -n '<span class="hljs-number">5</span>,/^<span class="hljs-keyword">test</span>/p’ <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">将 this is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">line</span> 追加到 以<span class="hljs-keyword">test</span> 开头的行后面：<br><br>sed '/^<span class="hljs-keyword">test</span>/a\this is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">line</span>’ <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">将 this is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">line</span> 追加到以<span class="hljs-keyword">test</span>开头的行前面：<br><br>sed '/^<span class="hljs-keyword">test</span>/i\this is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">line</span>’ <span class="hljs-keyword">file</span><br></code></pre></td></tr></table></figure>

<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata">在 <span class="hljs-keyword">test</span>.<span class="hljs-keyword">conf</span> 文件第2行之后插入 this is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">line</span>：<br><br>sed -i '2a\this is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">line</span>’ <span class="hljs-keyword">test</span>.<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">互换模式空间和保持缓冲区的内容。也就是把包含test与<span class="hljs-keyword">check</span>的行互换：<br><br>sed -e <span class="hljs-string">'/test/h'</span> -e <span class="hljs-string">'/check/x’ file</span><br><span class="hljs-string"></span><br><span class="hljs-string">-e选项允许在同一行里执行多条命令：</span><br><span class="hljs-string"></span><br><span class="hljs-string">sed-e'</span><span class="hljs-number">1</span>,<span class="hljs-number">5</span>d<span class="hljs-string">'-e'</span>s/<span class="hljs-keyword">test</span>/<span class="hljs-keyword">check</span>/‘ <span class="hljs-keyword">file</span><br><br>上面sed表达式的第一条命令删除<span class="hljs-number">1</span>至<span class="hljs-number">5</span>行，第二条命令用<span class="hljs-keyword">check</span>替换<span class="hljs-keyword">test</span>。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>harbor调研</title>
    <url>/2020/03/02/63_harbor1/</url>
    <content><![CDATA[<p>前提： 因为公司想要将线上服务统一使用K8s进行部署，那之前的tar安装包就成了images，因此要考虑新的存储方案。结合github信息和网友的使用经验，整理出了以下harbor信息。</p>
<p>开源镜像存储仓库<br>私有化的镜像部署<br>官方的说法是：Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器。通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。</p>
<p>harbor存在的原因：</p>
<ol>
<li>提供分层传输机制，优化网络传输<br>Docker镜像是是分层的，如果每次传输都使用全量文件显然不经济，所以用FTP的方式并不适合。必须提供识别分层传输的机制，以层的UUID为标识，确定传输的对象。</li>
<li>提供WEB界面，优化用户体验<br>只用镜像的名字来进行上传下载显然很不方便，需要有一个用户界面可以支持登陆、搜索功能，包括区分公有、私有镜像。</li>
<li>支持水平扩展集群<br>当有用户对镜像的上传下载操作集中在某服务器，需要对相应的访问压力作分解。上面这些就是Docker Registry所完成的主要工作，而Habor在此之上，又提供了用户、同步等诸多特性。<br>Harbor两个容易误解的点：</li>
<li>harbor功能<br>镜像的存储harbor使用的是官方的docker registry服务去完成，至于registry是用本地存储或者s3都是可以的，harbor的功能是在此之上提供用户权限管理、镜像复制等功能，提高使用的registry的效率。</li>
<li>镜像复制<br>通过docker registry 的API去拷贝，这种做法屏蔽了繁琐的底层文件操作、不仅可以利用现有docker registry功能不必重复造轮子，而且可以解决冲突和一致性的问题。<br>harbor的组件及功能：</li>
</ol>
<p>组件<br>功能<br>proxy<br>nginx前端代理，主要分发前端页面ui访问、镜像上传下载流量<br>ui<br>提供了一个web管理页面，包括前端页面和后端API，底层使用mysql数据库<br>registry<br>镜像仓库，负责存储镜像文件，当镜像上传完毕后通过hook通知ui创建repository， registry的token认证通过ui组件完成<br>adminserver<br>系统的配置管理中心附带检查存储用量，ui和jobserver启动时候需要加载adminserver的配置<br>jobserver<br>负责镜像复制工作，和registry通信，从一个registry pull镜像push到另一个registry，并记录job log<br>log<br>日志汇总组件，通过docker的log-driver把日志汇总到一起</p>
<p>功能优点：<br>用户管理三种角色：在最高管理员权限系统管理员admin外还有，项目管理员 MDRWS 、开发人员 RWS 、访客 RS 、<br>项目管理：项目是一组镜像仓库的逻辑集合，是权限管理和资源管理的单元划分。一个项目下面有多个镜像仓库，并且关联多个不同角色的成员，镜像复制也是基于项目的，通过添加复制规则，可以将项目下面的镜像从一个harbor迁移到另一个harbor，通过日志可查看复制过程，并有retry机制。<br>配置管理、日志查询：配置管理主要是配置harbor的认证模式，企业内部使用，通常都是对接到公司LDAP上面，harbor也支持数据库认证，可以设置token的有效时间。用户对镜像的pull和push操作都可以被harbor记录下来。<br>优点：<br>        本身自带 docker 私有仓库<br>        支持基于角色的权限管理<br>        支持 LDAP<br>安装环境：<br>        支持k8s的helm安装和本地安装<br>        需要安装docker并运行<br>        docker-compose<br>        docker engine<br>        Harbor offline installer<br>        redis<br>        mysql<br>        Openssl<br>要求：<br>        最低配置要求2核4G40G<br>        需要开放443 4443 80端口 https http<br>        生产环境中建议使用https</p>
<hr>
<p>应用：<br>        我们在当前的企业应用中，Docker的镜像仓库配置成harbor，在容器启动是会拉取harbor中的镜像。在实际使用过程中，一个镜像库可能是不够用的，下例情况下我们可能会需要部署多个镜像仓库：<br>        1. 国外的公有镜像下载过慢，需要一个中转仓库进行加速<br>        2. 容器规模较大，一个镜像仓库不堪重负<br>        3. 对系统稳定性要求高，需要多个仓库保证高可用性<br>        4. 镜像仓库有多级规划，下级仓库依赖上级仓库<br>集群考虑：<br>        一致性<br>        实时性<br>        可用性<br>应用场景的考虑：<br>        1. 国内地区和海外地区的harbor统一还是分开、如果统一，优点、难点，如果分开，优点、难点<br>        2. 国内业务和海外业务是否有关联性会互相影响<br>        3.海外是否会受网络影响速度<br>海内外统一harbor：<br>        优点：统一镜像管理、统一权限管理、节省服务器成本<br>        难点：选择节点、节点之间通信、网络速度、项目管理<br>海内外harbor分开：<br>        优点：集群架构简单、集群节点通信无阻碍、没有网络延迟问题<br>        难点：集群分开管理<br>目标：容灾备份<br>目前有两种主流的方案解决这个问题：<br>双主复制<br>多harbor实例共享后端存储<br>双主复制：双主复制其实就是复用主从同步，实现两个harbor节点之间的双向同步，来保证数据的一致性，然后在两台harbor前端顶一个负载均衡器，将进来的请求分流到不同的实例中去，只要有一个实例中有了新的镜像，就自动的同步复制到另外的的实例中去，这样实现了负载均衡，也避免了单点故障，在一定程度上实现了Harbor的高可用性。<br>问题：可能会存在数据不一致问题，需要手动重启复制策略才能再次进行同步。<br>多harbor实例共享后端存储：共享后端存储算就是多个Harbor实例共享同一个后端存储，任何一个实例持久化到存储的镜像，都可被其他实例中读取。通过前置LB进来的请求，可以分流到不同的实例中去处理，这样就实现了负载均衡，也避免了单点故障。</p>
<p>在实际生产环境中部署需要考虑三个问题：</p>
<ol>
<li>选取共享存储，Harbor的后端存储目前支持AWS S3、OSS 、Openstack Swift, Ceph等。</li>
<li>Session在不同的实例上共享，在最新的harbor中，默认session会存放在redis中，我们只需要将redis独立出来即可。可以通过redis sentinel或者redis cluster等方式来保证redis的可用性。</li>
<li>Harbor多实例数据库问题，将harbor中的数据库拆出来独立部署即可。让多实例共用一个外部数据库，数据库的高可用也可以通过数据库的高可用方案保证。<br>harbor高可用部署：<pre><code>通过三个harbor完成高可用部署，通过负载均衡器对外提供服务，共享数据库与缓存。</code></pre><a href="https://postimg.cc/G9RR7wKB" target="_blank" rel="noopener"><img src="https://i.postimg.cc/2jb55CBx/harbor.png" alt="harbor.png"></a></li>
</ol>
<p>github：<a href="https://github.com/goharbor/harbor/blob/v1.10.0/README.md" target="_blank" rel="noopener">https://github.com/goharbor/harbor/blob/v1.10.0/README.md</a><br><a href="https://github.com/goharbor/harbor/blob/v1.10.0/docs/installation_guide.md" target="_blank" rel="noopener">https://github.com/goharbor/harbor/blob/v1.10.0/docs/installation_guide.md</a><br><a href="https://github.com/goharbor/harbor/tree/master/docs/1.10" target="_blank" rel="noopener">https://github.com/goharbor/harbor/tree/master/docs/1.10</a><br>demo： <a href="https://demo.goharbor.io/harbor/projects" target="_blank" rel="noopener">https://demo.goharbor.io/harbor/projects</a><br>参考文档：<a href="https://www.kubernetes.org.cn/1738.html" target="_blank" rel="noopener">https://www.kubernetes.org.cn/1738.html</a><br><a href="https://tonybai.com/2017/06/09/setup-a-high-availability-private-registry-based-on-harbor-and-cephfs/" target="_blank" rel="noopener">https://tonybai.com/2017/06/09/setup-a-high-availability-private-registry-based-on-harbor-and-cephfs/</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>python3 自动生成配置</title>
    <url>/2020/03/20/66_python3%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90/</url>
    <content><![CDATA[<p>因为平时线上发版要提前整理一个操作时的文档出来，之前都是手动整理，手动做过3次就再也不想弄了，所以写这个脚本来代替之前手动的工作。。。。<br>男朋友半小时写完的脚本，我写了2天还被吐槽代码不够优雅，我好南(ಥ﹏ಥ)<br>又学到了一个新的用法，游标!</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment">#coding=utf-8</span><br><span class="hljs-comment">#by Dawn on 20200318</span><br><span class="hljs-string">'''</span><br><span class="hljs-string">此脚本的作用是读取server下各个模块信息，将要发版的模块生成如下配置，代替手动粘贴的过程</span><br><span class="hljs-string">sh remote_restart.sh 10.101.178.13 oauth2</span><br><span class="hljs-string">curl 10.101.178.13:8004/check.do</span><br><span class="hljs-string">'''</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> toml<br><span class="hljs-keyword">import</span> time<br><br>now = time.strftime(<span class="hljs-string">"%Y%m%d%H%M"</span>, time.localtime())<br>allpath=[]<br>allfile=[]<br>fileByModule=&#123;&#125;<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getallfileByModule</span><span class="hljs-params">(path)</span>:</span><br>    allfilelist=os.listdir(path)<br>    <span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> allfilelist:<br>        filepath=os.path.join(path,file)<br>        <span class="hljs-keyword">if</span> os.path.isdir(filepath):<br>            getallfileByModule(filepath)<br>        <span class="hljs-keyword">elif</span> os.path.isfile(filepath):<br>            module=filepath.split(<span class="hljs-string">"/"</span>)[<span class="hljs-number">-2</span>]<br>            <span class="hljs-keyword">if</span> module <span class="hljs-keyword">in</span> fileByModule:<br>                fileByModule[module].append(filepath)<br>            <span class="hljs-keyword">else</span>:<br>                fileByModule[module]=[filepath]<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">readallfile</span><span class="hljs-params">(file)</span>:</span><br>    serverinfo=toml.load(file)<br>    modulename=(serverinfo[<span class="hljs-string">'server'</span>])<br>    moduleip = (serverinfo[<span class="hljs-string">'addr'</span>])<br>    moduleport = (serverinfo[<span class="hljs-string">'port'</span>])<br>    <span class="hljs-keyword">return</span> modulename,moduleip,moduleport<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writeallfile</span><span class="hljs-params">(server,addr,port)</span>:</span><br>    opremote=open(remotepath,<span class="hljs-string">"a+"</span>)<br>    operatingfile=opremote.write(<span class="hljs-string">"sh remote_restart.sh &#123;&#125; &#123;&#125;\n"</span>.format(addr,server) )<br>    opremote.close()<br>    opcurl=open(curlpath,<span class="hljs-string">"a+"</span>)<br>    checkfile=opcurl.write(<span class="hljs-string">"curl &#123;&#125;:&#123;&#125;/check.do\n"</span>.format(addr,port))<br>    opcurl.close()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    local=<span class="hljs-string">'kr'</span><span class="hljs-comment">#生成配置的地区#</span><br>    dir_path = <span class="hljs-string">'/Users/zhaodan/Downloads/LumiWorking/AIOT/online-operating/servers/&#123;&#125;/'</span>.format(local)<span class="hljs-comment"># 模块配置路径#</span><br>    modulefile = <span class="hljs-string">'./OpModules'</span><span class="hljs-comment"># 发版模块文件#</span><br>    remotepath = <span class="hljs-string">'./&#123;&#125;_remotefile_&#123;&#125;'</span>.format(local,now)<span class="hljs-comment"># 生成remote文件#</span><br>    curlpath = <span class="hljs-string">'./&#123;&#125;_checkfile_&#123;&#125;'</span>.format(local,now)<span class="hljs-comment"># 生成check文件#</span><br>    moduleSet=set()<br>    <span class="hljs-keyword">with</span> open(modulefile) <span class="hljs-keyword">as</span> file:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> file:<br>            moduleSet.add(line.strip(<span class="hljs-string">'\n'</span>))<br>    getallfileByModule(dir_path)<br>    t=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> t!=<span class="hljs-number">-1</span>:<br>        flag=<span class="hljs-literal">False</span><br>        <span class="hljs-keyword">for</span> module,pathList <span class="hljs-keyword">in</span> fileByModule.items():<br>            <span class="hljs-keyword">if</span> len(pathList)&gt;t:<br>                modulename, moduleip, moduleport=readallfile(pathList[t])<br>                <span class="hljs-keyword">if</span> modulename <span class="hljs-keyword">in</span> moduleSet:<br>                    writeallfile(modulename, moduleip, moduleport)<br>                flag=<span class="hljs-literal">True</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> flag:<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            t+=<span class="hljs-number">1</span><br>            RemoteWrap=open(remotepath,<span class="hljs-string">"a+"</span>)<br>            wrap1=RemoteWrap.write(<span class="hljs-string">"\n"</span>)<br>            RemoteWrap.close()<br>            CheckWrap=open(curlpath,<span class="hljs-string">"a+"</span>)<br>            wrap2=CheckWrap.write(<span class="hljs-string">"\n"</span>)<br>            CheckWrap.close()<br></code></pre></td></tr></table></figure>
<p>图为目录结构，脚本读取目录下的模块信息，生成指定格式的配置文件<br><a href="https://postimg.cc/v4w5sSVy" target="_blank" rel="noopener"><img src="https://i.postimg.cc/7Zf9SFP5/python3.png" alt="python3.png"></a></p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>jumpserver管理用户和系统用户的解释</title>
    <url>/2020/04/01/67_jumpserver_user/</url>
    <content><![CDATA[<p>jumpserver之前搭建过好几遍了，每次创建用户时被同事一问总是感觉解释不清楚，明明上手一干就能做出来，就是说不清楚，我认为还是因为自己没有把概念记到脑子里，但上手能做出来估计是惯性。。。。毕竟好记性都不如实践出真知</p>
<p>管理用户——&gt;创建时需填写登录服务器的用户密码——&gt;添加资产时要选择管理用户，和资产绑定<br>系统用户——&gt;自行随意起名——&gt;会推送到服务器创建该用户——&gt;创建资产授权时要选择系统用户，和资产授权绑定</p>
<p>官方文档解释如下：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><code class="hljs less">管理用户是资产上的<span class="hljs-selector-tag">root</span>，或拥有 <span class="hljs-selector-tag">NOPASSWD</span>: <span class="hljs-keyword">ALL</span> <span class="hljs-selector-tag">sudo</span>权限的用户， <span class="hljs-selector-tag">JumpServer</span>使用该用户来推送系统用户、获取资产硬件信息 等。<span class="hljs-selector-tag">Windows</span> 请填写 <span class="hljs-selector-tag">administrators</span> 组里面的用户<br>系统用户是 <span class="hljs-selector-tag">JumpServer</span>跳转登录资产时使用的用户，可以理解为登录资产用户，如 <span class="hljs-selector-tag">web</span>, <span class="hljs-selector-tag">sa</span>, <span class="hljs-selector-tag">dba</span>(ssh web<span class="hljs-variable">@some-host</span>), 而不是使用某个用户的用户名跳转登录服务器(ssh xiaoming<span class="hljs-variable">@some-host</span>); 简单来说是 用户使用自己的用户名登录<span class="hljs-selector-tag">JumpServer</span>, <span class="hljs-selector-tag">JumpServer</span>使用系统用户登录资产。 系统用户创建时，如果选择了自动推送 <span class="hljs-selector-tag">JumpServer</span> 会使用 <span class="hljs-selector-tag">ansible</span> 自动推送系统用户到资产中，如果资产不支持<span class="hljs-selector-tag">ansible</span>, 请手动填写账号密码（域用户格式: <span class="hljs-selector-tag">user</span>@<span class="hljs-selector-tag">domain</span><span class="hljs-selector-class">.com</span>）。<br></code></pre></td></tr></table></figure>
<p>(看了官方解释其实已经明白意思了，总结下作用~)</p>
<p>个人总结：</p>
<ol>
<li>管理用户要具有超级权限</li>
<li>管理用户要进行推送创建系统用户、获取硬件信息</li>
<li>系统用户是登录服务器的用户，用户能通过该系统用户使用所选节点下的资产</li>
<li>节点, 用户组, 系统用户是一对一的关系</li>
<li>资产授权指定系统用户</li>
<li>通过设置系统用户的权限进行限制用户使用的权限，当Sudo设置为ALL时代表可切换root，默认设置为/bin/whoami 不能自由进行切换</li>
<li>关于普通系统用户的权限限制还可以通过命令过滤器进行限制可以使用的命令和禁用的命令</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
        <tag>JumpServer</tag>
      </tags>
  </entry>
  <entry>
    <title>基于docker搭建个人博客jpress</title>
    <url>/2018/06/25/20_jpress/</url>
    <content><![CDATA[<p>####准备docker环境</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# yum install -y docker<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# docker version<br>Client:<br> Version:         <span class="hljs-number">1.13</span><span class="hljs-number">.1</span><br> API version:     <span class="hljs-number">1.26</span><br> Package version:<br>Cannot connect to the Docker daemon at unix:<span class="hljs-comment">///var/run/docker.sock. Is the docker daemon running?</span><br><br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# service docker start<br>Redirecting to /bin/systemctl start  docker.service<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# docker version<br>Client:<br> Version:         <span class="hljs-number">1.13</span><span class="hljs-number">.1</span><br> API version:     <span class="hljs-number">1.26</span><br> Package version: docker<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-63.</span>git94f4240.el7.centos.x86_64<br> Go version:      go1<span class="hljs-number">.9</span><span class="hljs-number">.4</span><br> Git commit:      <span class="hljs-number">94f</span>4240/<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><br> Built:           Fri May <span class="hljs-number">18</span> <span class="hljs-number">15</span>:<span class="hljs-number">44</span>:<span class="hljs-number">33</span> <span class="hljs-number">2018</span><br> OS/Arch:         linux/amd64<br><br>Server:<br> Version:         <span class="hljs-number">1.13</span><span class="hljs-number">.1</span><br> API version:     <span class="hljs-number">1.26</span> (minimum version <span class="hljs-number">1.12</span>)<br> Package version: docker<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-63.</span>git94f4240.el7.centos.x86_64<br> Go version:      go1<span class="hljs-number">.9</span><span class="hljs-number">.4</span><br> Git commit:      <span class="hljs-number">94f</span>4240/<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><br> Built:           Fri May <span class="hljs-number">18</span> <span class="hljs-number">15</span>:<span class="hljs-number">44</span>:<span class="hljs-number">33</span> <span class="hljs-number">2018</span><br> OS/Arch:         linux/amd64<br> Experimental:    <span class="hljs-literal">false</span><br>可以看到docker的客户端和服务端都启动了<br><br>---------------------------------------<br>下载所需要的镜像  需要使用mysql和tomcat<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# docker pull hub.c<span class="hljs-number">.163</span>.com/library/mysql:latest<br>Trying to pull repository hub.c<span class="hljs-number">.163</span>.com/library/mysql ...<br>latest: Pulling <span class="hljs-keyword">from</span> hub.c<span class="hljs-number">.163</span>.com/library/mysql<br><span class="hljs-number">42</span>cb69312da9: Pull complete<br>e2cf5467c4b5: Pull complete<br><span class="hljs-number">871</span>ec0232f66: Pull complete<br><span class="hljs-number">3</span>c0ae7ec690d: Pull complete<br>d39b43089b70: Pull complete<br>aa0e7cb4b67c: Pull complete<br><span class="hljs-number">738</span>db9902d06: Pull complete<br>ae333863ac05: Pull complete<br><span class="hljs-number">6</span>d014992204a: Pull complete<br><span class="hljs-number">09</span>aeca0c9a82: Pull complete<br><span class="hljs-number">0162083</span>b2de0: Pull complete<br>Digest: sha256:b2bce1a792237ac5df78877d583f34b09ab023a77130921a6bcce67ce2d24ff0<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hub.c<span class="hljs-number">.163</span>.com/library/mysql:latest<br><br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# docker pull hub.c<span class="hljs-number">.163</span>.com/library/tomcat:latest<br>Trying to pull repository hub.c<span class="hljs-number">.163</span>.com/library/tomcat ...<br>latest: Pulling <span class="hljs-keyword">from</span> hub.c<span class="hljs-number">.163</span>.com/library/tomcat<br><span class="hljs-number">9</span>af7279b9dbd: Pull complete<br><span class="hljs-number">31816</span>c948f2f: Pull complete<br>c59a1cdf83d3: Pull complete<br><span class="hljs-number">232</span>c7a75d568: Pull complete<br>de412d312979: Pull complete<br><span class="hljs-number">80315</span>ba34693: Pull complete<br><span class="hljs-number">5</span>d3f97bd90e8: Pull complete<br>dc8dc63f6baa: Pull complete<br>f6c6e2d67f03: Pull complete<br><span class="hljs-number">9123</span>b340aa92: Pull complete<br><span class="hljs-number">76</span>abaea2279d: Pull complete<br><span class="hljs-number">4476602e3346</span>: Pull complete<br><span class="hljs-number">12e1f</span>da011bd: Pull complete<br>Digest: sha256:db1a8ca2fe44449d265e5505f300be6f34fc63211a5506400a0a8c24653af91f<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hub.c<span class="hljs-number">.163</span>.com/library/tomcat:latest<br><br>查看已下载的镜像<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# docker images<br>REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE<br>hub.c<span class="hljs-number">.163</span>.com/library/tomcat   latest              <span class="hljs-number">72</span>d2be374029        <span class="hljs-number">10</span> months ago       <span class="hljs-number">292</span> MB<br>hub.c<span class="hljs-number">.163</span>.com/library/mysql    latest              <span class="hljs-number">9e64176</span>cd8a2        <span class="hljs-number">14</span> months ago       <span class="hljs-number">407</span> MB<br><br>jpress是一个开源项目 下载jpress war包<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# wget https:<span class="hljs-comment">//gitee.com/fuhai/jpress/raw/alpha/wars/jpress-web-newest.war</span><br>-<span class="hljs-number">-2018</span><span class="hljs-number">-06</span><span class="hljs-number">-30</span> <span class="hljs-number">08</span>:<span class="hljs-number">42</span>:<span class="hljs-number">00</span>--  https:<span class="hljs-comment">//gitee.com/fuhai/jpress/raw/alpha/wars/jpress-web-newest.war</span><br>Resolving gitee.com (gitee.com)... <span class="hljs-number">116.211</span><span class="hljs-number">.167</span><span class="hljs-number">.14</span><br>Connecting to gitee.com (gitee.com)|<span class="hljs-number">116.211</span><span class="hljs-number">.167</span><span class="hljs-number">.14</span>|:<span class="hljs-number">443.</span>.. connected.<br>HTTP request sent, awaiting response... <span class="hljs-number">200</span> OK<br>Length: unspecified [text/plain]<br>Saving to: ‘jpress-web-newest.war’<br><br>    [                                        &lt;=&gt;      ] <span class="hljs-number">20</span>,<span class="hljs-number">797</span>,<span class="hljs-number">013</span>  <span class="hljs-number">2.57</span>MB/s   <span class="hljs-keyword">in</span> <span class="hljs-number">8.2</span>s<br><br><span class="hljs-number">2018</span><span class="hljs-number">-06</span><span class="hljs-number">-30</span> <span class="hljs-number">08</span>:<span class="hljs-number">42</span>:<span class="hljs-number">09</span> (<span class="hljs-number">2.41</span> MB/s) - ‘jpress-web-newest.war’ saved [<span class="hljs-number">20797013</span>]<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# ls<br>jpress-web-newest.war<br><br>----------------------------------------<br>制作docker镜像<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# mkdir jpress<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos ~]# cd jpress/<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# cp ../jpress-web-newest.war ./jpress.war<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# vim Dockerfile<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# cat Dockerfile<br>FROM hub.c<span class="hljs-number">.163</span>.com/library/tomcat<br><br>MAINTAINER zhaodan<br><br>COPY jpress.war /usr/local/tomcat/webapps/jpress.war<br>##########<br>FROM 表示：当前镜像依赖于tomcat镜像<br><br>MAINTAINER 表示：镜像创建者<br><br>COPY 表示：将jpress的war包复制到tomcat的webapps目录下<br><br>[<span class="hljs-symbol">root@</span>VM_0_37_centos study]# docker images<br><br>REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE<br><br>[hub.c<span class="hljs-number">.163</span>.com/library/tomcat](http:<span class="hljs-comment">//hub.c.163.com/library/tomcat)   latest              72d2be374029        10 months ago       292 MB</span><br><br>[hub.c<span class="hljs-number">.163</span>.com/library/mysql](http:<span class="hljs-comment">//hub.c.163.com/library/mysql)    latest              9e64176cd8a2        13 months ago       407 MB</span><br><br>构建jpress镜像 使用-t参数指定镜像名为my/jpress tag为latest<br><br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# docker build -t my/jpress:latest .<br>Sending build context to Docker daemon  <span class="hljs-number">41.6</span> MB<br>Step <span class="hljs-number">1</span>/<span class="hljs-number">3</span> : FROM hub.c<span class="hljs-number">.163</span>.com/library/tomcat<br> ---&gt; <span class="hljs-number">72</span>d2be374029<br>Step <span class="hljs-number">2</span>/<span class="hljs-number">3</span> : MAINTAINER zhaodan<br> ---&gt; Running <span class="hljs-keyword">in</span> d21d9ca26eac<br> ---&gt; f3143419a182<br>Removing <span class="hljs-built_in">int</span>ermediate container d21d9ca26eac<br>Step <span class="hljs-number">3</span>/<span class="hljs-number">3</span> : COPY jpress.war /usr/local/tomcat/webapps/jpress.war<br> ---&gt; <span class="hljs-number">01</span>a57cf0c2e1<br>Removing <span class="hljs-built_in">int</span>ermediate container <span class="hljs-number">5</span>ed20c9d84e4<br>Successfully built <span class="hljs-number">01</span>a57cf0c2e1<br><br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# docker images<br>REPOSITORY                     TAG                 IMAGE ID            CREATED              SIZE<br>my/jpress                      latest              <span class="hljs-number">01</span>a57cf0c2e1        About a minute ago   <span class="hljs-number">313</span> MB<br>hub.c<span class="hljs-number">.163</span>.com/library/tomcat   latest              <span class="hljs-number">72</span>d2be374029        <span class="hljs-number">10</span> months ago        <span class="hljs-number">292</span> MB<br>hub.c<span class="hljs-number">.163</span>.com/library/mysql    latest              <span class="hljs-number">9e64176</span>cd8a2        <span class="hljs-number">14</span> months ago        <span class="hljs-number">407</span> MB<br><br>启动docker镜像，先启动MySQL镜像，创建一个名为bolgdb的数据库，指定数据库用户以及登录密码，进行端口映射，启动数据库<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# docker run --name bolgmysql -d -p <span class="hljs-number">3306</span>:<span class="hljs-number">3306</span> -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> -e MYSQL_DATABASE=bolgdb hub.c<span class="hljs-number">.163</span>.com/library/mysql<br><span class="hljs-number">901</span>aa0b984ca137d04d5a90a9d08b133b38b4dd709e5dc08928b002222137b3f<br><br>查看正在运行的容器<br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# docker ps<br>CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                    NAMES<br><span class="hljs-number">901</span>aa0b984ca        hub.c<span class="hljs-number">.163</span>.com/library/mysql   <span class="hljs-string">"docker-entrypoint..."</span>   <span class="hljs-number">44</span> seconds ago      Up <span class="hljs-number">44</span> seconds       <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">3306</span>-&gt;<span class="hljs-number">3306</span>/tcp   bolgmysql<br><br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# docker run --name bolgjpress -d -p <span class="hljs-number">8888</span>:<span class="hljs-number">8080</span> my/jpress<br>e8acfe19e3438f6a0b15ee25570c597cd901820ee916cb4310caa00b50bb1157<br><br>[<span class="hljs-symbol">root@</span>VM_0_45_centos jpress]# docker ps<br>CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                    NAMES<br>e8acfe19e343        my/jpress                     <span class="hljs-string">"catalina.sh run"</span>        <span class="hljs-number">32</span> seconds ago      Up <span class="hljs-number">31</span> seconds       <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">8888</span>-&gt;<span class="hljs-number">8080</span>/tcp   bolgjpress<br><span class="hljs-number">901</span>aa0b984ca        hub.c<span class="hljs-number">.163</span>.com/library/mysql   <span class="hljs-string">"docker-entrypoint..."</span>   <span class="hljs-number">4</span> minutes ago       Up <span class="hljs-number">4</span> minutes        <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">3306</span>-&gt;<span class="hljs-number">3306</span>/tcp   bolgmysql<br></code></pre></td></tr></table></figure>

<p>访问<br>ip + port   tomcat</p>
<p><a href="https://postimg.cc/tYdv1QgL" target="_blank" rel="noopener"><img src="https://i.postimg.cc/TYFz4TvY/jpress1.png" alt="jpress1.png"></a></p>
<p>ip + port/jpress</p>
<p><a href="https://postimg.cc/0b1H229Y" target="_blank" rel="noopener"><img src="https://i.postimg.cc/rFD6jKbP/jpress2.png" alt="jpress2.png"></a></p>
<p>第一次访问需要进行安装点，击下一步进行数据库配置，将启动mysql镜像时配置的数据库名称、端口、用户名和密码对应填写</p>
<p><a href="https://postimg.cc/hhd5B7R4" target="_blank" rel="noopener"><img src="https://i.postimg.cc/2jcRn4HW/jpress3.png" alt="jpress3.png"></a></p>
<p><a href="https://postimg.cc/V0nGB2W0" target="_blank" rel="noopener"><img src="https://i.postimg.cc/GtSWrCBK/jpress4.png" alt="jpress4.png"></a><br><a href="https://postimg.cc/yk0tF3Lp" target="_blank" rel="noopener"><img src="https://i.postimg.cc/024v1pDv/jpress5.png" alt="jpress5.png"></a></p>
<figure class="highlight clean"><table><tr><td class="code"><pre><code class="hljs clean">重启jpress容器，使用命令docker ps查看正在运行的容器<br>[root@VM_0_45_centos jpress]# docker ps<br>CONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                    NAMES<br>e8acfe19e343        my/jpress                     <span class="hljs-string">"catalina.sh run"</span>        <span class="hljs-number">13</span> minutes ago      Up <span class="hljs-number">13</span> minutes       <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">8888</span>-&gt;<span class="hljs-number">8080</span>/tcp   bolgjpress<br><span class="hljs-number">901</span>aa0b984ca        hub.c<span class="hljs-number">.163</span>.com/library/mysql   <span class="hljs-string">"docker-entrypoint..."</span>   <span class="hljs-number">17</span> minutes ago      Up <span class="hljs-number">17</span> minutes       <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">3306</span>-&gt;<span class="hljs-number">3306</span>/tcp   bolgmysql<br>[root@VM_0_45_centos jpress]# docker restart e8acfe19e343<br>e8acfe19e343<br><br>##########################<br>docker常用命令<br><br>docker stop 容器ID，停止容器<br><br>docker restart 容器ID，重启容器<br><br>docker start 容器ID，启动容器<br><br>docker rm  容器ID，删除容器<br>#########################<br></code></pre></td></tr></table></figure>
<p>刷新网页</p>
<p><a href="https://postimg.cc/vgp2nGfd" target="_blank" rel="noopener"><img src="https://i.postimg.cc/C5K3W1Kd/jpress6.png" alt="jpress6.png"></a><br> 登录后台</p>
<p><a href="https://postimg.cc/5X3rrddw" target="_blank" rel="noopener"><img src="https://i.postimg.cc/Gpw1HdXS/jpress7.png" alt="jpress7.png"></a><br><a href="https://postimg.cc/YvkV82Vr" target="_blank" rel="noopener"><img src="https://i.postimg.cc/cL8SxrBn/jpress8.png" alt="jpress8.png"></a></p>
]]></content>
  </entry>
  <entry>
    <title>ardb</title>
    <url>/2017/12/01/4_Ardb%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>##关于ardb使用中的一些参考说明</p>
<p>#####ardb 近期大规模使用之后，发现一些比较尴尬的问题</p>
<p>ardb 底层使用的是rocksdb， 每次写操作，都会先写入<em>rocksdb</em>的<em>write ahead log</em>（WAL默认情况下<em>rocksdb</em>的WAL文件大小为   </p>
<p>write_buffer_size = 4MB , max_write_buffer_number = 2 , max_total_wal_size = 0 , #of column families = 1500</p>
<p>write_buffer_size* max_write_buffer_number * of column families   </p>
<p>在线上使用的时候，发现实际数据50-70G，在<em>ardb</em>中会产生大概200G的<em>wal</em>文件，如果此时<em>ardb</em>数据库挂掉，会产生一个非常严重的问题，就是启动的时候，需要加载<em>wal</em>文件，加载200G的<em>wal</em>文件，你猜猜时间需要多久？我很傻比的在线上出现过这样的问题，因为启动加载需要大量读取<em>wal文件</em>，此时对于磁盘压力很大，我使用的机器是 <em>aws m4.4xlarge</em>，1.5Tssd , iops  4500 , 此时加载的速度为 163M/s  , 加载完这些数据 需要大概2-3个小时，这个时间段内数据库无法访问，程序无法运行，很尴尬啊    </p>
<p>后续一直在想办法优化这个问题，也提问过ardb作者 <em><a href="https://github.com/yinqiwen/ardb/issues/385" target="_blank" rel="noopener">https://github.com/yinqiwen/ardb/issues/385</a></em>，给了一些解决思路，仅供参考，其中发现几个比较有用的设置或者是概念吧</p>
<p><em>compactall</em> 我实际使用中的理解为，加载一遍<em>wal<em>文件，此时</em>wal<em>文件都会变成</em>sst<em>文件，为</em>ardb<em>可读取的，耗时特别长，实际使用中出现过1-2小时，不太可取，因为</em>compact*的时候需要将数据读取出来再重新写入到磁盘<br>*bgsave</em> 实际使用中数据库崩溃，不敢使用了，说实话这个崩溃到现在也没有找到问题，系统log，ardb log 都没有找到  </p>
<p><em>rocksdb.compaction to OptimizeUniversalStyleCompaction  rocksdb<em>的一种</em>compact*的设置，但是实际测试中没有多大效果<br>*Column-Families#implementation   max_manifest_file_size=2G <a href="http://udn.yyuap.com/forum.php?mod=viewthread&amp;tid=39837" target="_blank" rel="noopener">http://udn.yyuap.com/forum.php?mod=viewthread&amp;tid=39837</a></em>  设置后，没有效果<br><em>max_total_wal_size</em>最大的<em>wal</em>文件大小，我们线上数据库不设置的话大概是200G的wal文件，我首先设置为100G，实际中<em>wal</em>文件会在大量写入的时候，超过几个g之后然后变小，这个过程中数据库后台有数据文件<em>level</em>的改变，关于<em>level</em>请查看<em>rocksdb</em>原理，会逐渐减小到100G以下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ardb设置为  <br><br><span class="hljs-comment">#max_total_wal_size</span><br>rocksdb.compaction           OptimizeLevelStyleCompaction<br><br><span class="hljs-comment"># Enable this to indicate that hsca/sscan/zscan command use total order mode for rocksdb engine</span><br><span class="hljs-comment"># Disable RocksDB WAL may improve the write performance but</span><br><span class="hljs-comment"># data in the un-flushed memtables might be lost in case of a RocksDB shutdown.</span><br><span class="hljs-comment"># Disabling WAL provides similar guarantees as Redis.</span><br>rocksdb.disableWAL            <span class="hljs-literal">true</span><br><br><span class="hljs-comment">#rocksdb's options</span><br>rocksdb.options              write_buffer_size=2048M;max_write_buffer_number=5;min_write_buffer_number_to_merge=2;compression=kSnappyCompression;\<br>                              bloom_locality=1;memtable_prefix_bloom_size_ratio=0.1;\<br>                              block_based_table_factory=&#123;block_cache=512M;filter_policy=bloomfilter:10:<span class="hljs-literal">true</span>&#125;;\<br>                              create_if_missing=<span class="hljs-literal">true</span>;max_open_files=60000;rate_limiter_bytes_per_sec=200M;max_total_wal_size=51200M<br></code></pre></td></tr></table></figure>
<p><strong>如图所示：</strong><br><img src="./941E7F2C2DEE6B876E48FC9508042E37.jpg" alt="941E7F2C2DEE6B876E48FC9508042E37.jpg"><br><strong>图中标注的红色方框的位置为<em>ardb WAL*文件超过设置的100G之后，触发的 *auto compact</em></strong></p>
<p>每次写操作<em>rocksdb<em>会先写</em>write ahead log<em>然后才会写</em>db</em></p>
<p><em><a href="https://github.com/facebook/rocksdb/issues/662" target="_blank" rel="noopener">https://github.com/facebook/rocksdb/issues/662</a><br><a href="https://github.com/facebook/rocksdb/wiki/Column-Families" target="_blank" rel="noopener">https://github.com/facebook/rocksdb/wiki/Column-Families</a></em></p>
<hr>
<p>####rocksdb是在leveldb的基础上优化而得，解决了leveldb的一些问题。<br>主要的优化点</p>
<ol>
<li>增加了<em>column family</em>，这样有利于多个不相关的数据集存储在同一个db中，因为不同<em>column family</em>的数据是存储在不同的<em>sst</em>和<em>memtable</em>中，所以一定程度上起到了隔离的作用。</li>
<li>采用了多线程同时进行<em>compaction</em>的方法，优化了<em>compact</em>的速度。</li>
<li>增加了<em>merge operator</em>，优化了<em>modify</em>的效率</li>
<li>将<em>flush</em>和<em>compaction</em>分开不同的线程池，能有效的加快<em>flush</em>，防止<em>stall</em>。</li>
<li>增加了对write ahead log(WAL)的特殊管理机制，这样就能方便管理WAL文件，因为WAL是binlog文件。</li>
</ol>
<p>#####下面从几个小点来一窥rocksdb的微妙之处。<br>#####<em>rocksdb</em> 的 <em>column family</em></p>
<p><em>column family</em> 的具体使用场景，官方并没有给出非常好的说明，<em>rocksdb</em>支持跨<em>column family</em>的原子写操作，说明官方认为<em>column family</em>的数据之间还是有一定的关系的，而<em>column family</em>的数据文件是分割开的，包括<em>sst</em>文件和<em>memtable</em>都是不会共用的，所以官方还是希望不同<em>column family</em>的数据进行隔离。所以我觉着一个应用场景就是不同的数据混跑在同一个db上，这个仅是个人感觉，欢迎大家讨论。那么不同<em>column family</em>之间会怎样互相干涉呢？</p>
<hr>
<p>Q:多column family的flush是怎么进行线程分布的？<br>A:可以共用一个线程池，所以写的多的会多占用线程。也可以分开配置线程池（指定不同的env），这样就会不互相干扰。<br>Q:多column family的内存是怎么分配的？```<br>A:内存主要有两方面，第一方面是write buffer，第二方面是block cache。</p>
<hr>
<p>write buffer是每个column family单独享有的，block cache可以配置成column family级别，也可以配置成整个db的column family共享一个block cache，也可以配置成多个db共享一个block cache。</p>
<p>#####rocksdb的文件类型</p>
<p>主要有以下几种类型sst文件，CURRENT文件，manifest文件，log文件，LOG文件和LOCK文件<br>sst文件存储的是落地的数据，CURRENT文件存储的是当前最新的是哪个manifest文件，manifest文件存储的是Version的变化，log文件是rocksdb的write ahead log，就是在写db之前写的数据日志文件，LOG文件是一些日志信息，是供调试用的，LOCK是打开db锁，只允许同时有一个进程打开db。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">*ColumnFamilyOptions*<br>　　这些option都是column family相关的，可以对不同的column family赋不同的值。<br>　　inplace_update_support: 字面含义是是否支持在原位置更新，如果支持的话，那么原来的数据就被擦除了，所以snapshot和iterator保留当时的数据的逻辑就没法实现了<br>　　num_levels: 记录的是version的level的数目，默认是<span class="hljs-number">7</span>，即<span class="hljs-number">0</span>~<span class="hljs-number">6</span><br>　　target_file_size_base: level1的sst文件的大小，默认为<span class="hljs-number">2</span>MB<br>　　target_file_size_multiplier: level1以上的sst文件大小，乘数因子默认是<span class="hljs-number">1</span>，即所有level的文件大小都是<span class="hljs-number">2</span>MB<br>　　level0的文件大小是由write_buffer_size决定的，level1的文件大小是由target_file_size_base决定的，level2及以上，size = target_file_size_base * （target_file_size_multiplier ^ (L - <span class="hljs-number">1</span>)）<br>　　max_bytes_for_level_base: level1的sst总的文件总和大小，默认是<span class="hljs-number">10</span>MB<br>　　max_bytes_for_level_multiplier: level2及以上的level的sst文件总和大小的乘数因子，默认是<span class="hljs-number">10</span>,<br>　　　　level0的sst文件总和大小是level0_stop_writes_trigger * write_buffer_size，因为level0的文件数目达到level0_stop_writes_trigger时候就会停止write。<br>　　　　level1及以上的文件总和大小是max_bytes_for_level_base * (max_bytes_for_level_multiplier ^ (L - <span class="hljs-number">1</span>))，默认的level0是<span class="hljs-number">4</span>MB * <span class="hljs-number">24</span> = <span class="hljs-number">96</span>MB，level1是<span class="hljs-number">10</span>MB，level2是<span class="hljs-number">100</span>MB，level3是<span class="hljs-number">1</span>G，level4是<span class="hljs-number">10</span>G。。。<br></code></pre></td></tr></table></figure>

<p>#####rocksdb原子操作的实现</p>
<p>　　rocksdb的一个WriteBatch是原子操作，要么全部成功，要么全部失败，具体的实现原理是在整个log的写的过程中只会调用Write操作，最后会调用一次flush，所以如果中间发生机器crash，所有的都会失败，否则所有的都会成功。</p>
<p>######rocksdb写和读放大<br>　　rocksdb的写会写WAL（Write Ahead Log），如果sync的话，会写一次磁盘，然后会写memtable。写rocksdb的时候有可能会卡住，详见下面的rocksdb的写stall。<br>　　rocksdb的读，会首先读memtable，如果memtable没有找到的话，会读下面level的数据，由于level0的多个sst会有交叠，所以每个sst都会通过filemeta判断在不在最小和最大的范围内，如果在就需要读这个sst的文件内容，来查看，其他level的sst文件不会有数据交叠的情况，所以只会有一个文件可能含有这个数据。可以看出来读放大还是比较严重的。rocksdb为了减少读放大，增加了cache.<br>######读cache<br>　　rocksdb的读cache分为两部分：table cache和block cache。这两个都是LRUCache，block cache存储的block，包括index block和filter block（通过options可以配置）<br>　　table cache存储的是table，是整个文件的meta信息和Foot信息。table_cache_size的消耗内存的大小是有Options里面的max_open_files决定的。<br>######bloomfilter:<br>　　bloomfilter的增加并不能减少写放大，因为bloomfilter是table范围的或者block范围的，而且bloomfilter是存储在文件中的，那么必须把这些从文件里面读出来后才能起到作用。</p>
<p>#####rocksdb的版本管理</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">rocksdb的版本相关的数据结构有<span class="hljs-keyword">Version</span>、VersionStorageInfo、VersionBuilder、VersionEdit、SuperVersion和VersionSet。<br>VersionEdit描述的是版本的变更，其主要操作为AddFile和DeleteFile，分别表示，在某个<span class="hljs-keyword">level</span>上增加文件和删除文件，都是版本变更的操作。<br>VersionBuilder是生成<span class="hljs-keyword">Version</span>的工具，所以其有两个主要函数：<br><span class="hljs-type">void</span> Apply(VersionEdit* edit);<br><span class="hljs-type">void</span> SaveTo(VersionStorageInfo* vstorage);<br><br>分别是应用某个VersionEdit和将现在的版本Saveto某个VersionStorageInfo<br>VersionStorageInfo是<span class="hljs-keyword">Version</span>的信息的存储结构，每一个<span class="hljs-keyword">Version</span>的sst文件信息都保存在VersionStorageInfo。<br><span class="hljs-keyword">Version</span>是一个完整的版本。sst文件信息存储在VersionStorageInfo。可以在这个版本上<span class="hljs-keyword">Get</span>数据。<br>SuperVersion是db的一个完整的版本包含的所有信息，包含当前的Memtable，imm和一个<span class="hljs-keyword">Version</span>。也就是<span class="hljs-keyword">Version</span>包含的是sst数据信息，SuperVersion包含的是<span class="hljs-keyword">Version</span>的数据和memtable中的数据。<br>VersionSet是整个db的版本管理，并维护着manifest文件。每个<span class="hljs-keyword">column</span> <span class="hljs-keyword">family</span>的版本单独管理，在ColumnFamilyData这个数据结构里面有<span class="hljs-keyword">current</span> <span class="hljs-keyword">Version</span>。<br></code></pre></td></tr></table></figure>
<p>#####rocksdb的Flush</p>
<p>Flush是指将memtable的数据导入到sst中，变成持久化存储，就不怕数据丢失了。</p>
<ol>
<li>首先在memtable的add的时候，会检测是否memtable的大小达到了max write buffer，如果是就将should_flush_置为true，并会在WriteBatch的Handler里面调用CheckMemtableFull，将当前column family加入flush_scheduler。</li>
<li>在Write的时候，调用ScheduleFlushes，将需要flush的column family的memtable切换一个新的，同时将原来的memtable加入cfd的imm中，如果这个column family data的imm数量大于min_write_buffer_number_to_merge，并启动一个新的线程调用BGWorkFlush<br>由于真正的Flush过程是在另一个线程完成的，所以这个地方并不会block写过程。</li>
<li>另外，如果total_log_size大于max_wal_log_size并且不是只有一个column family，也会触发flush，因为flush能将memtable持久化到磁盘上，同时对应的wal就可以删除了</li>
</ol>
<p>#####rocksdb的compaction</p>
<p><em>rocksdb</em> 的 <em>compaction</em> 的触发条件有两类：<br>######第一类是某一个level的数据太多<br>VersionStorageInfo的compaction_score_的计算方法是level0的是当前文件数目/level0_file_num_compaction_trigger，其他层是该层当前文件大小总和/该层的配置的允许文件总和最大值<br>基于level的存储的compaction总的来说，就是一次挑选某一个level的一个文件，然后将该文件和高level的多个相交文件merge，最后生成多个高level的文件。具体的细节是：每次会挑选compaction score最高的一个level，并在这个level中找到一个文件大小最大，并且上一个level的相交文件没有在compaction的一个文件<br>######第二类是seek太多</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">疑问：<br>如果option里面soft_rate_limit设置的为<span class="hljs-number">0.0</span>和<span class="hljs-number">1</span>之间，compaction并不会触发，但是会触发write delay，这是为什么？<br>rocksdb的写stall<br></code></pre></td></tr></table></figure>
<p>在DBImpl也就是db的实例里面有一个WriteController，同时在ColumnFamilySet里面也有这个WriteController的指针，这个数据结构会控制db的写stall行为。<br>在ColumnFamily进行SuperVersion变更的时候（增加新memtable，flush增加sst，compaction）都会查看需不需要stall Write，stall的条件是：<br>(1) imm的数量大于等于option允许的最大数目<br>(2) level0的文件的数量大于option允许的数目<br>如果没有满足上面两项，但是compaction score比较大会delay写</p>
<p>rocksdb的write ahead log（WAL）<br>每次写操作，rocksdb会先写write ahead log，然后才会写db<br>write ahead log可以配置到单独的空间，并且可以配置WAL文件的单独的删除机制。这种原因是为了保存WAL文件，达到特殊的目的，比如，其他sst文件放在不可靠存储里面，而WAL放到可靠存储里面。</p>
<p>rocksdb的缺点<br>1.column family之间的隔离做的不是非常好，因为一个db只有一个WriteController，那么一旦一个db中的一个column family发生了阻塞，比如写太快，那么就会阻塞其他的column family的写。<br>2.多进程compaction和flush的效果我持怀疑态度，因为这两个主要是磁盘操作，多进程并不会有很好的效果。</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>supervisor总结</title>
    <url>/2019/06/03/51_supervisor/</url>
    <content><![CDATA[<p>官方文档 <a href="http://supervisord.org/installing.html" target="_blank" rel="noopener">http://supervisord.org/installing.html</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li><strong>Env：</strong><blockquote>
<ul>
<li>OS: <code>CentOS Linux release 7.4.1708 (Core)</code></li>
<li>Python: <code>Python 2.7.5</code></li>
<li>Pip: <code>pip 8.1.2 from /usr/lib/python2.7/site-packages (python 2.7)</code></li>
</ul>
</blockquote>
</li>
<li><strong>Install supervisor with pip</strong><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">yum install python-pip <span class="hljs-comment">#8.1.2-6.el7</span><br>pip install supervisor <span class="hljs-comment">#meld3-1.0.2 supervisor-3.3.4</span><br>supervisord -v<br><span class="hljs-comment">#Install supervisor</span><br>mkdir /etc/supervisor<br>echo_supervisord_conf  &gt; /etc/supervisor/supervisord.conf<br>cat /etc/supervisor/supervisord.conf |egrep -v <span class="hljs-string">"^$|^;"</span><br><span class="hljs-comment">#Create supervisor config file</span><br></code></pre></td></tr></table></figure></li>
<li><strong>Support systemd</strong><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">systemctl --version <span class="hljs-comment">#systemd 219</span><br><span class="hljs-comment">#Support systemd</span><br>wget https://raw.githubusercontent.com/zokeber/supervisor-systemd/master/etc/systemd/system/supervisord.service -O /etc/systemd/system/supervisord.service<br><span class="hljs-comment">#Download systemd config for supervisor.</span><br><span class="hljs-comment">#https://github.com/Supervisor/initscripts</span><br>systemctl status supervisord<br><span class="hljs-comment">#Now can use systemctl command to manage supervisor service</span><br>systemctl start supervisord <span class="hljs-comment">#&#123;start|stop|restart|reload&#125;</span><br><span class="hljs-comment">#Start service</span><br>systemctl list-unit-files | grep supervisor<br><span class="hljs-comment">#检查所有服务开机启动状态并过滤指定服务</span><br>systemctl <span class="hljs-built_in">enable</span> supervisord<br><span class="hljs-comment">#添加服务到开机自启动</span><br>systemctl is-enabled supervisord<br><span class="hljs-comment">#查询指定服务开机启动状态</span><br></code></pre></td></tr></table></figure></li>
<li><strong>Tip:</strong> <code>supervisord.service</code>文件如下<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Supervisor process control system for UNIX<br><span class="hljs-attr">Documentation</span>=http://supervisord.org<br><span class="hljs-attr">After</span>=network.target<br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">ExecStart</span>=/usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf<br><span class="hljs-attr">ExecStop</span>=/usr/bin/supervisorctl <span class="hljs-variable">$OPTIONS</span> shutdown<br><span class="hljs-attr">ExecReload</span>=/usr/bin/supervisorctl <span class="hljs-variable">$OPTIONS</span> reload<br><span class="hljs-attr">KillMode</span>=process<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">50</span>s<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure></li>
<li><strong>Tip：</strong> 主配置<code>/etc/supervisor/supervisord.conf</code>示例(参考Flowsnow的博客及官方文档)<a href="https://github.com/Gourds/daily-scripts/blob/master/ansible-playbook/roles/supervisor/templates/supervisord.conf.j2" target="_blank" rel="noopener">【附:我的配置】</a><figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[unix_http_server]</span><br><span class="hljs-attr">file</span> = /tmp/supervisor.sock <span class="hljs-comment">;socket文件路径</span><br><span class="hljs-comment">;chmod=0700                 ; socket 文件 模式 (默认 0700)</span><br><span class="hljs-comment">;chown=nobody:nogroup       ; socket file uid:gid owner</span><br><span class="hljs-comment">;username=user              ; 使用supervisorctl连接的用户,默认没有用户</span><br><span class="hljs-comment">;password=123               ; 使用supervisorctl连接的用户密码,默认没有密码</span><br><span class="hljs-comment">;</span><br><span class="hljs-section">[inet_http_server]</span><br><span class="hljs-attr">port</span> = <span class="hljs-number">172.21</span>.<span class="hljs-number">0.4</span>:<span class="hljs-number">9001</span> <span class="hljs-comment">;Web Server和远程的supervisorctl配置，默认关闭</span><br><span class="hljs-attr">username</span> = user123 <span class="hljs-comment">;登录用户，默认没有</span><br><span class="hljs-attr">password</span> = password123 <span class="hljs-comment">;用于登录密码，默认没有</span><br><span class="hljs-comment">;</span><br><span class="hljs-section">[supervisord]</span><br><span class="hljs-attr">logfile</span> = /tmp/supervisord.log <span class="hljs-comment">;supervisord进程的日志路径</span><br><span class="hljs-attr">logfile_maxbytes</span> = <span class="hljs-number">100</span>MB <span class="hljs-comment">;supervisor单个日志的大小，默认为50M</span><br><span class="hljs-attr">logfile_backups</span> = <span class="hljs-number">20</span> <span class="hljs-comment">;日志文件的个数，默认为10个</span><br><span class="hljs-attr">loglevel</span> = info <span class="hljs-comment">;日志级别，默认info &#123;trace|info|warn|debug&#125;</span><br><span class="hljs-attr">pidfile</span> = /tmp/supervisord.pid <span class="hljs-comment">;supervisor的pid文件路径</span><br><span class="hljs-attr">nodaemon</span> = <span class="hljs-literal">false</span> <span class="hljs-comment">;默认为false在后台运行，改为true即在前台运行</span><br><span class="hljs-attr">minfds</span> = <span class="hljs-number">20000</span> <span class="hljs-comment">;系统最少有的空闲文件描述符，低于这个值supervisor不会启动，另外跟最大文件句柄数相关</span><br><span class="hljs-attr">minprocs</span> = <span class="hljs-number">200</span> <span class="hljs-comment">;最小可用的进程描述符，低于这个值supervisor将不会正常启动</span><br><span class="hljs-comment">;</span><br><span class="hljs-section">[rpcinterface:supervisor]</span><br><span class="hljs-comment">;supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</span><br><span class="hljs-comment">;给XML_RPC用的，要使用supervisord或者web server必须要开启</span><br><span class="hljs-section">[supervisorctl]</span><br><span class="hljs-attr">serverurl</span> = unix:///tmp/supervisor.sock <span class="hljs-comment">;supervisorctl本地连接supervisord，使用本地UNIX socke</span><br><span class="hljs-comment">;</span><br><span class="hljs-section">[program:theprogramname]</span>      <span class="hljs-comment">; 指定管理服务的名称</span><br><span class="hljs-attr">command</span>=/bin/tail -f  /etc/fstab            <span class="hljs-comment">; 要执行的进程，可以带参数，不能是守护进程</span><br><span class="hljs-comment">;process_name=%(program_name)s ; numprocs参数为1时，就不用管这个参数 默认值%(program_name)s也就是上面的那个program冒号后面的名字</span><br><span class="hljs-comment">;numprocs=1                    ; 启动进程的数目。当不为1时，就是进程池的概念，默认为1</span><br><span class="hljs-attr">directory</span>=/tmp                <span class="hljs-comment">; 进程运行前，会前切换到这个目录</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                <span class="hljs-comment">; 设置为true 子进程将在supervisord启动后被自动启动，默认为true</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                <span class="hljs-comment">; 进程启动失败后，最大尝试启动的次数 当超过3次后，supervisor将把此进程的状态置为FAIL</span><br><span class="hljs-attr">autorestart</span>=unexpected        <span class="hljs-comment">; 设置子进程挂掉后自动重启的情况，有三个选项，false,unexpected和true。默认为unexpected</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                 <span class="hljs-comment">; 注意和上面的的autorestart=unexpected对应 exitcodes里面的定义的退出码是expected的。</span><br><span class="hljs-attr">stopsignal</span>=QUIT               <span class="hljs-comment">; 进程停止信号，可以为TERM, HUP, INT, QUIT, KILL, USR1, or USR2等信号 默认为TERM 当用设定的信号去杀掉进程，退出码会被认为是expected</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>               <span class="hljs-comment">; 这个是当我们向子进程发送stopsignal信号后，到系统返回信息给supervisord，所等待的最大时间。 超过这个时间，supervisord会向该子进程发送一个强制kill的信号(默认10秒)</span><br><span class="hljs-comment">;stopasgroup=false             ; 这个东西主要用于，supervisord管理的子进程，这个子进程本身还有子进程 那么我们如果仅仅干掉supervisord的子进程的话，子进程的子进程有可能会变成孤儿进程 所以咱们可以设置这个选项，把整个该子进程的整个进程组都干掉  设置为true的话，一般killasgroup也会被设置为true 该选项发送的是stop信号(def false)</span><br><span class="hljs-comment">;killasgroup=false             ; 这个和上面的stopasgroup类似，不过发送的是kill信号(def false)</span><br><span class="hljs-attr">user</span>=chrism                   <span class="hljs-comment">; 如果supervisord是root启动，我们在这里设置这个非root用户，可以用来管理该program 默认不设置</span><br><span class="hljs-comment">;redirect_stderr=true          ; 为true，则stderr的日志会被写入stdout日志文件中 (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/a/path        <span class="hljs-comment">; 子进程的stdout的日志路径，可以指定路径，AUTO，none等三个选项 设置为none的话，将没有日志产生。设置为AUTO的话，将随机找一个地方成日志文件，而且当supervisord重新启动的时候，以前的日志文件会被清空。当 redirect_stderr=true的时候，sterr也会写进这个日志文件</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">100</span>MB   <span class="hljs-comment">; 日志文件最大大小，和[supervisord]中定义的一样 (default 50MB)</span><br><span class="hljs-comment">;stdout_logfile_backups=10     ; 和[supervisord]定义的一样 (0 means none, default 10)</span><br><span class="hljs-comment">;stdout_capture_maxbytes=1MB   ; 这个东西是设定capture管道的大小，当值不为0的时候，子进程可以从stdout发送信息，而supervisor可以根据信息，发送相应的event  (default 0)</span><br><span class="hljs-comment">;stdout_events_enabled=false   ; 为ture的时候，当子进程由stdout向文件描述符中写日志的时候，将触发supervisord发送PROCESS_LOG_STDOUT类型的event(default false)</span><br><span class="hljs-attr">stderr_logfile</span>=/a/path        <span class="hljs-comment">; 设置stderr写的日志路径，当redirect_stderr=true。这个就不用设置了，设置了也是白搭。因为它会被写入stdout_logfile的同一个文件中 default AUTO(随便找个地存，supervisord重启被清空)</span><br><span class="hljs-attr">stderr_logfile_maxbytes</span>=<span class="hljs-number">1</span>MB   <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stderr_logfile_backups</span>=<span class="hljs-number">10</span>     <span class="hljs-comment">; # of stderr logfile backups (default 10)</span><br><span class="hljs-comment">;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)</span><br><span class="hljs-comment">;stderr_events_enabled=false   ; emit events on stderr writes (default false)</span><br><span class="hljs-comment">;environment=A="1",B="2"       ; 这个是该子进程的环境变量，和别的子进程是不共享的</span><br><span class="hljs-comment">;serverurl=AUTO                ; override serverurl computation (childutils)</span><br><span class="hljs-comment">;</span><br><span class="hljs-comment">;[group:thegroupname]          ; 给programs分组，划分到组里面的program。我们就不用一个一个去操作了 我们可以对组名进行统一的操作。 注意：program被划分到组里面之后，就相当于原来的配置从supervisor的配置文件里消失了supervisor只会对组进行管理，而不再会对组里面的单个program进行管理了</span><br><span class="hljs-comment">;programs=progname1,progname2  ; 组成员，用逗号分开</span><br><span class="hljs-comment">;priority=999                  ; 优先级，相对于组和组之间 (default 999)</span><br><span class="hljs-section">[include]</span><br><span class="hljs-attr">files</span> = /etc/supervisord/conf.d/*.conf <span class="hljs-comment">;包含其他的程序配置文件</span><br></code></pre></td></tr></table></figure></li>
<li><strong>Tip：</strong> 子服务配置<code>/etc/supervisor/conf.d/example1.conf</code>示例(即上面的program配置项可以提取到单独文件)<a href="https://github.com/Gourds/daily-scripts/blob/master/ansible-playbook/roles/supervisor/templates/program_example.j2" target="_blank" rel="noopener">【<strong>附：</strong> 我的配置】</a><figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[program:example1]</span><br><span class="hljs-attr">command</span>=/bin/tail -f <span class="hljs-number">121</span><br><span class="hljs-attr">directory</span>=/tmp<br><span class="hljs-attr">user</span>=arvon<br><span class="hljs-attr">stdout_logfile</span>=/tmp/example1.log<br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">100</span>MB<br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">10</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">autorestart</span>=unexpected<br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span><br><span class="hljs-attr">stopsignal</span>=QUIT<br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure></li>
<li><strong>注意点（踩坑）</strong><blockquote>
<ul>
<li>supervisord中参数minfds和minprocs决定了supervisord进程及其守护的子进程的Max Processes及Max open files，并且这个limit限制不受系统ulimit所影响</li>
<li>supervisord守护的子进程无法在supervisord配置文件中单独修改minfds和minprocs这两个参数。下面红色部分的配置是无效的</li>
</ul>
<p><strong>以上截取自旺仔牛奶Blog的结论</strong></p>
</blockquote>
<h3 id="附：CentOS7与CentOS6对比"><a href="#附：CentOS7与CentOS6对比" class="headerlink" title="附：CentOS7与CentOS6对比"></a>附：CentOS7与CentOS6对比</h3>CentOS7并没有在生产环境大量使用，刚好可以利用这次线上测试的机会稍微总结下</li>
</ul>
<p><strong>主要区别大致包含以下几个方面：</strong></p>
<ul>
<li>基础命令</li>
<li>内核版本（2.x和3.x）</li>
<li>文件系统（ext4和xfs）</li>
<li>安全系统（防火墙）</li>
<li>服务管理（service和systemctl）<blockquote>
<p><strong>建议</strong></p>
<ul>
<li>使用Docker建议使用系统版本&gt;=7.4，7.2印象中之前测试有关于cgroup的坑，另外啰嗦一个下Docker对内核版本的要求是至少3.8;目前官方推荐大于3.10<a href="https://docs.docker.com/engine/docker-overview/#the-underlying-technology" target="_blank" rel="noopener">【官网地址】</a></li>
<li>看到<a href="https://blog.csdn.net/xu_Melon/article/details/79043898" target="_blank" rel="noopener">【CSDN上的一篇Blog】</a>里面介绍了一些命令的不同，我也懒得总结了</li>
</ul>
</blockquote>
<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><a href="http://supervisord.org/installing.html" target="_blank" rel="noopener">【Supervisor官方文档】</a><br><a href="http://flowsnow.net/2017/09/25/%E8%AF%A6%E8%A7%A3supervisor%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">【Flowsnow的Blog】</a><br><a href="http://www.madown.com/2017/05/25/supervisor%E4%B8%AD%E7%9A%84minfds%E5%8F%8Aminprocs%E5%8F%82%E6%95%B0%E7%94%A8%E9%80%94/" target="_blank" rel="noopener">【旺仔牛奶的Blog】</a></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
        <tag>supervisor</tag>
      </tags>
  </entry>
  <entry>
    <title>fluent-kafka-elasticsearch</title>
    <url>/2019/01/17/57_kafka/</url>
    <content><![CDATA[<p>前段时间因为线上elasticsearch压力太大，kibana查询总是崩溃，做了升级后使用了kafka，现有时间了整理记录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># cd /opt/</span><br><span class="hljs-comment"># wget https://tencent-init-1255595812.cos.ap-beijing.myqcloud.com/kafka/kafka_2.12-2.0.0.tgz</span><br><span class="hljs-comment"># wget https://tencent-init-1255595812.cos.ap-beijing.myqcloud.com/zookeeper/zookeeper-3.4.13.tar.gz</span><br><span class="hljs-comment"># tar xf zookeeper-3.4.13.tar.gz</span><br><span class="hljs-comment"># tar xf kafka_2.12-2.0.0.tgz</span><br><span class="hljs-comment"># mkdir kafka</span><br><span class="hljs-comment"># mkdir zookeeper</span><br><span class="hljs-comment"># cd kafka</span><br><span class="hljs-comment"># mkdir data  kafka-logs  log</span><br><span class="hljs-comment"># cd ..</span><br><span class="hljs-comment"># cd zookeeper</span><br><span class="hljs-comment"># mkdir data  zkdatalog</span><br><span class="hljs-comment"># cd data/</span><br><span class="hljs-comment"># vim myid</span><br>1<br>---<br><span class="hljs-comment"># cd ../..</span><br><span class="hljs-comment"># cd kafka_2.12-2.0.0</span><br><span class="hljs-comment"># cd config/</span><br><span class="hljs-comment">#vim server.properties</span><br>[root@ip-00-00-00-235 config]<span class="hljs-comment"># cat server.properties | grep -Ev '^$|#'</span><br>broker.id=1<br>port=9092<br>host.name=00.00.00.235<br>num.network.threads=3<br>num.io.threads=8<br>socket.send.buffer.bytes=102400<br>socket.receive.buffer.bytes=102400<br>socket.request.max.bytes=104857600<br>log.dirs=/opt/kafka/kafka-logs<br>num.partitions=1<br>num.recovery.threads.per.data.dir=1<br>offsets.topic.replication.factor=1<br>transaction.state.log.replication.factor=1<br>transaction.state.log.min.isr=1<br>log.retention.hours=168<br>log.segment.bytes=1073741824<br>log.retention.check.interval.ms=300000<br>log.cleaner.enable=False<br>zookeeper.connect=00.00.00.235:2181,00.00.00.218:2181,00.00.00.25:2181<br>zookeeper.connection.timeout.ms=6000<br>---<br><span class="hljs-comment"># vim zookeeper.properties</span><br>[root@ip-00-00-00-235 config]<span class="hljs-comment"># cat zookeeper.properties |grep -Ev '^$|#'</span><br>dataDir=/opt/zookeeper/snapshot<br>clientPort=2181<br>maxClientCnxns=0<br><span class="hljs-comment"># cd ../..</span><br><span class="hljs-comment"># cd zookeeper-3.4.13</span><br><span class="hljs-comment"># cd conf/</span><br><span class="hljs-comment"># vim zoo.cfg</span><br>[root@ip-00-00-00-235 conf]<span class="hljs-comment"># cat zoo.cfg | grep -Ev '^$|#'</span><br>tickTime=2000<br>initLimit=5<br>syncLimit=2<br>dataDir=/opt/zookeeper/data<br>dataLogDir=/opt/zookeeper/zkdatalog<br>clientPort=2181<br>autopurge.snapRetainCount=3<br>autopurge.purgeInterval=1<br>server.1=00.00.00.235:2888:3888<br>server.2=00.00.00.218:2888:3888<br>server.3=00.00.00.25:2888:3888<br><span class="hljs-comment"># cd /etc/elasticsearch/</span><br><span class="hljs-comment"># vim template_run.sh</span><br>[root@ip-00-00-00-235 elasticsearch]<span class="hljs-comment"># cat template_run.sh</span><br><span class="hljs-meta">#!/bin/sh</span><br>curl -H <span class="hljs-string">"Content-Type: application/json"</span> -XPUT <span class="hljs-string">'00.00.00.235:9200/_template/all '</span> -d <span class="hljs-string">'</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  "template": "*",</span><br><span class="hljs-string">  "settings": &#123;</span><br><span class="hljs-string">    "refresh_interval": "30s",</span><br><span class="hljs-string">    "number_of_replicas": "0"</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;'</span><br>curl -H <span class="hljs-string">"Content-Type: application/json"</span> -XPUT <span class="hljs-string">'00.00.00.235:9200/_template/all '</span> -d <span class="hljs-string">'</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  "template": "*",</span><br><span class="hljs-string">  "settings": &#123;</span><br><span class="hljs-string">    "index.mapping.total_fields.limit": 20000,</span><br><span class="hljs-string">    "refresh_interval": "30s"</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;'</span><br><br>curl -H <span class="hljs-string">"Content-Type: application/json"</span> -XPUT <span class="hljs-string">'00.00.00.235:9200/_settings'</span> -d <span class="hljs-string">'</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  "index" : &#123;</span><br><span class="hljs-string">    "number_of_replicas" : 0</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">'</span><br>curl -H <span class="hljs-string">"Content-Type: application/json"</span> -XPUT <span class="hljs-string">'00.00.00.235:9200/_cluster/settings'</span> -d <span class="hljs-string">'</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    "transient" : &#123;</span><br><span class="hljs-string">        "indices.recovery.max_bytes_per_sec" : "200mb",</span><br><span class="hljs-string">        "indices.breaker.fielddata.limit" : "50%",</span><br><span class="hljs-string">        "indices.breaker.request.limit" : "30%",</span><br><span class="hljs-string">        "indices.breaker.total.limit" : "60%"</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;'</span><br><br>curl -H <span class="hljs-string">"Content-Type: application/json"</span> -XPUT <span class="hljs-string">'00.00.00.235:9200/_template/kbilogs '</span> -d <span class="hljs-string">'</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">   "index_patterns": ["kbilogs*"],</span><br><span class="hljs-string">   "settings": &#123;</span><br><span class="hljs-string">     "auto_expand_replicas": "0-2"</span><br><span class="hljs-string">   &#125;</span><br><span class="hljs-string">&#125;'</span><br><br>curl -H <span class="hljs-string">"Content-Type: application/json"</span> -XPUT <span class="hljs-string">'00.00.00.235:9200/_template/fluentd '</span> -d <span class="hljs-string">'</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">   "index_patterns": ["fluentd*"],</span><br><span class="hljs-string">   "settings": &#123;</span><br><span class="hljs-string">     "auto_expand_replicas": "0-2"</span><br><span class="hljs-string">   &#125;</span><br><span class="hljs-string">&#125;'</span><br><br><br><span class="hljs-comment"># vim healthy.sh</span><br>curl <span class="hljs-string">'http://00.00.00.235:9200/_cat/health?v'</span><br><br><span class="hljs-comment"># /etc/init.d/elasticsearch status</span><br><span class="hljs-comment"># vim elasticsearch.yml</span><br>[root@ip-00-00-00-235 elasticsearch]<span class="hljs-comment"># cat elasticsearch.yml | grep -Ev '^$|#'</span><br>cluster.name: taiyouxi-jws<br>node.name: vpc1-ip-00-00-00-235<br>node.attr.type: strong<br>node.master: <span class="hljs-literal">true</span><br>node.data: <span class="hljs-literal">true</span><br>xpack.monitoring.exporters.my_local:<br>  <span class="hljs-built_in">type</span>: <span class="hljs-built_in">local</span><br>  use_ingest: <span class="hljs-literal">false</span><br>path.data: /var/lib/elasticsearch<br>path.logs: /var/<span class="hljs-built_in">log</span>/elasticsearch<br>network.host: 00.00.00.235<br>http.port: 9200<br>discovery.zen.ping.unicast.hosts:<br>   - 00.00.00.235<br>   - 00.00.00.218<br>   - 00.00.00.25<br>discovery.zen.minimum_master_nodes: 2<br>gateway.expected_master_nodes: 2<br>gateway.expected_data_nodes: 2<br>gateway.recover_after_time: 1m<br>gateway.recover_after_nodes: 1<br>gateway.recover_after_master_nodes: 1<br>gateway.recover_after_data_nodes: 1<br><br><span class="hljs-comment"># vim /etc/init.d/elasticsearch</span><br><br>[root@ip-00-00-00-235 elasticsearch]<span class="hljs-comment"># cat /etc/init.d/elasticsearch</span><br><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># elasticsearch &lt;summary&gt;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># chkconfig:   2345 80 20</span><br><span class="hljs-comment"># description: Starts and stops a single elasticsearch instance on this system</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment">### BEGIN INIT INFO</span><br><span class="hljs-comment"># Provides: Elasticsearch</span><br><span class="hljs-comment"># Required-Start: $network $named</span><br><span class="hljs-comment"># Required-Stop: $network $named</span><br><span class="hljs-comment"># Default-Start: 2 3 4 5</span><br><span class="hljs-comment"># Default-Stop: 0 1 6</span><br><span class="hljs-comment"># Short-Description: This service manages the elasticsearch daemon</span><br><span class="hljs-comment"># Description: Elasticsearch is a very scalable, schema-free and high-performance search solution supporting multi-tenancy and near realtime search.</span><br><span class="hljs-comment">### END INIT INFO</span><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># init.d / servicectl compatibility (openSUSE)</span><br><span class="hljs-comment">#</span><br><span class="hljs-keyword">if</span> [ -f /etc/rc.status ]; <span class="hljs-keyword">then</span><br>    . /etc/rc.status<br>    rc_reset<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Source function library.</span><br><span class="hljs-comment">#</span><br><span class="hljs-keyword">if</span> [ -f /etc/rc.d/init.d/<span class="hljs-built_in">functions</span> ]; <span class="hljs-keyword">then</span><br>    . /etc/rc.d/init.d/<span class="hljs-built_in">functions</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># Sets the default values for elasticsearch variables used in this script</span><br>ES_HOME=<span class="hljs-string">"/usr/share/elasticsearch"</span><br>MAX_OPEN_FILES=65536<br>MAX_MAP_COUNT=262144<br>ES_PATH_CONF=<span class="hljs-string">"/etc/elasticsearch"</span><br><br>PID_DIR=<span class="hljs-string">"/var/run/elasticsearch"</span><br><br><span class="hljs-comment"># Source the default env file</span><br>ES_ENV_FILE=<span class="hljs-string">"/etc/sysconfig/elasticsearch"</span><br><span class="hljs-keyword">if</span> [ -f <span class="hljs-string">"<span class="hljs-variable">$ES_ENV_FILE</span>"</span> ]; <span class="hljs-keyword">then</span><br>    . <span class="hljs-string">"<span class="hljs-variable">$ES_ENV_FILE</span>"</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># ES_USER and ES_GROUP settings were removed</span><br><span class="hljs-keyword">if</span> [ ! -z <span class="hljs-string">"<span class="hljs-variable">$ES_USER</span>"</span> ] || [ ! -z <span class="hljs-string">"<span class="hljs-variable">$ES_GROUP</span>"</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"ES_USER and ES_GROUP settings are no longer supported. To run as a custom user/group use the archive distribution of Elasticsearch."</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">exec</span>=<span class="hljs-string">"<span class="hljs-variable">$ES_HOME</span>/bin/elasticsearch"</span><br>prog=<span class="hljs-string">"elasticsearch"</span><br>pidfile=<span class="hljs-string">"<span class="hljs-variable">$PID_DIR</span>/<span class="hljs-variable">$&#123;prog&#125;</span>.pid"</span><br><br><span class="hljs-built_in">export</span> ES_JAVA_OPTS<br><span class="hljs-built_in">export</span> JAVA_HOME<br><span class="hljs-built_in">export</span> ES_PATH_CONF<br><span class="hljs-built_in">export</span> ES_STARTUP_SLEEP_TIME<br><br>lockfile=/var/lock/subsys/<span class="hljs-variable">$prog</span><br><br><span class="hljs-keyword">if</span> [ ! -x <span class="hljs-string">"<span class="hljs-variable">$exec</span>"</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">"The elasticsearch startup script does not exists or it is not executable, tried: <span class="hljs-variable">$exec</span>"</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-function"><span class="hljs-title">checkJava</span></span>() &#123;<br>    <span class="hljs-keyword">if</span> [ -x <span class="hljs-string">"<span class="hljs-variable">$JAVA_HOME</span>/bin/java"</span> ]; <span class="hljs-keyword">then</span><br>        JAVA=<span class="hljs-string">"<span class="hljs-variable">$JAVA_HOME</span>/bin/java"</span><br>    <span class="hljs-keyword">else</span><br>        JAVA=`<span class="hljs-built_in">which</span> java`<br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-keyword">if</span> [ ! -x <span class="hljs-string">"<span class="hljs-variable">$JAVA</span>"</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">"Could not find any executable java binary. Please install java in your PATH or set JAVA_HOME"</span><br>        <span class="hljs-built_in">exit</span> 1<br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">start</span></span>() &#123;<br>    checkJava<br>    [ -x <span class="hljs-variable">$exec</span> ] || <span class="hljs-built_in">exit</span> 5<br><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">"<span class="hljs-variable">$MAX_OPEN_FILES</span>"</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">ulimit</span> -n <span class="hljs-variable">$MAX_OPEN_FILES</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">"<span class="hljs-variable">$MAX_LOCKED_MEMORY</span>"</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">ulimit</span> -l <span class="hljs-variable">$MAX_LOCKED_MEMORY</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">"<span class="hljs-variable">$MAX_MAP_COUNT</span>"</span> -a -f /proc/sys/vm/max_map_count -a <span class="hljs-string">"<span class="hljs-variable">$MAX_MAP_COUNT</span>"</span> -gt $(cat /proc/sys/vm/max_map_count) ]; <span class="hljs-keyword">then</span><br>        sysctl -q -w vm.max_map_count=<span class="hljs-variable">$MAX_MAP_COUNT</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-comment"># Ensure that the PID_DIR exists (it is cleaned at OS startup time)</span><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">"<span class="hljs-variable">$PID_DIR</span>"</span> ] &amp;&amp; [ ! -e <span class="hljs-string">"<span class="hljs-variable">$PID_DIR</span>"</span> ]; <span class="hljs-keyword">then</span><br>        mkdir -p <span class="hljs-string">"<span class="hljs-variable">$PID_DIR</span>"</span> &amp;&amp; chown elasticsearch:elasticsearch <span class="hljs-string">"<span class="hljs-variable">$PID_DIR</span>"</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">"<span class="hljs-variable">$pidfile</span>"</span> ] &amp;&amp; [ ! -e <span class="hljs-string">"<span class="hljs-variable">$pidfile</span>"</span> ]; <span class="hljs-keyword">then</span><br>        touch <span class="hljs-string">"<span class="hljs-variable">$pidfile</span>"</span> &amp;&amp; chown elasticsearch:elasticsearch <span class="hljs-string">"<span class="hljs-variable">$pidfile</span>"</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-built_in">cd</span> <span class="hljs-variable">$ES_HOME</span><br>    <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">"Starting <span class="hljs-variable">$prog</span>: "</span><br>    <span class="hljs-comment"># if not running, start it up here, usually something like "daemon $exec"</span><br>    daemon --user elasticsearch --pidfile <span class="hljs-variable">$pidfile</span> <span class="hljs-variable">$exec</span> -p <span class="hljs-variable">$pidfile</span> -d<br>    retval=$?<br>    <span class="hljs-built_in">echo</span><br>    [ <span class="hljs-variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="hljs-variable">$lockfile</span><br>    <span class="hljs-built_in">return</span> <span class="hljs-variable">$retval</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">stop</span></span>() &#123;<br>    <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">"Stopping <span class="hljs-variable">$prog</span>: "</span><br>    <span class="hljs-comment"># stop it here, often "killproc $prog"</span><br>    killproc -p <span class="hljs-variable">$pidfile</span> -d 86400 <span class="hljs-variable">$prog</span><br>    retval=$?<br>    <span class="hljs-built_in">echo</span><br>    [ <span class="hljs-variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="hljs-variable">$lockfile</span><br>    <span class="hljs-built_in">return</span> <span class="hljs-variable">$retval</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">restart</span></span>() &#123;<br>    stop<br>    start<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">reload</span></span>() &#123;<br>    restart<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">force_reload</span></span>() &#123;<br>    restart<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">rh_status</span></span>() &#123;<br>    <span class="hljs-comment"># run checks to determine if the service is running or use generic status</span><br>    status -p <span class="hljs-variable">$pidfile</span> <span class="hljs-variable">$prog</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">rh_status_q</span></span>() &#123;<br>    rh_status &gt;/dev/null 2&gt;&amp;1<br>&#125;<br><br><br><span class="hljs-keyword">case</span> <span class="hljs-string">"<span class="hljs-variable">$1</span>"</span> <span class="hljs-keyword">in</span><br>    start)<br>        rh_status_q &amp;&amp; <span class="hljs-built_in">exit</span> 0<br>        <span class="hljs-variable">$1</span><br>        ;;<br>    stop)<br>        rh_status_q || <span class="hljs-built_in">exit</span> 0<br>        <span class="hljs-variable">$1</span><br>        ;;<br>    restart)<br>        <span class="hljs-variable">$1</span><br>        ;;<br>    reload)<br>        rh_status_q || <span class="hljs-built_in">exit</span> 7<br>        <span class="hljs-variable">$1</span><br>        ;;<br>    force-reload)<br>        force_reload<br>        ;;<br>    status)<br>        rh_status<br>        ;;<br>    condrestart|try-restart)<br>        rh_status_q || <span class="hljs-built_in">exit</span> 0<br>        restart<br>        ;;<br>    *)<br>        <span class="hljs-built_in">echo</span> $<span class="hljs-string">"Usage: <span class="hljs-variable">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload&#125;"</span><br>        <span class="hljs-built_in">exit</span> 2<br><span class="hljs-keyword">esac</span><br><span class="hljs-built_in">exit</span> $?<br>---<br><span class="hljs-comment"># vim jvm.options</span><br>[root@ip-10-33-3-235 elasticsearch]<span class="hljs-comment"># cat jvm.options |grep -Ev '^$|#'</span><br>-Xms16024m<br>-Xmx16024m<br>-XX:+UseG1GC<br>-XX:MaxGCPauseMillis=200<br>-XX:+AlwaysPreTouch<br>-Xss1m<br>-Djava.awt.headless=<span class="hljs-literal">true</span><br>-Dfile.encoding=UTF-8<br>-Djna.nosys=<span class="hljs-literal">true</span><br>-XX:-OmitStackTraceInFastThrow<br>-Dio.netty.noUnsafe=<span class="hljs-literal">true</span><br>-Dio.netty.noKeySetOptimization=<span class="hljs-literal">true</span><br>-Dio.netty.recycler.maxCapacityPerThread=0<br>-Dlog4j.shutdownHookEnabled=<span class="hljs-literal">false</span><br>-Dlog4j2.disable.jmx=<span class="hljs-literal">true</span><br>-Djava.io.tmpdir=<span class="hljs-variable">$&#123;ES_TMPDIR&#125;</span><br>-XX:+HeapDumpOnOutOfMemoryError<br>-XX:HeapDumpPath=/var/lib/elasticsearch<br>-XX:ErrorFile=/var/<span class="hljs-built_in">log</span>/elasticsearch/hs_err_pid%p.log<br>8:-XX:+PrintGCDetails<br>8:-XX:+PrintGCDateStamps<br>8:-XX:+PrintTenuringDistribution<br>8:-XX:+PrintGCApplicationStoppedTime<br>8:-Xloggc:/var/<span class="hljs-built_in">log</span>/elasticsearch/gc.log<br>8:-XX:+UseGCLogFileRotation<br>8:-XX:NumberOfGCLogFiles=32<br>8:-XX:GCLogFileSize=64m<br>9-:-Xlog:gc*,gc+age=trace,safepoint:file=/var/<span class="hljs-built_in">log</span>/elasticsearch/gc.log:utctime,pid,tags:filecount=32,filesize=64m<br>9-:-Djava.locale.providers=COMPAT<br>10-:-XX:UseAVX=2<br><span class="hljs-comment"># chmod g+w /etc/elasticsearch</span><br><span class="hljs-comment"># /etc/init.d/elasticsearch  start</span><br><span class="hljs-comment"># tail -f /var/log/elasticsearch/elasticseatch-zd.log</span><br><span class="hljs-comment"># ps -ef |grep elasticsearch</span><br><span class="hljs-comment"># sh healthy.sh</span><br><span class="hljs-comment"># sh template_run.sh</span><br><span class="hljs-comment"># vim /etc/security/limits.d/max.conf</span><br>root soft nofile 500000<br>root hard nofile 500000<br>* soft nofile 500000<br>* hard nofile 500000<br>elasticsearch soft memlock unlimited<br>elasticsearch hard memlock unlimited<br>---<br><span class="hljs-comment"># cd /etc/supervisord/conf.d/</span><br><span class="hljs-comment"># vim kafka.conf</span><br>[root@ip-00-00-00-235 conf.d]<span class="hljs-comment"># cat kafka.conf</span><br>[program:kafka]<br>directory=/opt/kafka_2.12-2.0.0<br><span class="hljs-built_in">command</span>=/opt/kafka_2.12-2.0.0/bin/kafka-server-start.sh /opt/kafka_2.12-2.0.0/config/server.properties<br>stdout_logfile=/opt/kafka/kafka-logs/kafka.out<br>stderr_logfile=/opt/kafka/kafka-logs/kafka.err<br>autorestart=<span class="hljs-literal">true</span><br>stopsignal=KILL<br>---<br><span class="hljs-comment"># vim zookeeper.conf</span><br>[root@ip-00-00-00-235 conf.d]<span class="hljs-comment"># cat zookeeper.conf</span><br>[program:zookeeper]<br>directory=/opt/zookeeper-3.4.13<br><span class="hljs-built_in">command</span>=/opt/zookeeper-3.4.13/bin/zkServer.sh start-foreground<br>autorestart=<span class="hljs-literal">true</span><br>stopsignal=KILL<br>stdout_logfile=/opt/zookeeper/zkdatalog/zookeeper.out<br>stderr_logfile=/opt/zookeeper/zkdatalog/zookeeper.err<br>---<br><span class="hljs-comment"># rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class="hljs-comment"># vim /etc/yum.repos.d/elasticsearch.repo</span><br>[elasticsearch-6.x]<br>name=Elasticsearch repository <span class="hljs-keyword">for</span> 6.x packages<br>baseurl=https://artifacts.elastic.co/packages/6.x/yum<br>gpgcheck=1<br>gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch<br>enabled=1<br>autorefresh=1<br><span class="hljs-built_in">type</span>=rpm-md<br>---<br><span class="hljs-comment"># yum install elasticsearch</span><br><span class="hljs-comment"># chkconfig --add elasticsearch</span><br><span class="hljs-comment"># yum remove java</span><br><span class="hljs-comment"># yum install java-1.8.0-openjdk.x86_64</span><br><span class="hljs-comment"># java -version</span><br><span class="hljs-comment"># yum install kibana</span><br><span class="hljs-comment"># vim /etc/kibana/kibana.yml</span><br>[root@ip-00-00-00-235 conf.d]<span class="hljs-comment"># cat  /etc/kibana/kibana.yml |grep -Ev '^$|#'</span><br>server.port: 5601<br>server.host: <span class="hljs-string">"00.00.00.235"</span><br>elasticsearch.url: <span class="hljs-string">"http://00.00.00.235:9200"</span><br>kibana.index: <span class="hljs-string">".kibana"</span><br>elasticsearch.pingTimeout: 1500<br>elasticsearch.requestTimeout: 30000<br><span class="hljs-comment"># /etc/init.d/kibana start</span><br><span class="hljs-comment"># ps aux |grep kibana</span><br><span class="hljs-comment"># ./kafka-topics.sh --list --zookeeper 00.00.00.235</span><br><br><br><br>---------------<br>tdagent中转<br><br>&lt;<span class="hljs-built_in">source</span>&gt;<br>  @<span class="hljs-built_in">type</span> kafka<br>  brokers 00.00.00.235:9092,00.00.00.218:9092,00.00.00.25:9092<br>  topics logics-auth<br>  offset_zookeeper 00.00.00.235:2181,00.00.00.218:2181,00.00.00.25:2181<br>  offset_zk_root_node  /fluent-plugin-kafka<br>  <span class="hljs-comment">#offset 2458884411</span><br>  add_prefix logics-auth<br>&lt;/<span class="hljs-built_in">source</span>&gt;<br><br><span class="hljs-comment">##################################################################################</span><br>&lt;match logics-auth**&gt;<br>      <span class="hljs-built_in">type</span> elasticsearch<br>      host 00.00.00.235<br>      port 9200<br>      logstash_format <span class="hljs-literal">true</span><br>      logstash_prefix kbilogs<br>      logstash_dateformat logics-auth.%Y.%m.%d<br>      time_key time<br>      flush_interval 10s<br>      request_timeout 15s<br>      reload_on_failure <span class="hljs-literal">true</span><br>      reconnect_on_error <span class="hljs-literal">true</span><br>&lt;/match&gt;<br><br>-----------<br>auth服务<br><br><span class="hljs-comment"># cat auth.conf</span><br>&lt;<span class="hljs-built_in">source</span>&gt;<br>  <span class="hljs-built_in">type</span> tail<br>  format json<br>  time_key time<br>  time_format %N<br>  refresh_interval 1s<br>  pos_file /var/<span class="hljs-built_in">log</span>/td-agent/logics_auth.log.pos<br>  path /opt/supervisor/<span class="hljs-built_in">log</span>/logics_auth.%Y.%m.%d.%H.log<br>  tag kafka.auth<br>&lt;/<span class="hljs-built_in">source</span>&gt;<br><br>&lt;<span class="hljs-built_in">source</span>&gt;<br>  <span class="hljs-built_in">type</span> forward<br>  port 24224<br>&lt;/<span class="hljs-built_in">source</span>&gt;<br><br>&lt;match debug.**&gt;<br>  <span class="hljs-built_in">type</span> stdout<br>&lt;/match&gt;<br><br>&lt;<span class="hljs-built_in">source</span>&gt;<br>  <span class="hljs-built_in">type</span> debug_agent<br>  <span class="hljs-built_in">bind</span> 127.0.0.1<br>  port 24230<br>&lt;/<span class="hljs-built_in">source</span>&gt;<br><br>&lt;match kafka.auth&gt;<br>  @<span class="hljs-built_in">type</span> kafka_buffered<br>  <span class="hljs-comment">#list of seed brokers</span><br>  brokers 00.00.00.235:9092,00.00.00.218:9092,00.00.00.25:9092<br>  <span class="hljs-comment">#buffer settings</span><br>  buffer_type file<br>  buffer_path /var/<span class="hljs-built_in">log</span>/td-agent/buffer/td-kafka-auth<br>  buffer_chunk_limit 2048m<br>  buffer_queue_limit 32<br>  flush_interval 10s<br>  flush_at_shutdown <span class="hljs-literal">false</span><br>  num_threads 1<br>  log_level info<br>  <span class="hljs-comment">#topic settings</span><br>  default_topic logics-auth<br>  <span class="hljs-comment">#data type settings</span><br>  output_data_type json<br>  compression_codec gzip<br>  <span class="hljs-comment">#producer settings</span><br>  max_send_retries 3 <span class="hljs-comment">#The number of times to retry sending of messages to a leader (default: 1)</span><br>  required_acks 1 <span class="hljs-comment">#</span><br>  ack_timeout 60 <span class="hljs-comment">#How long the producer waits for acks. The unit is seconds.</span><br>&lt;/match&gt;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>harborV1.10.1 共享存储库预演测试</title>
    <url>/2020/03/05/64_harbor2/</url>
    <content><![CDATA[<p>测试环境说明：<br>harbor1<br>IP：10.XX.XX.X1<br>role：harbor、redis、mysql、postgreSQL<br>harbor2<br>IP：10.XX.XX.X2<br>role：harbor、nginx、nfs<br>功能<br>redis： harbor_session<br>mysql： harbor_db<br>posrgreSQL：clair_db<br>nfs： 共享存储盘（测试使用）<br>——————————————<br>环境需求与文档：<br><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/centos/</a><br>[harbor ~]# docker –version<br>Docker version 19.03.6, build 369ce74a3c</p>
<p>python –version<br>Python 2.7.5</p>
<p>安装docker-compose<br><a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">https://github.com/docker/compose/releases</a><br>docker-compose version 1.25.4, build 8d51620a</p>
<p>离线安装包<br><a href="https://github.com/goharbor/harbor/releases/download/v1.10.1/harbor-offline-installer-v1.10.1.tgz" target="_blank" rel="noopener">https://github.com/goharbor/harbor/releases/download/v1.10.1/harbor-offline-installer-v1.10.1.tgz</a><br>harbor-offline-installer-v1.10.1.tgz</p>
<p>v1.10.1初始化postgresql<br><a href="https://github.com/goharbor/harbor/blob/v1.10.1/make/photon/db/initial-registry.sql" target="_blank" rel="noopener">https://github.com/goharbor/harbor/blob/v1.10.1/make/photon/db/initial-registry.sql</a></p>
<p>安装redis<br><a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a></p>
<p>注意事项：<br>docker默认使用https，需要有证书进行配置</p>
<p>这是一个主从复制的案例：<br><a href="https://www.jianshu.com/p/7374f7481d18" target="_blank" rel="noopener">https://www.jianshu.com/p/7374f7481d18</a><br>这个一个k8s集成文档<br><a href="https://my.oschina.net/u/2306127/blog/1819645" target="_blank" rel="noopener">https://my.oschina.net/u/2306127/blog/1819645</a><br>参考文档<br>环境准备：<a href="https://www.cnblogs.com/breezey/p/9444231.html" target="_blank" rel="noopener">https://www.cnblogs.com/breezey/p/9444231.html</a></p>
<p>selinux防火墙关闭<br>host主机解析<br>搭建nfs<br>部署外部redis、mysql<br>环境：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><code class="hljs cs">[<span class="hljs-meta">harbor</span>]<span class="hljs-meta"># getenforce</span><br>Permissive<br>[<span class="hljs-meta">harbor ~ </span>]<span class="hljs-meta"># vim /etc/sysconfig/selinux</span><br>[<span class="hljs-meta">harbor</span>]<span class="hljs-meta">#  systemctl status firewalld</span><br>● firewalld.service - firewalld - <span class="hljs-keyword">dynamic</span> firewall daemon<br>   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)<br>   Active: inactive (dead)<br>     Docs: man:firewalld(<span class="hljs-number">1</span>)<br>[<span class="hljs-meta">harbor ~ </span>]<span class="hljs-meta"># firewall-cmd --state</span><br>not running<br>[<span class="hljs-meta">harbor ~ </span>]<span class="hljs-meta"># python --version</span><br>Python <span class="hljs-number">2.7</span><span class="hljs-number">.5</span><br>[<span class="hljs-meta">harbor ~ </span>]<span class="hljs-meta"># docker --version</span><br>Docker version <span class="hljs-number">19.03</span><span class="hljs-number">.3</span>, build a872fc2f86<br></code></pre></td></tr></table></figure>
<p>安装nfs</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[harbor2 ~]# yum -y install nfs-utils<br>[harbor2 ~]# mkdir /data/images<br>[harbor2 ~]# vim /etc/exports<br>[harbor2 ~]# cat /etc/exports<br>/data/images 10.XX.XX.X2/24(rw,no_root_squash)<br>[harbor2]# systemctl start nfs<br>[harbor2]# systemctl status nfs<br>● nfs-server.service - NFS<span class="hljs-built_in"> server </span><span class="hljs-keyword">and</span> services<br>   Loaded: loaded (/usr/lib/systemd/system/nfs-server.service; disabled; vendor preset: disabled)<br>   Active: active (exited) since 二 2020-02-18 16:33:33 CST; 3s ago<br>  Process: 6650 <span class="hljs-attribute">ExecStartPost</span>=/bin/sh -c <span class="hljs-keyword">if</span> systemctl -q is-active gssproxy; then systemctl reload gssproxy ; fi (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br>  Process: 6633 <span class="hljs-attribute">ExecStart</span>=/usr/sbin/rpc.nfsd <span class="hljs-variable">$RPCNFSDARGS</span> (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br>  Process: 6631 <span class="hljs-attribute">ExecStartPre</span>=/usr/sbin/exportfs -r (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br> Main PID: 6633 (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br>    Tasks: 0<br>   Memory: 0B<br>   CGroup: /system.slice/nfs-server.service<br><br>2月 18 16:33:33 master3 systemd[1]: Starting NFS<span class="hljs-built_in"> server </span><span class="hljs-keyword">and</span> services<span class="hljs-built_in">..</span>.<br>2月 18 16:33:33 master3 systemd[1]: Started NFS<span class="hljs-built_in"> server </span><span class="hljs-keyword">and</span> services.<br></code></pre></td></tr></table></figure>
<p>挂载nfs</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><code class="hljs haskell">[harbor1 ~]# yum -y install nfs-utils<br>[harbor1 ~]# mkdir /<span class="hljs-class"><span class="hljs-keyword">data</span>/images</span><br>[harbor1 ~]# mount <span class="hljs-number">10.</span><span class="hljs-type">XX</span>.<span class="hljs-type">XX</span>.<span class="hljs-type">X2</span>:/<span class="hljs-class"><span class="hljs-keyword">data</span>/images /<span class="hljs-keyword">data</span>/images</span><br>[root@master2 ~]# df -<span class="hljs-type">Th</span> |grep /<span class="hljs-class"><span class="hljs-keyword">data</span>/images</span><br><span class="hljs-number">10.</span><span class="hljs-type">XX</span>.<span class="hljs-type">XX</span>.<span class="hljs-type">X2</span>:/myimages nfs4      <span class="hljs-number">148</span>G   <span class="hljs-number">15</span>G  <span class="hljs-number">128</span>G   <span class="hljs-number">10</span>% /<span class="hljs-class"><span class="hljs-keyword">data</span>/myimages</span><br></code></pre></td></tr></table></figure>
<p>安装mysql客户端</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">yum -y <span class="hljs-keyword">install</span> mysql<br>[harbor]<span class="hljs-comment"># which mysql</span><br>/usr/<span class="hljs-keyword">bin</span>/mysql<br></code></pre></td></tr></table></figure>
<p>docker-compose启动redis和mysql</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[harbor ~]# cat docker-compose.yml<br>version: <span class="hljs-string">'3'</span><br>services:<br><span class="hljs-comment">#  mysql-server:</span><br><span class="hljs-comment">#    hostname: mysql-server</span><br><span class="hljs-comment">#    restart: always</span><br><span class="hljs-comment">#    container_name: mysql-server</span><br><span class="hljs-comment">#    image: mysql:5.7</span><br><span class="hljs-comment">#    volumes:</span><br><span class="hljs-comment">#      - /database/mysql:/var/lib/mysql</span><br><span class="hljs-comment">#    command: --character-set-server=utf8</span><br><span class="hljs-comment">#    ports:</span><br><span class="hljs-comment">#      - '3306:3306'</span><br><span class="hljs-comment">#    environment:</span><br><span class="hljs-comment">#      MYSQL_ROOT_PASSWORD: your_passwd</span><br>  redis:<br>    hostname: redis-server<br>    container_name: redis-server<br>    command: redis-server --requirepass your_passwd(reids一定要加密码，不然就会被挖矿)<br>    restart: always<br>    image: redis:3<br>    volumes:<br>      - /database/redis:/data<br>    ports:<br>      - <span class="hljs-string">'6379:6379'</span><br>  postgres:<br>    hostname: postgres<br>    restart: always<br>    container_name: postgres-server<br>    image: postgres<br>    volumes:<br>      - /database/postgres:/data<br>    ports:<br>      - <span class="hljs-string">'5432:5432'</span><br>    environment:<br>      POSTGRES_PASSWORD: your_passwd<br><br>[root@master2 ~]# docker-compose up -d<br>Creating<span class="hljs-built_in"> network </span><span class="hljs-string">"root_default"</span> with the<span class="hljs-built_in"> default </span>driver<br>Creating redis-server    <span class="hljs-built_in">..</span>. done<br>Creating postgres-server <span class="hljs-built_in">..</span>. done<br>Creating mysql-server    <span class="hljs-built_in">..</span>. done<br>[root@master2 ~]# docker-compose ps<br>     Name                    Command               State                 Ports<br>--------------------------------------------------------------------------------------------<br>mysql-server      docker-entrypoint.sh --cha <span class="hljs-built_in">..</span>.   Up      0.0.0.0:3306-&gt;3306/tcp, 33060/tcp<br>postgres-server   docker-entrypoint.sh postgres    Up      0.0.0.0:5432-&gt;5432/tcp<br>redis-server      docker-entrypoint.sh redis <span class="hljs-built_in">..</span>.   Up      0.0.0.0:6379-&gt;6379/tcp<br></code></pre></td></tr></table></figure>

<p>Mysql导入表结构</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">[root@master2 ~]# mysql -h10.XX.XX.X1 -uroot -p<br>mysql&gt; <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">DATABASE</span> registry <span class="hljs-keyword">DEFAULT</span> <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br>Query OK, <span class="hljs-number">1</span> <span class="hljs-keyword">row</span> affected (<span class="hljs-number">0.00</span> sec)<br>mysql&gt; use registry<br><span class="hljs-keyword">Database</span> changed<br>mysql&gt; <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> schema_migrations(<span class="hljs-keyword">version</span> <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">primary key</span>, dirty <span class="hljs-type">boolean</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>);<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.05</span> sec)<br>mysql&gt; <span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span>;<br>+<span class="hljs-comment">--------------------+</span><br>| Tables_in_registry |<br>+<span class="hljs-comment">--------------------+</span><br>| schema_migrations  |<br>+<span class="hljs-comment">--------------------+</span><br><span class="hljs-number">1</span> <span class="hljs-keyword">row</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure>

<p>postgresql导入表结构</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><code class="hljs lsl">yum install postgresql-server -y<br>[root@master2 ~]# psql -h <span class="hljs-number">10.</span>XX.XX.X1 -p <span class="hljs-number">5432</span>  -U postgres<br>用户 postgres 的口令： kY#<span class="hljs-number">82</span>oYVueDMDA<br>psql (<span class="hljs-number">9.2</span><span class="hljs-number">.24</span>, 服务器 <span class="hljs-number">12.2</span> (Debian <span class="hljs-number">12.2</span><span class="hljs-number">-1.</span>pgdg100+<span class="hljs-number">1</span>))<br>警告：psql 版本<span class="hljs-number">9.2</span>， 服务器版本<span class="hljs-number">12.0</span>.<br>一些psql功能可能无法工作.<br>输入 <span class="hljs-string">"help"</span> 来获取帮助信息.<br><br>postgres=# \i /root/initial-registry.sql<br>CREATE DATABASE<br>psql (<span class="hljs-number">9.2</span><span class="hljs-number">.24</span>, 服务器 <span class="hljs-number">12.2</span> (Debian <span class="hljs-number">12.2</span><span class="hljs-number">-1.</span>pgdg100+<span class="hljs-number">1</span>))<br>警告：psql 版本<span class="hljs-number">9.2</span>， 服务器版本<span class="hljs-number">12.0</span>.<br>一些psql功能可能无法工作.<br>您现在已经连线到数据库 <span class="hljs-string">"registry"</span>,用户 <span class="hljs-string">"postgres"</span>.<br>CREATE TABLE<br></code></pre></td></tr></table></figure>
<p>设置http访问</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[harbor1 ~]# <span class="hljs-builtin-name">find</span> / -name docker.service<br><span class="hljs-comment"># vim /etc/systemd/system/docker.service</span><br><span class="hljs-comment"># ExecStart=/usr/bin/dockerd \</span><br>          <span class="hljs-variable">$DOCKER_OPTS</span> \<br>          <span class="hljs-variable">$DOCKER_STORAGE_OPTIONS</span> \<br>          <span class="hljs-variable">$DOCKER_NETWORK_OPTIONS</span> \<br>          <span class="hljs-variable">$INSECURE_REGISTRY</span> --insecure-registry 10.XX.XX.X1<br><span class="hljs-comment"># systemctl daemon-reload</span><br><span class="hljs-comment"># systemctl restart docker</span><br></code></pre></td></tr></table></figure>
<p>解压启动harbor</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><code class="hljs cs">[<span class="hljs-meta">harbor1 ~</span>]<span class="hljs-meta"># tar -zxvf harbor-offline-installer-v1.10.1.tgz</span><br>harbor/harbor.v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span>.tar.gz<br><br>harbor/prepare<br>harbor/LICENSE<br>harbor/install.sh<br>harbor/common.sh<br>harbor/harbor.yml<br><br>[<span class="hljs-meta">harbor1 ~</span>]<span class="hljs-meta"># vim harbor.yml</span><br>修改hostname、数据库密码、使用了外置数据库打开外置数据库的注释修改IP和密码<br>[<span class="hljs-meta">harbor1 ~</span>]<span class="hljs-meta"># ./prepare</span><br>执行prepare检测启动环境<br>[<span class="hljs-meta">harbor1 ~</span>]<span class="hljs-meta"># ./install.sh</span><br>启动harbor<br></code></pre></td></tr></table></figure>

<p>登录、拉取、上传测试：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">[root@master2</span> <span class="hljs-string">harbor]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">login</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X1</span><br><span class="hljs-attr">Username:</span> <span class="hljs-string">admin</span><br><span class="hljs-attr">Password:</span><br><span class="hljs-string">WARNING!</span> <span class="hljs-string">Your</span> <span class="hljs-string">password</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">stored</span> <span class="hljs-string">unencrypted</span> <span class="hljs-string">in</span> <span class="hljs-string">/root/.docker/config.json.</span><br><span class="hljs-string">Configure</span> <span class="hljs-string">a</span> <span class="hljs-string">credential</span> <span class="hljs-string">helper</span> <span class="hljs-string">to</span> <span class="hljs-string">remove</span> <span class="hljs-string">this</span> <span class="hljs-string">warning.</span> <span class="hljs-string">See</span><br><span class="hljs-string">https://docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><br><span class="hljs-string">Login</span> <span class="hljs-string">Succeeded</span><br><br><span class="hljs-string">[harbor1</span> <span class="hljs-string">harbor]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">tag</span> <span class="hljs-string">admin/test:v1</span>  <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X1/library/admin/test</span><br><span class="hljs-string">[harbor1</span> <span class="hljs-string">harbor]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">push</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X1/library/admin/test</span><br><br><span class="hljs-string">[root@master2</span> <span class="hljs-string">~]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">push</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X1/library/postgres:v2</span><br><span class="hljs-string">The</span> <span class="hljs-string">push</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">repository</span> <span class="hljs-string">[10.XX.XX.X1/library/postgres]</span><br><span class="hljs-attr">0f4c9531c043:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">f2296b808d85:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">428585e93601:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">0b14078a7e74:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">2eb0b93970c9:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">9b95b8eade9b:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">8abf7e1726c6:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">ad5d7aba6303:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">7a1725b13885:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">1bb65a17f346:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">a872403d70e5:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">9129eada97a4:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">efb2aa6f2c78:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">488dfecc21b1:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">v2: digest: sha256:40ebbae0ce4d29eacb5a0ad3ae450f31f089124acdc2cc68b177872f716d0454 size:</span> <span class="hljs-number">3245</span><br><br><br><span class="hljs-string">[harbor</span> <span class="hljs-string">harbor]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">pull</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X2/library/admin/test:v1</span><br><span class="hljs-attr">v1:</span> <span class="hljs-string">Pulling</span> <span class="hljs-string">from</span> <span class="hljs-string">library/admin/test</span><br><span class="hljs-attr">bc51dd8edc1b:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">d2b355dbb6c6:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">d237363a1a91:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">ff4b9d2fde66:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">646492d166e7:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">50eeac6fd5fb:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">502963de6da8:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">d7263f7627b9:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">d234d8f1a205:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">1b2c24e5275c:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">3f7c6dd9a7ae:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">d6d6977a74b3:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">acf1093f8b78:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">77e1ac8c247a:</span> <span class="hljs-string">Pull</span> <span class="hljs-string">complete</span><br><span class="hljs-attr">Digest:</span> <span class="hljs-string">sha256:40ebbae0ce4d29eacb5a0ad3ae450f31f089124acdc2cc68b177872f716d0454</span><br><span class="hljs-attr">Status:</span> <span class="hljs-string">Downloaded</span> <span class="hljs-string">newer</span> <span class="hljs-string">image</span> <span class="hljs-string">for</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X2/library/admin/test:v1</span><br><span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X2/library/admin/test:v1</span><br><span class="hljs-string">[harbor</span> <span class="hljs-string">harbor]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">images</span> <span class="hljs-string">|grep</span> <span class="hljs-string">test</span><br><span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X2/library/admin/test</span>   <span class="hljs-string">v1</span>                               <span class="hljs-string">0d2531ee3abd</span>        <span class="hljs-number">5</span> <span class="hljs-string">days</span> <span class="hljs-string">ago</span>          <span class="hljs-string">397MB</span><br><br><span class="hljs-string">[harbor</span> <span class="hljs-string">~]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">tag</span> <span class="hljs-string">goharbor/prepare:v1.10.1</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X2/library/admin/test:v2</span><br><span class="hljs-string">[harbor</span> <span class="hljs-string">~]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">push</span> <span class="hljs-number">10.</span><span class="hljs-string">XX.XX.X2/library/admin/test:v2</span><br><span class="hljs-string">The</span> <span class="hljs-string">push</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">repository</span> <span class="hljs-string">[10.XX.XX.X2/library/admin/test]</span><br><span class="hljs-attr">bf5ac9b9c61c:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">06e0f1585c01:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">3710d94e58dd:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">5c5501748347:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">f59c6315bf8a:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">fb3507ff707e:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">93e0577272a9:</span> <span class="hljs-string">Pushed</span><br><span class="hljs-attr">v2: digest: sha256:e025a09df19c99e0afb4b116cbd698d5de27fb39e26314934460c7bae7c21afc size:</span> <span class="hljs-number">1787</span><br></code></pre></td></tr></table></figure>


<p>Harbor预演测试过程<br>目前测试进度：</p>
<ol>
<li>搭建 v1.10.1（harbor最新版本），单节点使用内置postgresql，和本地磁盘存储，测试成功</li>
<li>搭建 v1.10.1 使用外置mysql、postgresql、redis（全部docker-compose启动）harbor服务启动后不能登录，发现该版本不支持外置mysql（查阅官方文档<a href="https://github.com/goharbor/harbor/blob/master/docs/1.10/install-config/configure-yml-file.md显示目前该版本外置数据库仅支持postgresql），服务启动后redis" target="_blank" rel="noopener">https://github.com/goharbor/harbor/blob/master/docs/1.10/install-config/configure-yml-file.md显示目前该版本外置数据库仅支持postgresql），服务启动后redis</a> auth认证有问题</li>
<li>搭建 v1.10.1 更改外置数据库为postgresql，redis使用手动搭建方式进行单点测试，搭建、测试拉取、推送镜像成功</li>
<li>版本 v1.10.0 和v1.8.0 经过查阅github文档、启动测试，该版本不支持外置mysql，目前仅支持postpresql  </li>
<li>搭建 v1.10.1 外接数据库 postpres、redis ，2个harbor节点构成集群共享存储，搭建、测试拉取、推送镜像成功</li>
</ol>
<p>还需继续研究项：</p>
<ol>
<li>研究https认证</li>
<li>研究nginx keeplive 分流</li>
<li>版本 v1.5.4（发于2018.1.29版本）支持外置mysql，尝试搭建v1.5.4进行测试和调研</li>
<li>继续研究最新版harbor集群postgresql容灾方式</li>
</ol>
<p>常用版本列举对比 <a href="https://github.com/goharbor/harbor/releases：" target="_blank" rel="noopener">https://github.com/goharbor/harbor/releases：</a><br>版本：v1.10<br>发版时间：2019.12.13<br>新功能对比：<br>外部数据库仅支持postgresql<br>支持第三方漏洞扫描程序<br>新增项目配置规则<br>管理员和用户增加功能，新增了“受限访客”用户<br>增强OIDC功能，复制功能增强<br>问题：<br>v1.10.0 job中有正在运行的任务，当redis重启后，任务被冻结，需点击重试恢复，后续补丁修复<br>v1.10.1 修复了1.9.3版本拉取镜像等<a href="https://github.com/goharbor/harbor/issues?q=is%3Aissue+label%3Atarget%2F1.10.1+is%3Aclosed" target="_blank" rel="noopener">https://github.com/goharbor/harbor/issues?q=is%3Aissue+label%3Atarget%2F1.10.1+is%3Aclosed</a><br>优缺点：<br>目前最新版，修复了旧版本的bug，增加了新的功能<br>统一了配置文件</p>
<p>版本：v1.8<br>发版时间：2019.5.21<br>新功能对比：<br>外部数据库仅支持postgresql<br>支持OIDC，使用外部验证验证身份<br>扩展了镜像复制功能<br>新增机器人账户<br>新增非harbor存储库之间互相复制镜像<br>问题：<br>复制策略标签过滤器丢失<br>不支持清单<br>某些情况下redis持久化数据巨大问题<br>优缺点：<br>查看官方文档和网上博客反馈，存在一些bug<br>配置文件也是统一的修改配置文件启动方式简单</p>
<p>版本：v1.5<br>发版时间：2018.10.26<br>新功能对比：<br>外部数据库支持mysql<br>升级Clair<br>NVD迁移至AWS<br>添加了镜像标签过滤器<br>添加LDAP组<br>用户可以为镜像添加标签<br>新增仓库只读模式<br>问题：<br>1.5.0  存在镜像标签问题，镜像复制签名问题<br>1.5.4 修复了前面几个版本的bug，不支持在线安装，支持离线安装<br><a href="https://github.com/goharbor/harbor/releases/tag/v1.5.4" target="_blank" rel="noopener">https://github.com/goharbor/harbor/releases/tag/v1.5.4</a><br>优缺点：<br>1.5.4支持外置mysql<br>1.5之后的版本，添加了新的功能，mysql换为postgresql，官方文档显示是将多个mysql迁移为统一的postgresql方便管理</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏排错总结</title>
    <url>/2017/12/01/5_%E6%9E%81%E6%97%A0%E5%8F%8C%E6%8E%92%E9%94%99%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>游戏大区ID 版本号 ——&gt; auth ——&gt; cdn ——&gt; notice ——&gt; s3拿公告</p>
<p>#####Notice问题<br>http_prot   习惯上为外网端口，需检查Iptables、S3_bucket_notice     S3公告地址、Region、AWS权限<br>Notice检查地址</p>
<h5 id="Gmtools问题"><a href="#Gmtools问题" class="headerlink" title="Gmtools问题"></a>Gmtools问题</h5><p>GidFilter    GMtools上的shard相关<br>ElasticUrl     GMtool充值查询现相关<br>S3_buckets_verupdate    更新跳转，两个文件需检查S3上是否存在<br>S3_gonggao_region    S3公告上传相关</p>
<p>GMtools上公告<br>   endpoint  Auth地址<br>   支付URL</p>
<p>#####Auth问题<br>inner_experience   白名单开关<br>verupdate_valid        需要与Gmtools里一致<br><a href="http://authhost:port/tools/echoip">http://authhost:port/tools/echoip</a>   #不能使用ELB的DNS<br>gmhttpport        反作弊与gamex通信端口<br>httpport        对外服务端口<br>LimitConfig        白名单开关<br>@注意空格<br>data  Bundle 客户端更新卡40%之前，可以再Gmtools上去掉data和Bundle试试<br>卡40%客户端和服务器不兼容</p>
<p>#####Gamex问题<br>run_mode<br>publicip    aws提供的接口，服务器使用，获取aws的外网IP<br>listen        外网提供服务端口<br>ban_rul        需要与gmtools中端口一直才可以禁用账户<br>hot_data_url    热更，与S3相关<br>match           match地址检查<br>match_token        三英匹配<br>Gidinfo            对应大区更改</p>
<p>#####Pay问题<br>支付（和服务器确认怎么填下面的，确定好正确URL）<br>    default<br>    QuickMubao<br>    port1<br>    port2<br>    port3<br>    @注意空格<br>    logiclog.xml    注意命名不能重复</p>
<p>#####Match问题<br>url   对应gamex中的match</p>
<p>####Multiplay问题<br>match_token    与gamex一致<br>@所有data文件需要确认一致</p>
<p>#####Crossservice问题<br>shard_range        注意渠道测试服和正式服范围</p>
<p>#####Chat问题<br>需要外网端口放开</p>
<p>#####渠道问题<br>Run_mode渠道测试服是channel<br>auth:inner_experience = true<br>标签是体验</p>
<p>#####数更热更问题<br>服务器数更   –&gt; 需要重启服务器<br>服务器热更   –&gt; teamcity   –&gt;  不停服（在gmtools上的数据版本）<br>客户端bundle   —&gt; 文字图片<br>客户端数更</p>
<p>#####DynamoDB问题<br>mail表收发邮件容量<br>会影响充值丢单</p>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP NFS</title>
    <url>/2018/03/21/7_Linuxftp/</url>
    <content><![CDATA[<p>###FTP<br>yum -y install vsftpd<br>vim /etc/vsftpd/vsftpd.conf<br>anonymous_enable=NO #不允许匿名用户<br>local_root=/var/ftp1<br>chroot_list_enable=yes 启用不锁定用户在主目录的名单<br>listen_address=100.10.10.169 设置ftp服务来监听的地址，客户端可以用哪个地址来连接<br>创建用户ftpuser<br>useradd ftpusr1<br>设置用户只能ftp不能登入<br>usermod -s /sbin/nologin ftpuser1<br>设置用户密码<br>passwd ftpusr1<br>修改用户的家目录位<br>usermod -d /home/vsftpd ftpuser1</p>
<p>上传下载就是 读写权限<br>setfacl -m u:用户名:rwx 上传目录<br>不想架设DNS在HOST文件中写一条记录</p>
<p>###NFS<br>yum -y install nfs-utils rpcbind<br>mkdir /var/test<br>mkdir /var/tmp<br>chmod 777 /var/tmp</p>
<p>vim /etc/exports</p>
<p>/var/test 100.10.10.0/24(rw,no_root_squash,no_all_squash,sync)<br>/var/tmp * (rw,no_root_squash,no_all_squash,sync)<br>exportfs -r</p>
<p>service rpcbind start</p>
<p>service nfs start</p>
<p>useradd nfsuser</p>
<p>showmount -e localhost</p>
<p>mount -t  nfs 100.10.10.0:/var/test /home/nfsuser/1</p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title>部署镜像服流程</title>
    <url>/2017/12/07/6_%E9%95%9C%E5%83%8F%E6%9C%8D%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>#####【初始化环境】<br>     - redis<br>     - ardb<br>     - basics<br>     - mirrors<br>     - gamex-facts<br>     - kunik.system-limits<br>     - supervisor<br>     - gamex-dnsupdater<br>     - aws-public-key<br>     - mirrors-python<br>     - redis-slave<br>     - dnsupdater</p>
<p>#####【准备镜像服】</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><code class="hljs excel">根据QA与运营提供的区服，先确定区服信息<br>清理镜像服redis和ardb的旧数据<br>导目标数据库<span class="hljs-built_in">db</span>到镜像服<br>修改playbook中的etcd信息（包括gid，shardid，<span class="hljs-built_in">db</span>，port）并注册<br>修改groovy脚本，添加目标区服的部署配置并刷到Jenkins<br>注册sn码<br>配置目标区服的<span class="hljs-built_in">fact</span>并使之生效<br>jenkins上进行部署<br>查看gmtools配置并在gmtools上设置服务器上线<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>graphite安装</title>
    <url>/2018/04/25/8_graphite%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>#####环境准备</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum install gcc python27-devel.x86_64 python-devel  -y</span><br><span class="hljs-meta"># yum install cairo pango gdk-pixbuf -y</span><br><span class="hljs-meta"># yum install libffi libffi-devel -y</span><br></code></pre></td></tr></table></figure>

<p>#####安装go-carbon</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># wget https://github.com/lomik/go-carbon/releases/download/v0.12.0/go-carbon-0.12.0-1.x86_64.rpm</span><br><span class="hljs-meta"># rpm -ivh go-carbon-0.12.0-1.x86_64.rpm</span><br><span class="hljs-meta"># /etc/init.d/go-carbon start</span><br></code></pre></td></tr></table></figure>

<p>#####安装graphite-web</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"># pip install --<span class="hljs-keyword">no</span>-binary=:<span class="hljs-keyword">al</span><span class="hljs-variable">l:</span> http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/graphite-project/whisper/tarball/master<br># pip install --<span class="hljs-keyword">no</span>-binary=:<span class="hljs-keyword">al</span><span class="hljs-variable">l:</span> http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/graphite-project/graphite-web/tarball/master<br># pip install --<span class="hljs-keyword">no</span>-binary=:<span class="hljs-keyword">al</span><span class="hljs-variable">l:</span> http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/graphite-project/carbon/tarball/master<br># pip install whisper<br># pip install bottle<br># pip install uwsgi<br># yum install nginx<br></code></pre></td></tr></table></figure>

<p>#####配置文件</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"># <span class="hljs-keyword">cd</span> /<span class="hljs-keyword">opt</span>/graphite/<span class="hljs-keyword">conf</span>/<br># <span class="hljs-keyword">cp</span> storage-schemas.<span class="hljs-keyword">conf</span>.example  storage-schemas.<span class="hljs-keyword">conf</span><br># <span class="hljs-keyword">cat</span> &lt;&lt; EOF &gt; /<span class="hljs-keyword">opt</span>/graphite/<span class="hljs-keyword">conf</span>/uwsgi.ini<br>&gt; [uwsgi]<br>[uwsgi]<br>socket = /<span class="hljs-keyword">opt</span>/graphite/<span class="hljs-keyword">conf</span>/uwsgi.sock<br>workers = <span class="hljs-number">2</span><br>#workers = <span class="hljs-number">4</span> cpu的核心数<br>master = true<br>pythonpath = /<span class="hljs-keyword">opt</span>/graphite/webapp/graphite<br>wsgi-<span class="hljs-keyword">file</span> = /<span class="hljs-keyword">opt</span>/graphite/<span class="hljs-keyword">conf</span>/graphite.wsgi<br>pidfile = /<span class="hljs-keyword">opt</span>/graphite/<span class="hljs-keyword">conf</span>/uwsgi.pid<br>daemonize = /<span class="hljs-keyword">opt</span>/graphite/logs/graphite.<span class="hljs-built_in">log</span><br>disable-logging = <span class="hljs-number">1</span><br>stats = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">1717</span><br>EOF<br># <span class="hljs-keyword">cp</span> graphite.wsgi.example graphite.wsgi<br># <span class="hljs-built_in">mkdir</span> -<span class="hljs-keyword">p</span> /<span class="hljs-keyword">opt</span>/graphite/logs<br># /usr/local/bin/uwsgi --ini /<span class="hljs-keyword">opt</span>/graphite/<span class="hljs-keyword">conf</span>/uwsgi.ini<br></code></pre></td></tr></table></figure>

<p>#####nginx</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cat</span> &lt;&lt; EOF &gt; /etc/nginx/conf.d/graphite.conf<br>upstream django &#123;<br>    <span class="hljs-attribute">server</span> unix:///opt/graphite/conf/uwsgi.sock; <span class="hljs-comment"># for a file socket</span><br>&#125;<br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>      <span class="hljs-number">8001</span>;<br>    <span class="hljs-comment">#server_name .example.com; # substitute your machine's IP address or FQDN</span><br>    <span class="hljs-attribute">charset</span>     utf-<span class="hljs-number">8</span>;<br>    <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">75M</span>;   <span class="hljs-comment"># adjust to taste</span><br><br>    <span class="hljs-attribute">location</span> /static &#123;<br>        <span class="hljs-attribute">alias</span> /opt/graphtie/webapp/content; <span class="hljs-comment"># your Django project's static files - amend as required</span><br>    &#125;<br>    <span class="hljs-attribute">location</span> /static/admin &#123;<br>        <span class="hljs-attribute">alias</span> /opt/graphtie/webapp/static/admin; <span class="hljs-comment"># your Django project's static files - amend as required</span><br>    &#125;<br>    <span class="hljs-attribute">location</span> / &#123;<br>                   <span class="hljs-attribute">auth_basic</span>            <span class="hljs-string">"Restricted Area"</span>;<br>       <span class="hljs-comment"># auth_basic_user_file  /etc/nginx/conf.d/htppasswd;</span><br>        <span class="hljs-attribute">uwsgi_pass</span>  django;<br>        <span class="hljs-attribute">include</span>     uwsgi_params; <span class="hljs-comment"># the uwsgi_params file you installed</span><br>    &#125;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>      <span class="hljs-number">8002</span>;<br>    <span class="hljs-attribute">charset</span>     utf-<span class="hljs-number">8</span>;<br>    <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">75M</span>;   <span class="hljs-comment"># adjust to taste</span><br>    <span class="hljs-attribute">allow</span> <span class="hljs-number">127.0.0.1</span>;<br>    <span class="hljs-attribute">deny</span> all;<br>    <span class="hljs-attribute">location</span> /static &#123;<br>        <span class="hljs-attribute">alias</span> /opt/graphtie/webapp/content;<br>    &#125;<br>    <span class="hljs-attribute">location</span> /static/admin &#123;<br>        <span class="hljs-attribute">alias</span> /opt/graphite/webapp/static/admin;<br>    &#125;<br>    <span class="hljs-attribute">location</span> / &#123;<br>        <span class="hljs-attribute">uwsgi_pass</span>  django;<br>        <span class="hljs-attribute">include</span>     uwsgi_params; <span class="hljs-comment"># the uwsgi_params file you installed</span><br>    &#125;<br>&#125;<br><br>EOF<br><span class="hljs-comment"># /etc/init.d/nginx start</span><br></code></pre></td></tr></table></figure>

<p>#####初始化数据库 (有问题)</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><code class="hljs vim"># <span class="hljs-keyword">find</span> / -name django-admin.<span class="hljs-keyword">py</span><br># PYTHONPATH=/<span class="hljs-keyword">opt</span>/graphite/webapp /usr/local/bin/django-admin.<span class="hljs-keyword">py</span> collectstatic --noinput --settings=graphite.settings<br># mv local_settings.<span class="hljs-keyword">py</span>.example  local_settings.<span class="hljs-keyword">py</span><br># PYTHONPATH=/<span class="hljs-keyword">opt</span>/graphite/webapp /usr/local/bin/django-admin.<span class="hljs-keyword">py</span> migrate --settings=graphite.settings --run-syncdb<br># PYTHONPATH=/<span class="hljs-keyword">opt</span>/graphite/webapp /usr/local/bin/django-admin.<span class="hljs-keyword">py</span> collectstatic --noinput --settings=graphite.settings<br># /<span class="hljs-keyword">opt</span>/graphite/bin/run-graphite-devel-server.<span class="hljs-keyword">py</span> --libs=/<span class="hljs-keyword">opt</span>/graphite/webapp/ /<span class="hljs-keyword">opt</span>/graphite/ &amp;<br></code></pre></td></tr></table></figure>

<p>#####grafana</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum install initscripts fontconfig -y</span><br><span class="hljs-meta"># yum install urw-fonts -y</span><br><span class="hljs-meta"># rpm -ivh grafana-5.0.4-1.x86_64.rpm</span><br><span class="hljs-meta"># /etc/init.d/grafana-server start</span><br></code></pre></td></tr></table></figure>

<p>#####collectd</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum install collectd -y</span><br><span class="hljs-meta"># cd /etc/collectd.d/</span><br><span class="hljs-meta"># cat df.conf</span><br>LoadPlugin df<br>&lt;Plugin df&gt;<br>       IgnoreSelected <span class="hljs-literal">false</span><br>       ReportByDevice <span class="hljs-literal">false</span><br>       ReportReserved <span class="hljs-literal">false</span><br>       ReportInodes <span class="hljs-literal">false</span><br>       ValuesPercentage <span class="hljs-literal">true</span><br>&lt;/Plugin&gt;<br><span class="hljs-meta"># cat graphite.conf</span><br>LoadPlugin write_graphite<br>&lt;Plugin write_graphite&gt;<br>  &lt;Node <span class="hljs-string">"dev"</span>&gt;<br>    Host <span class="hljs-string">"10.17.0.206"</span><br>    Port <span class="hljs-string">"2003"</span><br>    Protocol <span class="hljs-string">"udp"</span><br>    LogSendErrors <span class="hljs-literal">true</span><br>    Prefix <span class="hljs-string">"collectd."</span><br>    #Postfix <span class="hljs-string">"collectd"</span><br>    SeparateInstances <span class="hljs-literal">true</span><br>    StoreRates <span class="hljs-literal">true</span><br>    AlwaysAppendDS <span class="hljs-literal">false</span><br>    EscapeCharacter <span class="hljs-string">"_"</span><br>  &lt;/Node&gt;<br>&lt;/Plugin&gt;<br><span class="hljs-meta"># /etc/init.d/collectd start</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>监控</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏服务器TLS实践</title>
    <url>/2020/04/15/lbb01-tls/</url>
    <content><![CDATA[<!-- 注：给男票开的博客专题，男票看我发博客还想让我帮他买服务器搭建（日结工资的话就给你干╭(╯^╰)╮），因为没有工资，遂发到自己博客上，因为工作时间越久有些知识点不经常梳理真的会忘记，还是要支持下男票梳理自己的知识点(#小声bb#毕竟男票挣得钱钱越来越多我就可以肆无忌惮的裸辞躺尸(。-ω-)zzz -->

<p>#游戏服务器TLS实践</p>
<p>客户端和服务器的TCP通信需要加密， 这里首选TLS（Transport Layer Security <strong>传输层安全性协议</strong>）</p>
<blockquote>
<p>安全传输层协议（TLS）用于在两个通信应用程序之间提供保密性和数据完整性。</p>
</blockquote>
<h3 id="TLS原理浅析"><a href="#TLS原理浅析" class="headerlink" title="TLS原理浅析"></a>TLS原理浅析</h3><p>TLS可以防止数据交换时被<strong>窃听</strong>和<strong>篡改</strong></p>
<blockquote>
<p>The TLS protocol aims primarily to provide privacy and data integrity between two or more communicating computer applications.</p>
</blockquote>
<ol>
<li><p>每个连接都会独立生成秘钥对传输数据进行加密， 生成秘钥的过程就是<strong>TLS握手</strong></p>
</li>
<li><p>为了保证秘钥不被窃听和修改， 我们需要对秘钥生成的过程进行加密</p>
<p>通信双方通过交换一个密文，通过这个密文来生成秘钥。TLS使用RSA来交换密文<br>客户端随机生成一个数， 使用公钥加密， 服务器使用私钥解密</p>
<blockquote>
<p>RSA加密算法是一种非对称加密算法。加密密钥（即公开密钥）PK是公开信息，而解密密钥（即秘密密钥）SK是需要保密的。加密算法E和解密算法D也都是公开的。虽然解密密钥SK是由公开密钥PK决定的，由于无法计算出大数n的欧拉函数phi(N)，所以不能根据PK计算出SK。</p>
</blockquote>
<p>之所以使用RSA来进行加密随机数， 而不是整个通信数据， 是因为</p>
<blockquote>
<p>由于进行的都是大数计算，使得RSA最快的情况也比DES慢上好几倍，无论是软件还是硬件实现。速度一直是RSA的缺陷。一般来说只用于少量数据加密。RSA的速度是对应同样安全级别的对称密码算法的1/1000左右。</p>
</blockquote>
<p>使用证书认证(CA, certificate authority)防止中间人攻击。</p>
</li>
<li><p>对称加密算法有很多， TLS为了扩展性， 通信双发在一开始需要交换各自支持的加密算法， 然后选取一个双方都支持的算法。</p>
</li>
</ol>
<p>下面使用流程图来解析整个握手过程</p>
<p><a href="https://postimg.cc/N515bqyv" target="_blank" rel="noopener"><img src="https://i.postimg.cc/HsNXYTdn/lbb-001-tls.png" alt="lbb-001-tls.png"></a></p>
<p>###go代码实践</p>
<p>#####服务器代码</p>
<figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>	cert, err := tls.LoadX509KeyPair(<span class="hljs-string">"server.crt"</span>, <span class="hljs-string">"server.key"</span>)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br><br>	certPEMBlock, err := ioutil.ReadFile(<span class="hljs-string">"ca.crt"</span>)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br>	capool := x509.NewCertPool()<br>	capool.AppendCertsFromPEM(certPEMBlock)<br><br>	cfg := &amp;tls.Config&#123;<br>		Certificates: []tls.Certificate&#123;cert&#125;,<br>		ClientCAs:capool,<br>		ClientAuth: tls.RequireAndVerifyClientCert,<br>	&#125;<br>	listener, err := tls.Listen(<span class="hljs-string">"tcp"</span>, <span class="hljs-string">":2000"</span>, cfg)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br><br>	<span class="hljs-keyword">for</span> &#123;<br>		conn, err := listener.Accept()<br>		<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>			<span class="hljs-built_in">println</span>(err.Error())<br>			<span class="hljs-keyword">continue</span><br>		&#125;<br>		<span class="hljs-keyword">go</span> <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123;<br>			txtReader := textproto.NewReader(bufio.NewReader(conn))<br>			line, err := txtReader.ReadLine()<br>			<span class="hljs-built_in">println</span>(line)<br>			<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>				<span class="hljs-built_in">println</span>(err.Error())<br>				<span class="hljs-keyword">return</span><br>			&#125;<br><br>			textWriter := textproto.NewWriter(bufio.NewWriter(conn))<br>			err = textWriter.PrintfLine(<span class="hljs-string">"OK\n"</span>)<br>			<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>				<span class="hljs-built_in">println</span>(err.Error())<br>				<span class="hljs-keyword">return</span><br>			&#125;<br>		&#125;()<br>	&#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>######LoadX509KeyPair</p>
<p>加载成对的秘钥, 私钥: server.key,  证书: server.crt</p>
<blockquote>
<p>LoadX509KeyPair reads and parses a public/private key pair from a pair of files. The files must contain PEM encoded data</p>
</blockquote>
<p><strong>server.key</strong>里的内容就是RSA中的私钥， 可以用以下命令获取(openssl命令的具体参数可以用man openssl查看)</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">openssl genrsa -<span class="hljs-keyword">out</span> server.key <span class="hljs-number">1024</span><br></code></pre></td></tr></table></figure>

<blockquote>
<p>The genrsa command generates an RSA private key, which essentially involves the generation of two prime numbers.</p>
</blockquote>
<p><strong>server.crt</strong>是RSA中的证书， 是用CA的私钥对公钥和相关信息进行签名生成的证书，从证书里面可以拿到公钥</p>
<p>server.crt的生成过程分为两步</p>
<p>生成证书请求， 这一步就是用私钥和用户信息生成一份证书请求信息server.csr</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">openssl req -<span class="hljs-built_in">new</span> -key <span class="hljs-keyword">server</span>.key -<span class="hljs-keyword">out</span> <span class="hljs-keyword">server</span>.csr -subj "/C=CN/ST=GZ/L=ZH/O=KSS/OU=KSS/CN=xxx/emailAddress=xxx@xxx"<br></code></pre></td></tr></table></figure>

<blockquote>
<p>The req command primarily creates and processes certificate requests in PKCS#10 format.  It can additionally create self-signed certificates, for use as root CAs, for example.</p>
</blockquote>
<p>然后根据server.csr和ca私钥生成证书server.crt</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">openssl</span> <span class="hljs-selector-tag">ca</span> <span class="hljs-selector-tag">-in</span> <span class="hljs-selector-tag">server</span><span class="hljs-selector-class">.csr</span> <span class="hljs-selector-tag">-cert</span> <span class="hljs-selector-tag">ca</span><span class="hljs-selector-class">.crt</span> <span class="hljs-selector-tag">-keyfile</span> <span class="hljs-selector-tag">ca</span><span class="hljs-selector-class">.key</span> <span class="hljs-selector-tag">-out</span> <span class="hljs-selector-tag">server</span><span class="hljs-selector-class">.crt</span> <span class="hljs-selector-tag">-days</span> 3650<br></code></pre></td></tr></table></figure>
<blockquote>
<p>The ca command is a minimal certificate authority (CA) application.  It can be used to sign certificate requests in a variety of forms and generate certificate revocation lists (CRLs).</p>
</blockquote>
<p>Certificates 存放多个证书链， 是用来在TLS握手阶段交换证书用的。<br>######ClientCAs ClientAuth 服务器验证客户端证书</p>
<p>ClientCAs是服务器用来存储验证客户端证书的一组根CA证书</p>
<blockquote>
<p>ClientCAs defines the set of root certificate authorities that servers use if required to verify a client certificate by the policy in ClientAuth.</p>
</blockquote>
<p>证书之间是链式关系， 比如是用证书A签名证书B， 如果我们信任证书A， 那么也会信任证书B。在上述代码中我们把ca证书（ca.crt）设置为根证书，表明我们信任ca证书。服务器在握手阶段拿到客户端的证书, 看其证书链是否受信任（用ca公钥解密，如果成功说明是用根证书签发的）。</p>
<p>根证书一般来自于权威机构。当前也可以自签发生成根证书</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><code class="hljs stata"># cakey 和 <span class="hljs-keyword">ca</span>.csr 和之前的生成方式一样<br>openssl x509 -req -days 365 -sha1 -extensions v3_ca -signkey cakey.pem<br>-<span class="hljs-keyword">in</span> <span class="hljs-keyword">ca</span>.csr -<span class="hljs-keyword">out</span> certs/<span class="hljs-keyword">ca</span>.cer<br></code></pre></td></tr></table></figure>

<p>#####客户端代码</p>
<figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>	cert, err := tls.LoadX509KeyPair(<span class="hljs-string">"client.crt"</span>, <span class="hljs-string">"client.key"</span>)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br><br>	certPEMBlock, err := ioutil.ReadFile(<span class="hljs-string">"ca.crt"</span>)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br>	capool := x509.NewCertPool()<br>	capool.AppendCertsFromPEM(certPEMBlock)<br><br>	cfg := &amp;tls.Config&#123;<br>		Certificates: []tls.Certificate&#123;cert&#125;,<br>		RootCAs:capool,<br>		ServerName:<span class="hljs-string">"xxxxx"</span>,<br>		<span class="hljs-comment">//InsecureSkipVerify:true,</span><br>	&#125;<br><br>	conn, err := tls.Dial(<span class="hljs-string">"tcp"</span>, <span class="hljs-string">"localhost:2000"</span>, cfg)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br><br>	textWriter := textproto.NewWriter(bufio.NewWriter(conn))<br>	err = textWriter.PrintfLine(<span class="hljs-string">"hello world\n"</span>)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">panic</span>(err)<br>	&#125;<br><br>	txtReader := textproto.NewReader(bufio.NewReader(conn))<br>	line, err := txtReader.ReadLine()<br>	<span class="hljs-built_in">println</span>(line)<br>	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>		<span class="hljs-built_in">println</span>(err.Error())<br>		<span class="hljs-keyword">return</span><br>	&#125;<br>	conn.Close()<br>&#125;<br></code></pre></td></tr></table></figure>
<p>RootCAs是用来验证服务器的证书的一组根证书<br>ServerName验证服务器的主机名</p>
]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>TLS</tag>
      </tags>
  </entry>
  <entry>
    <title>elasticsearch &amp; 记一次线上elasticsearch常用操作</title>
    <url>/2018/05/05/9_elasticsearch/</url>
    <content><![CDATA[<p>因线上服务产生的数据太多太大并且占用服务器内存，导致kibana经常查询失败和丢数据，将一部分不常用时间比较久的数据索引关闭，当运营需要查询某一天的数据时，将某一天的索引打开</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>ip <span class="hljs-number">10.</span>x.x.x ]# curl -X POST <span class="hljs-string">"http://10.x.x.x:9200/kbilogs-logics-gamex*2018.11.28/_open"</span><br>&#123;<span class="hljs-string">"acknowledged"</span>:<span class="hljs-literal">true</span>,<span class="hljs-string">"shards_acknowledged"</span>:<span class="hljs-literal">true</span>&#125;<br>[<span class="hljs-symbol">root@</span>ip <span class="hljs-number">10.</span>x.x.x ec2-user]# curl -X POST <span class="hljs-string">"http://10.x.x.x:9200/kbilogs-logics-gamex*2018.11.28/_open"</span>                                   <span class="hljs-number">10.</span>x.x.x:<span class="hljs-number">9200</span>/_cat/indices |grep <span class="hljs-number">2018.11</span><span class="hljs-number">.28</span><br>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current<br>                                 Dload  Upload   Total   Spent    Left  Speed<br>  <span class="hljs-number">0</span>     <span class="hljs-number">0</span>    <span class="hljs-number">0</span>     <span class="hljs-number">0</span>    <span class="hljs-number">0</span>     <span class="hljs-number">0</span>      <span class="hljs-number">0</span>      <span class="hljs-number">0</span> --:--:--  <span class="hljs-number">0</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span> --:--:--     <span class="hljs-number">0</span>      close kbilogs-logics-crosservice<span class="hljs-number">-201.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       SSJwkFtdRym7iFh9sqo7IQ<br>      close kbilogs-logics-clientbilog<span class="hljs-number">.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>           yv10GRdrQeCsA9EsqVt4dw<br>      close kbilogs-logics-multiplayer<span class="hljs-number">-200.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       ZzZJrdRSQRet7ne8BQ7MWQ<br><span class="hljs-number">100</span>      close kbilogs-logics-pay<span class="hljs-number">-203.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>               qtt0qUuBTyCaoEdMeonJag<br> <span class="hljs-number">90083</span>        close kbilogs-logics-multiplayer<span class="hljs-number">-204.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       U1Ankh0ITuSmCXyyAcJieA<br><span class="hljs-number">100</span> <span class="hljs-number">90083</span>    <span class="hljs-number">0</span>     <span class="hljs-number">0</span>  <span class="hljs-number">70282</span>      <span class="hljs-number">0</span>  <span class="hljs-number">0</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>  <span class="hljs-number">0</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span> --:--:-- <span class="hljs-number">70322</span><br>green open  kbilogs-logics-gamex<span class="hljs-number">-200.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>             zV0dvfrQTe2W00MlCWaJyA <span class="hljs-number">5</span> <span class="hljs-number">2</span>  <span class="hljs-number">6399950</span>      <span class="hljs-number">0</span>   <span class="hljs-number">5.3</span>gb   <span class="hljs-number">1.7</span>gb<br>      close kbilogs-logics-pay<span class="hljs-number">-200.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>               wRPBdg6EQcq28nZZ3Qqd8Q<br>      close kbilogs-logics-crosservice<span class="hljs-number">-200.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       oazIKDxlQTOqEfPbMd725w<br>      close kbilogs-logics-multiplayer<span class="hljs-number">-202.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       DuB4TE8gSS-s-y08lT3Kxg<br>      close kbilogs-logics-pay<span class="hljs-number">-202.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>               YHbnaAOERXeg5WgN5h9Xvg<br>      close kbilogs-logics-pay<span class="hljs-number">-201.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>               v72XCxeTQKqevBJbjV6FFw<br>      close kbilogs-logics-anticheat_multiplayer<span class="hljs-number">.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span> K9nSkoVrR0WLXF9GrP6YuQ<br>      close kbilogs-logics-multiplayer<span class="hljs-number">-201.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       sSZYkoKjQUCXheozZIdcYA<br>      close kbilogs-logics-crosservice<span class="hljs-number">-204.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       <span class="hljs-number">20</span>QOeBX6R0GDP3lY_3YTFg<br>      close kbilogs-logics-pay<span class="hljs-number">-204.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>               ndGv-L2vRkynHkioT9XPDg<br>green open  kbilogs-logics-gamex<span class="hljs-number">-203.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>             PnsR_1pfQd2ZFwqEapQ-uA <span class="hljs-number">5</span> <span class="hljs-number">2</span>   <span class="hljs-number">684706</span>      <span class="hljs-number">0</span> <span class="hljs-number">566.1</span>mb <span class="hljs-number">188.7</span>mb<br>      close kbilogs-logics-crosservice<span class="hljs-number">-202.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       kzLaaXyXTDGO8cUk0s-GdQ<br>      close kbilogs-logics-auth<span class="hljs-number">.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>                  <span class="hljs-number">8</span>EqyrF4SQN2V-rDLjIDe3A<br>green open  kbilogs-logics-gamex<span class="hljs-number">-204.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>             fbIgQVN6RXaeexRMfWib2w <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">48630621</span>      <span class="hljs-number">0</span>    <span class="hljs-number">41</span>gb  <span class="hljs-number">13.6</span>gb<br>green open  kbilogs-logics-gamex<span class="hljs-number">-202.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>             f_slUsJ9SQC_sa_-Z5v1XQ <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">17299793</span>      <span class="hljs-number">0</span>  <span class="hljs-number">14.3</span>gb   <span class="hljs-number">4.7</span>gb<br>green open  kbilogs-logics-gamex<span class="hljs-number">-201.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>             CfnnWRy2T52fmjcsanLUtA <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">18702652</span>      <span class="hljs-number">0</span>  <span class="hljs-number">15.5</span>gb   <span class="hljs-number">5.1</span>gb<br>      close kbilogs-logics-crosservice<span class="hljs-number">-203.2018</span><span class="hljs-number">.11</span><span class="hljs-number">.28</span>       ChIFyCgiRUSp8fVMbRCN1w<br></code></pre></td></tr></table></figure>


<p>elasticsearch  常用的操作</p>
<ol>
<li><p>查看当前集群的状态<br>curl ‘<a href="http://ip:9200/_cat/health?v&#39;" target="_blank" rel="noopener">http://ip:9200/_cat/health?v&#39;</a></p>
</li>
<li><p>查看当前node<br>curl ‘<a href="http://ip:9200/_cat/nodes?v&#39;" target="_blank" rel="noopener">http://ip:9200/_cat/nodes?v&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/os&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/os&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/process&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/process&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/indices&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/indices&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/http&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/http&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/fs&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/fs&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/jvm&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/jvm&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/thread_pool&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/thread_pool&#39;</a><br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/transport&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/transport&#39;</a>   ###Transport statistics about sent and received bytes in cluster communication<br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/breaker&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/breaker&#39;</a>     ##Statistics about the field data circuit breaker<br>curl -XGET ‘<a href="http://ip:9200/_nodes/stats/process&#39;" target="_blank" rel="noopener">http://ip:9200/_nodes/stats/process&#39;</a></p>
</li>
<li><p>查看所有的index<br>curl ‘<a href="http://ip:9200/_cat/indices?v&#39;" target="_blank" rel="noopener">http://ip:9200/_cat/indices?v&#39;</a></p>
</li>
<li><p>创建一个index<br>curl -XPUT ‘ip:9200/customer?pretty’</p>
</li>
<li><p>创建一个index 带有文档的<br>curl -XPUT ‘ip:9200/customer/external/1?pretty’ -d ‘<br>{<br>“name”: “John Doe”<br>}’</p>
</li>
<li><p>删除一个index<br>curl -XDELETE ‘ip:9200/customer?pretty’<br>curl -XDELETE ‘ip:9200/onland-<em>?pretty’<br>curl -XDELETE ‘ip:9200/yingxiong_gm.</em>.05.2017’<br>curl -XDELETE ‘<a href="http://ip:9200/bilogs-clientbilog-203.01.*.2018&#39;" target="_blank" rel="noopener">http://ip:9200/bilogs-clientbilog-203.01.*.2018&#39;</a></p>
</li>
<li><p>update index<br>This example shows how to update our previous document (ID of 1) by changing the name field to “Jane Doe”:<br>curl -XPOST ‘ip:9200/customer/external/1/_update?pretty’ -d ‘<br>{<br>“doc”: { “name”: “Jane Doe” }<br>}’</p>
</li>
<li><p>elasticsearch   还原的case  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html</a></p>
</li>
<li><p>elasticsearch   rolling update   <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rolling-upgrades.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/rolling-upgrades.html</a></p>
</li>
<li><p>elasticsearch  full restart  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/restart-upgrade.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/restart-upgrade.html</a></p>
</li>
<li><p>elasticsearch 2.2版本的变化    <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/float.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/float.html</a></p>
</li>
<li><p>plugin 插件的版本<br>curl ‘ip:9200/_cat/plugins?v’</p>
</li>
<li><p>查看集群的health<br>curl -XGET ‘<a href="http://ip:9200/_cluster/health?pretty=true&#39;" target="_blank" rel="noopener">http://ip:9200/_cluster/health?pretty=true&#39;</a></p>
</li>
<li><p>集群的  stats<br>curl -XGET ‘<a href="http://ip:9200/_cluster/stats?human&amp;pretty&#39;" target="_blank" rel="noopener">http://ip:9200/_cluster/stats?human&amp;pretty&#39;</a></p>
</li>
<li><p>cluster reroute 有一定的风险丢数据，虽然能让集群的状态变成green，慎用  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-reroute.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-reroute.html</a></p>
</li>
<li><p>cluster setting<br>curl -XPUT ip:9200/_cluster/settings -d ‘{<br>“persistent” : {</p>
<pre><code>&quot;discovery.zen.minimum_master_nodes&quot;: 2</code></pre><p>}<br>}’<br>curl -XGET ip:9200/_cluster/settings</p>
</li>
<li><p>可以动态设置配置的  module    A list of dynamically updatable settings can be found in the Modules documentation.</p>
</li>
<li><p>dynamic index mapping  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/default-mapping.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/default-mapping.html</a></p>
</li>
<li><p>elastcsearch cluster  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/shards-allocation.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/shards-allocation.html</a><br>curl ‘ip:9200/_cat/shards?v’<br>curl -XGET <a href="http://ip:9200/_template" target="_blank" rel="noopener">http://ip:9200/_template</a> | python -m json.tool<br>可以直接恢复 elasticsearch 数据目录     删除掉 数据目录下面的 .kibana  文件夹    导入到新的集群  </p>
</li>
</ol>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>内存CPU</title>
    <url>/2018/06/19/39_%E5%86%85%E5%AD%98CPU/</url>
    <content><![CDATA[<p>记线上服务因程序问题出现过内存泄露，导致服务器内存暴增，所以以此了解什么内存泄露</p>
<ul>
<li><p>内存泄漏（Memory Leak）是指程序中己动态分配的堆内存由于某种原因程序未释放或无法释放，造成系统内存的浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。</p>
</li>
<li><p>内存泄漏缺陷具有隐蔽性、积累性的特征，比其他内存非法访问错误更难检测。因为内存泄漏的产生原因是内存块未被释放，属于遗漏型缺陷而不是过错型缺陷。此外，内存泄漏通常不会直接产生可观察的错误症状，而是逐渐积累，降低系统整体性能，极端的情况下可能使系统崩溃。</p>
</li>
</ul>
<p><a href="https://postimg.cc/nMrcG8vC" target="_blank" rel="noopener"><img src="https://i.postimg.cc/pVYhxRrY/image.png" alt="image.png"></a></p>
<p>###iowait<br>Percentage of time that the CPU or CPUs were idle during  which the system had an outstanding disk I/O request<br>系统未完成的I/O请求占用的CPU百分比<br>%iowait 表示在一个采样周期内有百分之几的时间属于以下情况：CPU空闲、并且有仍未完成的I/O请求。<br>[root@ip]# sar -u<br>Linux 3.14.48-33.39.amzn1.x86_64 (ip)     10/18/2018     <em>x86_64</em>    (2 CPU)<br>12:00:01 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle<br>12:10:01 AM     all      1.30      0.00      0.59      0.01      0.62     97.49<br>12:20:01 AM     all      1.27      0.00      0.56      0.01      0.62     97.53<br>12:30:01 AM     all      1.27      0.00      0.56      0.01      0.63     97.53<br>12:40:01 AM     all      1.26      0.00      0.57      0.01      0.62     97.55<br>12:50:01 AM     all      1.31      0.00      0.56      0.01      0.61     97.50<br>01:00:01 AM     all      1.29      0.00      0.58      0.01      0.62     97.50<br>01:10:01 AM     all      1.29      0.00      0.55      0.01      0.63     97.52<br>01:20:01 AM     all      1.30      0.00      0.54      0.01      0.63     97.52<br>01:30:01 AM     all      1.28      0.00      0.54      0.01      0.63     97.54<br>01:40:01 AM     all      1.30      0.00      0.53      0.01      0.63     97.53<br>01:50:01 AM     all      1.29      0.00      0.55      0.01      0.63     97.52<br>02:00:01 AM     all      1.27      0.00      0.57      0.01      0.63     97.52<br>02:10:01 AM     all      3.10      0.00      1.27      0.67      0.63     94.33<br>02:20:01 AM     all      1.41      0.00      0.66      0.01      0.66     97.27<br>Average:        all      1.43      0.00      0.62      0.06      0.63     97.27</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><code class="hljs gcode">误解  <span class="hljs-meta">%</span>iowait 升高并不能证明等待I/O的进程数量增多<br>在I/O完全一样的情况下，CPU忙闲状态的变化就能够影响 <span class="hljs-meta">%</span>iowait 的大小。在CPU繁忙期间发生的I/O，无论有多少，<span class="hljs-meta">%</span>iowait 的值都是不受影响的（因为 <span class="hljs-meta">%</span>iowait 的第一个前提条件就是CPU必须空闲）；当CPU繁忙程度下降时，有一部分I/O落入了CPU空闲的时间段内，这就导致了 <span class="hljs-meta">%</span>iowait 升高。可见，I/O并没有变化，<span class="hljs-meta">%</span>iowait 却升高了，原因仅仅是CPU的空闲时间增加了。请记住，系统中有成百上千的进程数，任何一个进程都可以引起CPU和I/O的变化，因为 <span class="hljs-meta">%</span>iowait、<span class="hljs-meta">%</span>idle、<span class="hljs-meta">%</span>user、<span class="hljs-meta">%</span>system 等这些指标都是全局性的，并不是特指某个进程。<br>CPU的繁忙状况保持不变的条件下，即使 <span class="hljs-meta">%</span>iowait 升高也不能说明I/O负载加重了。如果<span class="hljs-number">2</span>个I/O请求依次提交、使得整个时段内始终有I/O在进行，那么 <span class="hljs-meta">%</span>iowait 是<span class="hljs-number">100</span><span class="hljs-meta">%</span>；如果<span class="hljs-number">3</span>个I/O请求同时提交，因为系统有能力同时处理多个I/O，所以<span class="hljs-number">3</span>个并发的I/O从开始到结束的时间与一个I/O一样，<span class="hljs-meta">%</span>iowait 的结果只有<span class="hljs-number">50</span><span class="hljs-meta">%</span>。<span class="hljs-number">2</span>个I/O使 <span class="hljs-meta">%</span>iowait 达到了<span class="hljs-number">100</span><span class="hljs-meta">%</span>，<span class="hljs-number">3</span>个I/O的 <span class="hljs-meta">%</span>iowait 却只有<span class="hljs-number">50</span><span class="hljs-meta">%</span>，显然 <span class="hljs-meta">%</span>iowait 的高低与I/O的多少没有必然关系，而是与I/O的并发度相关。所以，仅凭 <span class="hljs-meta">%</span>iowait 的上升不能得出 I/O负载增加 的结论。<br>如果看到 <span class="hljs-meta">%</span>iowait 升高，还需检查I/O量有没有明显增加，a<span class="hljs-attr">vserv/avwait/avque等指标有没有明显增大，应用有没有感觉变慢，如果都没有，就没什么好担心的。</span><br></code></pre></td></tr></table></figure>

<p>使用命令行 sar -u t n<br>每10秒采样一次，连续采样3次，观察CPU 的使用情况<br>[ec2-user@ip]$ sar -u 10 3<br>Linux 3.14.35-28.38.amzn1.x86_64 (ip)     10/18/2018     <em>x86_64</em>    (4 CPU)<br>03:51:52 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle<br>03:52:02 AM     all         0.08         0.00         0.10          0.00          0.08         99.74<br>03:52:12 AM     all         0.10        0.00          0.08          0.00          0.10         99.72<br>03:52:22 AM     all         0.08         0.00         0.05          0.00          0.10         99.77<br>Average:             all       0.09          0.00         0.08           0.00          0.09        99.74</p>
<ul>
<li>%wio的值过高，表示硬盘存在I/O瓶颈，%idle值高，表示CPU较空闲，如果%idle值高但系统响应慢时，有可能是CPU等待分配内存，此时应加大内存容量。%idle值如果持续低于10，那么系统的CPU处理能力相对较低，表明系统中最需要解决的资源是CPU。</li>
<li>在以上的显示当中，主要看%iowait和%idle，%iowait过高表示存在I/O瓶颈，即磁盘IO无法满足业务需求，如果%idle过低表示CPU使用率比较严重，需要结合内存使用等情况判断CPU是否瓶颈。</li>
</ul>
<p>###iostat</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><code class="hljs coffeescript">是在Linux系统上查看I/O性能最基本的工具<br>在Linux上，每个I/O的平均耗时是用<span class="hljs-keyword">await</span>表示的，但它不能反映硬盘设备的性能，因为<span class="hljs-keyword">await</span>不仅包括硬盘设备处理I/O的时间，还包括了在队列中等待的时间。I/O请求在队列中的时候尚未发送给硬盘设备，即队列中的等待时间不是硬盘设备消耗的，所以说<span class="hljs-keyword">await</span>体现不了硬盘设备的速度，内核的问题比如I/O调度器什么的也有可能导致<span class="hljs-keyword">await</span>变大<br></code></pre></td></tr></table></figure>

<p>[tai_ops@ip ~]$ iostat –help<br>Usage: iostat [ options ] [ <interval> [ <count> ] ]<br>Options are:<br>[ -c ] [ -d ] [ -N ] [ -n ] [ -h ] [ -k | -m ] [ -t ] [ -V ] [ -x ] [ -y ] [ -z ]<br>[ -j { ID | LABEL | PATH | UUID | … } [ <device> […] | ALL ] ]<br>[ <device> […] | ALL ] [ -p [ <device> [,…] | ALL ] ]<br>命令参数：<br>-C 显示CPU使用情况<br>-d 显示磁盘使用情况<br>-k 以 KB 为单位显示<br>-m 以 M 为单位显示<br>-N 显示磁盘阵列(LVM) 信息<br>-n 显示NFS 使用情况<br>-p[磁盘] 显示磁盘和分区的情况<br>-t 显示终端和CPU的信息<br>-x 显示详细信息<br>-V 显示版本信息</p>
<p>常用方法：<br>iostat -d -k 1 10         #查看TPS和吞吐量信息<br>   iostat -d -x -k 1 10      #查看设备使用率（%util）、响应时间（await）<br>iostat -c 1 10            #查看cpu状态</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">案例分析：<br>[ec2-<span class="hljs-symbol">user@</span>ip ~]$ iostat -d -k <span class="hljs-number">2</span> <span class="hljs-number">5</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">4</span> CPU)<br><br>Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn<br>xvda              <span class="hljs-number">0.15</span>         <span class="hljs-number">0.03</span>         <span class="hljs-number">0.87</span>     <span class="hljs-number">107088</span>    <span class="hljs-number">3435228</span><br><br>Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn<br>xvda              <span class="hljs-number">1.00</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">4.00</span>          <span class="hljs-number">0</span>          <span class="hljs-number">8</span><br><br>Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn<br>xvda              <span class="hljs-number">0.50</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">2.00</span>          <span class="hljs-number">0</span>          <span class="hljs-number">4</span><br><br>Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn<br>xvda              <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>          <span class="hljs-number">0</span>          <span class="hljs-number">0</span><br><br>Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn<br>xvda              <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>          <span class="hljs-number">0</span>          <span class="hljs-number">0</span><br>分析：<br>输出结果一KB为单位，每<span class="hljs-number">2</span>秒收集一次信息，一共收集<span class="hljs-number">5</span>次，xvda每秒传输次数为<span class="hljs-number">0.15</span>，每秒读磁盘<span class="hljs-number">0.03</span>KB，写磁盘<span class="hljs-number">0.87</span>KB，取样读磁盘总数<span class="hljs-number">107088</span>KB，写磁盘总数为<span class="hljs-number">3435228</span>KB<br><br>[ec2-<span class="hljs-symbol">user@</span>ip ~]$ iostat -d -x -k <span class="hljs-number">3</span> <span class="hljs-number">5</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">4</span> CPU)<br><br>Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.06</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.15</span>     <span class="hljs-number">0.03</span>     <span class="hljs-number">0.87</span>    <span class="hljs-number">12.04</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.38</span>   <span class="hljs-number">0.28</span>   <span class="hljs-number">0.00</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.67</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.67</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">5.33</span>    <span class="hljs-number">16.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br><br>分析：<br>输出结果以KB为单位，每<span class="hljs-number">3</span>秒收集一次，一共收集<span class="hljs-number">5</span>次，每秒向磁盘上写<span class="hljs-number">5</span>KB左右数据(wkB/s值)，每秒约有<span class="hljs-number">1</span>次IO操作(r/s+w/s)，其中以写操作为主体，平均每次IO请求等待处理的时间为<span class="hljs-number">0.38</span>毫秒，处理耗时为<span class="hljs-number">0.28</span> 毫秒，等待处理的IO请求队列中，平均有<span class="hljs-number">0</span>个请求驻留<br><br><br>[ec2-<span class="hljs-symbol">user@</span>ip ~]$ iostat -c <span class="hljs-number">3</span> <span class="hljs-number">5</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">4</span> CPU)<br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">3.96</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">1.21</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.11</span>   <span class="hljs-number">94.71</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">4.06</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">1.27</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.08</span>   <span class="hljs-number">94.59</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">3.65</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">1.19</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.17</span>   <span class="hljs-number">95.00</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">4.06</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">1.10</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.17</span>   <span class="hljs-number">94.67</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">3.81</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">1.10</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.08</span>   <span class="hljs-number">95.00</span><br><br>分析：<br>用户CPU利用率约<span class="hljs-number">4</span>%，优先级CPU利用率为<span class="hljs-number">0</span>，系统CPU利用率约<span class="hljs-number">1.2</span>%，IO挂起空闲百分比为<span class="hljs-number">0</span>，虚拟CPU百分比约<span class="hljs-number">0.17</span>，IO没有挂起空闲百分比约<span class="hljs-number">95</span>%<br>单独使用<br>[ec2-<span class="hljs-symbol">user@</span>ip ~]$ iostat<br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">4</span> CPU)<br><br>avg-cpu:  %user   %nice  %system  %iowait  %steal   %idle<br>                  <span class="hljs-number">3.96</span>      <span class="hljs-number">0.00</span>     <span class="hljs-number">1.21</span>          <span class="hljs-number">0.00</span>          <span class="hljs-number">0.11</span>     <span class="hljs-number">94.71</span><br><br>Device:      tps   Blk_read/s   Blk_wrtn/s   Blk_read    Blk_wrtn<br>xvda          <span class="hljs-number">0.15</span>         <span class="hljs-number">0.05</span>         <span class="hljs-number">1.75</span>          <span class="hljs-number">214177</span>     <span class="hljs-number">6868520</span><br><br>单独执行iostat，显示的结果为从系统开机到当前执行时刻的统计信息<br><br><br>案例分析：<br>用户CPU利用率为<span class="hljs-number">3.96</span>%，优先级用户CPU利用率为<span class="hljs-number">0</span>，系统CPU利用率为<span class="hljs-number">1.21</span>%，IO挂起空闲时间百分比为<span class="hljs-number">0</span>，虚拟CPU时间百分比为<span class="hljs-number">0.11</span>%，IO没有挂起空闲时间百分比为<span class="hljs-number">94.71</span>，xvda每秒传输次数为<span class="hljs-number">0.15</span>，每秒读磁盘<span class="hljs-number">0.05</span>，写磁盘<span class="hljs-number">1.75</span>，取样读磁盘总数为<span class="hljs-number">214177</span>，写总数为<span class="hljs-number">6868520</span><br><br>最上面指示系统版本、主机名和日期<br></code></pre></td></tr></table></figure>

<p>avg-cpu: 总体cpu使用情况统计信息，对于多核cpu，这里为所有cpu的平均值</p>
<ul>
<li>%user : 显示了在执行用户(应用)层时的CPU利用率</li>
<li>%nice : 显示了在以nice优先级运行用户层的CPU利用率</li>
<li>%system : 显示了在执行系统(内核)层时的CPU利用率</li>
<li>%iowait : 显示了CPU在I/O请求挂起时空闲时间的百分比</li>
<li>%steal : 显示了当hypervisor正服务于另外一个虚拟处理器时无意识地等待虚拟CPU所占有的时间百分比。</li>
<li>%idle : 显示了CPU在I/O没有挂起请求时空闲时间的百分比</li>
</ul>
<p>Device: 各磁盘设备的IO统计信息</p>
<ul>
<li>Device: 设备名称</li>
<li>tps: 设备每秒的传输次数（Indicate the number of transfers per second that were issued to the device.）。“一次传输”意思是“一次I/O请求”。多个逻辑请求可能会被合并为“一次I/O请求”。“一次传输”请求的大小是未知的。</li>
<li>Blk_read/s: 每秒读扇区数量(一扇区为512bytes)</li>
<li>Blk_wrtn/s: 每秒写扇区数量</li>
<li>Blk_read: 取样时间间隔内读扇区总数量</li>
<li>Blk_wrtn: 取样时间间隔内写扇区总数量</li>
</ul>
<p>如果%iowait的值过高，表示硬盘存在I/O瓶颈，%idle值高，表示CPU较空闲，如果%idle值高但系统响应慢时，有可能是CPU等待分配内存，此时应加大内存容量。%idle值如果持续低于10，那么系统的CPU处理能力相对较低，表明系统中最需要解决的资源是CPU。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">指定采样时间间隔与采样次数<br>指定iostat命令的采样间隔和采样次数：每<span class="hljs-number">2</span>秒采集一次，一共采集<span class="hljs-number">3</span>次<br>[ec2-<span class="hljs-symbol">user@</span>ip ~]$ iostat -d <span class="hljs-number">2</span> <span class="hljs-number">3</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">4</span> CPU)<br><br>Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn<br>xvda                <span class="hljs-number">0.15</span>         <span class="hljs-number">0.05</span>         <span class="hljs-number">1.75</span>         <span class="hljs-number">214177</span>    <span class="hljs-number">6869944</span><br><br>Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn<br>xvda              <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>          <span class="hljs-number">0</span>          <span class="hljs-number">0</span><br><br>Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn<br>xvda                <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>          <span class="hljs-number">0</span>          <span class="hljs-number">0</span><br><br>案例分析：<br>xvda每秒传输次数为<span class="hljs-number">0.15</span>，每秒读磁盘为<span class="hljs-number">0.05</span>，写磁盘为<span class="hljs-number">1.75</span>，取样读磁盘总数为<span class="hljs-number">214177</span>，写磁盘为<span class="hljs-number">6869944</span><br><br><br>以kB为单位显示读写信息(-k选项)<br>使用-k选项，指定iostat的部分输出结果以kB为单位，而不是以扇区数为单位：<br><br>[<span class="hljs-symbol">tai_ops@</span>ip ~]$ iostat -d -k<br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">8</span> CPU)<br><br>Device:            tps        kB_read/s    kB_wrtn/s    kB_read    kB_wrtn<br>xvda                <span class="hljs-number">55.11</span>         <span class="hljs-number">0.08</span>        <span class="hljs-number">6979.67</span>       <span class="hljs-number">149976</span>     <span class="hljs-number">13936026432</span><br><br>以上输出中，kB_read/s、kB_wrtn/s、kB_read和kB_wrtn的值均以kB为单位，相比以扇区数为单位，这里的值为原值的一半(<span class="hljs-number">1</span>kB=<span class="hljs-number">512</span>bytes*<span class="hljs-number">2</span>)<br><br>（-m选项）以M为单位<br>[<span class="hljs-symbol">tai_ops@</span>ip ~]$ iostat -m<br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">8</span> CPU)<br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>           <span class="hljs-number">1.75</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.19</span>    <span class="hljs-number">0.86</span>    <span class="hljs-number">0.08</span>   <span class="hljs-number">97.13</span><br><br>Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn<br>xvda             <span class="hljs-number">55.06</span>         <span class="hljs-number">0.00</span>         <span class="hljs-number">6.81</span>        <span class="hljs-number">146</span>   <span class="hljs-number">13609407</span><br><br>更详细的io统计信息(-x选项)<br>为显示更详细的io设备统计信息，我们可以使用-x选项，在分析io瓶颈时，一般都会开启-x选项：<br><br>[<span class="hljs-symbol">tai_ops@</span>ip ~]$ iostat -d -k -x <span class="hljs-number">3</span> <span class="hljs-number">3</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">8</span> CPU)<br><br>Device:         rrqm/s   wrqm/s     r/s     w/s        rkB/s    wkB/s      avgrq-sz  avgqu-sz   await   svctm   %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.85</span>          <span class="hljs-number">0.01</span>   <span class="hljs-number">55.10</span>     <span class="hljs-number">0.08</span>     <span class="hljs-number">6978.66</span>   <span class="hljs-number">253.30</span>     <span class="hljs-number">1.02</span>           <span class="hljs-number">18.52</span>   <span class="hljs-number">0.94</span>     <span class="hljs-number">5.20</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s      rkB/s     wkB/s     avgrq-sz   avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>         <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>     <span class="hljs-number">0.00</span>      <span class="hljs-number">0.00</span>        <span class="hljs-number">0.00</span>           <span class="hljs-number">0.00</span>           <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br><br>Device:         rrqm/s   wrqm/s     r/s     w/s      rkB/s     wkB/s    avgrq-sz   avgqu-sz   await  svctm  %util<br>xvda              <span class="hljs-number">0.00</span>      <span class="hljs-number">2.00</span>        <span class="hljs-number">0.00</span>    <span class="hljs-number">1.00</span>     <span class="hljs-number">0.00</span>      <span class="hljs-number">13.33</span>      <span class="hljs-number">26.67</span>       <span class="hljs-number">0.00</span>            <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span>   <span class="hljs-number">0.00</span><br></code></pre></td></tr></table></figure>

<ul>
<li>rrqm/s: 每秒对该设备的读请求被合并次数，文件系统会对读取同块(block)的请求进行合并</li>
<li>wrqm/s: 每秒对该设备的写请求被合并次数</li>
<li>r/s: 每秒完成的读次数</li>
<li>w/s: 每秒完成的写次数</li>
<li>rkB/s: 每秒读数据量(kB为单位)</li>
<li>wkB/s: 每秒写数据量(kB为单位)</li>
<li>avgrq-sz:平均每次IO操作的数据量(扇区数为单位)</li>
<li>avgqu-sz: 平均等待处理的IO请求队列长度</li>
<li>await: 平均每次IO请求等待时间(包括等待时间和处理时间，毫秒为单位)</li>
<li>svctm: 平均每次IO请求的处理时间(毫秒为单位)</li>
<li>%util: 采用周期内用于IO操作的时间比率，即IO队列非空的时间比率</li>
</ul>
<p>对于以上示例输出，我们可以获取到以下信息：</p>
<ul>
<li>每秒向磁盘上写7M左右数据(wkB/s值)</li>
<li>(r/s+w/s)，其中以写操作为主体</li>
<li>平均每次IO请求等待处理的时间为18.52毫秒，处理耗时为0.94 毫秒</li>
<li>等待处理的IO请求队列中，平均有1.02个请求驻留</li>
</ul>
<p>util = (r/s+w/s) * (svctm/1000)</p>
<p>如果 %util 接近 100%，说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈。如果 svctm 比较接近 await，说明 I/O 几乎没有等待时间；如果 await 远大于 svctm，说明I/O 队列太长，io响应太慢，则需要进行必要优化。如果avgqu-sz比较大，也表示有大量io在等待。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><br>获取cpu部分状态值 （-c选项）<br><br>[<span class="hljs-symbol">tai_ops@</span>ip ~]$ iostat -c <span class="hljs-number">2</span> <span class="hljs-number">3</span><br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">8</span> CPU)<br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>                    <span class="hljs-number">1.75</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.19</span>          <span class="hljs-number">0.86</span>        <span class="hljs-number">0.08</span>      <span class="hljs-number">97.13</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>                    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>          <span class="hljs-number">0.00</span>        <span class="hljs-number">0.00</span>     <span class="hljs-number">100.00</span><br><br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>                   <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.00</span>           <span class="hljs-number">0.00</span>        <span class="hljs-number">0.00</span>     <span class="hljs-number">100.00</span><br><br><br>显示tty和Cpu信息 （-t选项）<br>[<span class="hljs-symbol">tai_ops@</span>ip ~]$ iostat -t<br>Linux <span class="hljs-number">3.14</span><span class="hljs-number">.48</span><span class="hljs-number">-33.39</span>.amzn1.x86_64 (ip)      <span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span>      _x86_64_     (<span class="hljs-number">8</span> CPU)<br><br><span class="hljs-number">08</span>/<span class="hljs-number">14</span>/<span class="hljs-number">2017</span> <span class="hljs-number">09</span>:<span class="hljs-number">19</span>:<span class="hljs-number">28</span> AM<br>avg-cpu:  %user   %nice %system %iowait  %steal   %idle<br>                <span class="hljs-number">1.75</span>        <span class="hljs-number">0.00</span>    <span class="hljs-number">0.19</span>         <span class="hljs-number">0.86</span>        <span class="hljs-number">0.08</span>      <span class="hljs-number">97.13</span><br><br>Device:            tps     Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn<br>xvda                <span class="hljs-number">55.05</span>         <span class="hljs-number">0.15</span>     <span class="hljs-number">13944.15</span>     <span class="hljs-number">299952</span>     <span class="hljs-number">27872069752</span><br></code></pre></td></tr></table></figure>

<p>iostat [ -c | -d ] [ -k ] [ -t ] [ -V ] [ -x [ device ] ] [ interval [ count ] ]</p>
<p>-x，该选项将用于显示和io相关的扩展数据<br>其中，-c为汇报CPU的使用情况；-d为汇报磁盘的使用情况；-k表示每秒按kilobytes字节显示数据；-t为打印汇报的时间；-v表示打印出版本信息和用法；-x device指定要统计的设备名称，默认为所有的设备；interval指每次统计间隔的时间；count指按照这个时间间隔统计的次数。  </p>
<p>%util:    一秒中有百分之多少的时间用于 I/O 操作，或者说一秒中有多少时间 I/O 队列是非空的。即 delta(use)/s/1000 (因为use的单位为毫秒)</p>
<p>await：每一个IO请求的处理的平均时间（单位是毫秒）。这里可以理解为IO的响应时间，一般地系统IO响应时间应该低于5ms，如果大于10ms就比较大了。</p>
<p>%util：在统计时间内所有处理IO时间，除以总共统计时间。例如，如果统计间隔1秒，该设备有0.8秒在处理IO，而0.2秒闲置，那么该设备的%util = 0.8/1 = 80%，所以该参数暗示了设备的繁忙程度。一般地，如果该参数是100%表示设备已经接近满负荷运行了（当然如果是多磁盘，即使%util是100%，因为磁盘的并发能力，所以磁盘使用未必就到了瓶颈）。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">iostat</span> <span class="hljs-string">-d</span> <span class="hljs-string">-k</span> <span class="hljs-number">1</span> <span class="hljs-number">10</span>    <span class="hljs-string">查看TPS和吞吐量信息</span><br><br><span class="hljs-string">iostat</span> <span class="hljs-string">-d</span> <span class="hljs-string">-x</span> <span class="hljs-string">-k</span> <span class="hljs-number">1</span> <span class="hljs-number">10</span>    <span class="hljs-comment">#查看设备使用率（%util）、响应时间（await）</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建德国CDH(踩坑无数后整理版)</title>
    <url>/2019/12/18/59_CDH/</url>
    <content><![CDATA[<p>注： 发出来的文档包含IP皆为内网IP，密码也为文档效果更改</p>
<p>#####三台CentOS Linux release 7.5.1804 (Core)服务器：<br>[cdh]<br>172.17.4.9<br>172.17.4.10<br>172.17.4.11<br>#####新建一个普通用户，给予超级用户权限（所有节点）：<br>[root@cdh1-172-17-4-9 ~]# groupadd -r aiot<br>[root@cdh1-172-17-4-9 ~]# useradd -d /home/aiot/ -m -s /bin/bash -c “administrator user” -g aiot -p passwd -r aiot<br>[root@cdh1-172-17-4-9 ~]# passwd aiot<br>更改用户 aiot 的密码 。<br>新的 密码：passwd<br>无效的密码： 密码包含用户名在某些地方<br>重新输入新的 密码：passwd<br>passwd：所有的身份验证令牌已经成功更新。<br>[root@cdh1-172-17-4-9 ~]# vim /etc/sudoers</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><code class="hljs ada">root    <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>)       <span class="hljs-keyword">ALL</span><br>aiot <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>) NOPASSWD: <span class="hljs-keyword">ALL</span><br></code></pre></td></tr></table></figure>
<p>#####安装必要包（所有节点）：<br>yum install httpd -y<br>yum install ntp -y</p>
<p>#####配置域名解析、主机名（所有节点）：</p>
<p>[root@cdh1-172-17-4-9 ~]# cat /etc/hosts</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">::<span class="hljs-number">1</span> VM_4_4_centos VM_4_4_centos<br>::<span class="hljs-number">1</span> localhost.localdomain localhost<br>::<span class="hljs-number">1</span> localhost6.localdomain6 localhost6<br><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> localhost localhost.localdomain VM_4_9_centos<br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.9</span> cdh1<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-9</span><br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.10</span> cdh2<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-10</span><br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.11</span> cdh3<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-11</span><br></code></pre></td></tr></table></figure>
<p>[root@cdh1-172-17-4-9 ~]# hostnamectl set-hostname cdh1-172-17-4-9<br>[root@cdh2-172-17-4-10 ~]# cat /etc/hosts</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> VM_4_10_centos VM_4_10_centos<br><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> localhost.localdomain localhost<br><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> localhost4.localdomain4 localhost4<br>::<span class="hljs-number">1</span> VM_4_10_centos VM_4_10_centos<br>::<span class="hljs-number">1</span> localhost.localdomain localhost<br>::<span class="hljs-number">1</span> localhost6.localdomain6 localhost6<br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.9</span> cdh1<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-9</span><br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.10</span> cdh2<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-10</span><br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.11</span> cdh3<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-11</span><br></code></pre></td></tr></table></figure>
<p>[root@cdh2-172-17-4-10 ~]# hostnamectl set-hostname cdh2-172-17-4-10<br>[root@cdh3-172-17-4-11 ~]# cat /etc/hosts</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> VM_4_11_centos VM_4_11_centos<br><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> localhost.localdomain localhost<br><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> localhost4.localdomain4 localhost4<br>::<span class="hljs-number">1</span> VM_4_11_centos VM_4_11_centos<br>::<span class="hljs-number">1</span> localhost.localdomain localhost<br>::<span class="hljs-number">1</span> localhost6.localdomain6 localhost6<br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.9</span> cdh1<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-9</span><br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.10</span> cdh2<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-10</span><br><span class="hljs-number">172.17</span><span class="hljs-number">.4</span><span class="hljs-number">.11</span> cdh3<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-11</span><br></code></pre></td></tr></table></figure>
<p>[root@cdh3-172-17-4-11 ~]# hostnamectl set-hostname cdh3-172-17-4-11</p>
<p>#####关闭防火墙和SELINUX（所有节点）：<br>[root@cdh1-172-17-4-9 ~]# getenforce<br>Disabled<br>[root@cdh1-172-17-4-9 ~]# systemctl stop firewalld<br>[root@cdh1-172-17-4-9 ~]# systemctl disable firewalld.service<br>[root@cdh1-172-17-4-9 ~]# vim /etc/selinux/config<br>SELINUX=disabled</p>
<p>#####切换普通用户，配置三机互信（所有节点）：<br>[root@cdh1-172-17-4-9 ~]# su - aiot<br>[aiot@cdh1-172-17-4-9 ~]$ whoami<br>aiot<br>[aiot@cdh1-172-17-4-9 ~]$ mkdir .ssh<br>[aiot@cdh1-172-17-4-9 ~]$ chmod 750 .ssh<br>[aiot@cdh1-172-17-4-9 ~]$ ssh-keygen -t rsa<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/home/aiot//.ssh/id_rsa):<br>Enter passphrase (empty for no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved in /home/aiot//.ssh/id_rsa.<br>Your public key has been saved in /home/aiot//.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:MEtv2UxJl5VddGmG+RegPLaTi8n2Z0fo6LHHEbJthYw aiot@cdh1-172-17-4-9<br>The key’s randomart image is:<br>+—[RSA 2048]—-+<br>|          . .+=+<em>|<br>|         ..ooo.=o|<br>|      +   o=o = .|<br>|     . = =.E++ o.|<br>|      . S o++ + .|<br>|       .. o.o= . |<br>|         = o= o  |<br>|        . ..o</em> . |<br>|          .++ .  |<br>+—-[SHA256]—–+<br>[aiot@cdh1-172-17-4-9 ~]$ cat /home/aiot/.ssh/id_rsa.pub &gt;&gt; /home/aiot/.ssh/authorized_keys<br>[aiot@cdh1-172-17-4-9 ~]$ chmod 600 /home/aiot/.ssh/authorized_keys<br>[aiot@cdh1-172-17-4-9 ~]$ cat .ssh/authorized_keys</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">ssh-rsa ********* <span class="hljs-symbol">aiot@</span>cdh1<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-9</span><br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ vim .ssh/authorized_keys<br>[aiot@cdh1-172-17-4-9 ~]$ cat .ssh/authorized_keys</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">ssh-rsa ********* <span class="hljs-symbol">aiot@</span>cdh1<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-9</span><br>ssh-rsa ********* <span class="hljs-symbol">aiot@</span>cdh2<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-10</span><br>ssh-rsa ********* <span class="hljs-symbol">aiot@</span>cdh3<span class="hljs-number">-172</span><span class="hljs-number">-17</span><span class="hljs-number">-4</span><span class="hljs-number">-11</span><br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ ssh 172.17.4.10 date<br>Are you sure you want to continue connecting (yes/no)? yes<br>Warning: Permanently added ‘172.17.4.10’ (ECDSA) to the list of known hosts.<br>Mon Dec 23 10:16:27 CST 2019<br>[aiot@cdh1-172-17-4-9 ~]$ logout</p>
<p>#####配置时钟同步（所有节点）：</p>
<p>[root@cdh1-172-17-4-9 ~]# sudo vim /etc/ntp.conf</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#server 0.centos.pool.ntp.org iburst</span><br><span class="hljs-comment">#server 1.centos.pool.ntp.org iburst</span><br><span class="hljs-comment">#server 2.centos.pool.ntp.org iburst</span><br><span class="hljs-comment">#server 3.centos.pool.ntp.org iburst</span><br>server 0.pool.ntp.org<br>server 1.pool.ntp.org<br>server 2.pool.ntp.org<br></code></pre></td></tr></table></figure>
<p>[root@cdh1-172-17-4-9 ~]# sudo systemctl enable ntpd<br>[root@cdh1-172-17-4-9 ~]# sudo systemctl start ntpd<br>[root@cdh1-172-17-4-9 ~]# sudo systemctl status ntpd<br>● ntpd.service - Network Time Service<br>   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)<br>   Active: active (running) since 一 2019-12-23 09:56:25 CST; 22min ago<br> Main PID: 10113 (ntpd)<br>   CGroup: /system.slice/ntpd.service<br>           └─10113 /usr/sbin/ntpd -u ntp:ntp -g<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: ntp_io: estimated max descriptors: 1024, initial socket boundary: 16<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: Listen normally on 0 lo 127.0.0.1 UDP 123<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: Listen normally on 1 eth0 172.17.4.9 UDP 123<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: Listen normally on 2 lo ::1 UDP 123<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: Listen normally on 3 eth0 fe80::5054:ff:feeb:37bf UDP 123<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: Listening on routing socket on fd #20 for interface updates<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: 0.0.0.0 c016 06 restart<br>12月 23 09:56:25 cdh1-172-17-4-9 ntpd[10113]: 0.0.0.0 c012 02 freq_set kernel -2.846 PPM<br>12月 23 09:56:25 cdh1-172-17-4-9 systemd[1]: Started Network Time Service.<br>12月 23 09:56:32 cdh1-172-17-4-9 ntpd[10113]: 0.0.0.0 c615 05 clock_sync</p>
<p>#####禁用大透明页，设置vm.swappiness（主节点）：</p>
<p>[root@cdh1-172-17-4-9 ~]# sudo vim /etc/sysctl.conf</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">vm.swappiness</span>=<span class="hljs-number">10</span><br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo sysctl vm.swappiness=10<br>vm.swappiness = 10<br>[aiot@cdh1-172-17-4-9 ~]$ sudo vim /etc/rc.local</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><code class="hljs crystal">echo never &gt; <span class="hljs-regexp">/sys/kernel</span><span class="hljs-regexp">/mm/transparent</span>_hugepage/defrag<br>echo never &gt; <span class="hljs-regexp">/sys/kernel</span><span class="hljs-regexp">/mm/transparent</span>_hugepage/enabled<br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo chmod +x /etc/rc.d/rc.local</p>
<p>并在终端使用root执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br></code></pre></td></tr></table></figure>
<p>#####安装jdk（所有节点）：</p>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo rpm -qa | grep java<br>[aiot@cdh1-172-17-4-9 ~]$ sudo mkdir -p /usr/java<br>下载java、mysql-connecter<br>[aiot@cdh1-172-17-4-9 ~]$ sudo tar -zxvf /tmp/jdk-8u181-linux-x64.tar.gz -C /usr/java/<br>[aiot@cdh1-172-17-4-9 ~]$ sudo ln -s /usr/java/jdk1.8.0_181 /usr/java/jdk<br>[aiot@cdh1-172-17-4-9 ~]$ sudo vim /etc/profile</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><code class="hljs crystal">export JAVA_HOME=<span class="hljs-regexp">/usr/java</span><span class="hljs-regexp">/jdk</span><br><span class="hljs-regexp">export PATH=$PATH:$JAVA_HOME/bin</span><br>export CLASSPATH=.:$JAVA_HOME/<span class="hljs-class"><span class="hljs-keyword">lib</span>:$<span class="hljs-title">CLASSPATH</span></span><br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ source /etc/profile<br>[aiot@cdh1-172-17-4-9 ~]$ vim ~/.bashrc</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><code class="hljs crystal">export JAVA_HOME=<span class="hljs-regexp">/usr/java</span><span class="hljs-regexp">/jdk</span><br><span class="hljs-regexp">export PATH=$PATH:$JAVA_HOME/bin</span><br>export CLASSPATH=.:$JAVA_HOME/<span class="hljs-class"><span class="hljs-keyword">lib</span>:$<span class="hljs-title">CLASSPATH</span></span><br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ vim ~/.bash_profile<br>export JAVA_HOME=/usr/java/jdk<br>export PATH=$PATH:$JAVA_HOME/bin<br>export CLASSPATH=.:$JAVA_HOME/lib:$CLASSPATH<br>[aiot@cdh1-172-17-4-9 ~]$ echo $JAVA_HOME<br>/usr/java/jdk</p>
<p>#####拷贝数据库连接jar包（所有节点）：</p>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo mkdir -p /usr/share/java<br>[aiot@cdh1-172-17-4-9 ~]$ sudo cp /tmp/mysql-connector-java-5.1.46.jar /usr/share/java/mysql-connector-java.jar<br>[aiot@cdh1-172-17-4-9 ~]$ ls /usr/share/java/<br>mysql-connector-java.jar</p>
<p>#####安装mysql57并建库授权（所有节点）：</p>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo rpm -qa | grep mariadb<br>mariadb-libs-5.5.56-2.el7.x86_64<br>[aiot@cdh1-172-17-4-9 ~]$ sudo rpm -e mariadb-libs-5.5.56-2.el7.x86_64 –nodeps<br>[aiot@cdh1-172-17-4-9 ~]$ sudo rpm -qa | grep mariadb<br>[aiot@cdh1-172-17-4-9 ~]$ sudo yum -y install libaio<br>[aiot@cdh2-172-17-4-10 ~]$ cd /tmp<br>[aiot@cdh2-172-17-4-10 tmp]$ ls<br>2f0a2e365ded13cde49324756eacd7de          nv_driver_install.log<br>ansible_command_payload_Vt5UHt            nv_gpu_conf.log<br>cvm_init.log                              setRps.log<br>hsperfdata_root                           systemd-private-21cc3095c6d247a897c48ae1c72ff7c6-ntpd.service-e0cbwM<br>jdk-8u181-linux-x64.tar.gz                systemd-private-62cdd337e72f463daa0d3e2e36bc16a9-ntpd.service-hG5zxr<br>mysql-5.7.20-1.el7.x86_64.rpm-bundle.tar  virtio_blk_affinity.log<br>mysql-connector-java-5.1.46.jar           virtio_blk_affinity_udev.log<br>net_affinity.log<br>[aiot@cdh2-172-17-4-10 tmp]$ tar -xvf mysql-5.7.20-1.el7.x86_64.rpm-bundle.tar<br>mysql-community-minimal-debuginfo-5.7.20-1.el7.x86_64.rpm<br>mysql-community-embedded-5.7.20-1.el7.x86_64.rpm<br>mysql-community-libs-compat-5.7.20-1.el7.x86_64.rpm<br>mysql-community-libs-5.7.20-1.el7.x86_64.rpm<br>mysql-community-embedded-compat-5.7.20-1.el7.x86_64.rpm<br>mysql-community-devel-5.7.20-1.el7.x86_64.rpm<br>mysql-community-server-5.7.20-1.el7.x86_64.rpm<br>mysql-community-server-minimal-5.7.20-1.el7.x86_64.rpm<br>mysql-community-client-5.7.20-1.el7.x86_64.rpm<br>mysql-community-test-5.7.20-1.el7.x86_64.rpm<br>mysql-community-common-5.7.20-1.el7.x86_64.rpm<br>mysql-community-embedded-devel-5.7.20-1.el7.x86_64.rpm<br>参考： <a href="http://www.seaxiang.com/blog/mysql_libnuma_error" target="_blank" rel="noopener">http://www.seaxiang.com/blog/mysql_libnuma_error</a><br>[aiot@cdh1-172-17-4-9 aiot]$ sudo yum install numactl<br>sudo rpm -ivh mysql-community-common-5.7.20-1.el7.x86_64.rpm<br>sudo rpm -ivh mysql-community-libs-5.7.20-1.el7.x86_64.rpm<br>sudo rpm -ivh mysql-community-libs-compat-5.7.20-1.el7.x86_64.rpm<br>sudo rpm -ivh mysql-community-client-5.7.20-1.el7.x86_64.rpm<br>sudo rpm -ivh mysql-community-server-5.7.20-1.el7.x86_64.rpm<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo mkdir -p /data/mysqldata/mysql<br>[aiot@cdh2-172-17-4-10 aiot]$ sudo su<br>[root@cdh2-172-17-4-10 aiot]# cp /etc/my.cnf /tmp<br>[root@cdh2-172-17-4-10 aiot]# echo &gt; /etc/my.cnf<br>[root@cdh2-172-17-4-10 aiot]# vim /etc/my.cnf</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">datadir</span>=/data/mysqldata/mysql<br><span class="hljs-attr">socket</span>=/var/lib/mysql/mysql.sock<br><span class="hljs-attr">transaction-isolation</span>=READ-COMMITTED<br><span class="hljs-attr">symbolic-links</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">key_buffer_size</span>=<span class="hljs-number">32</span>M<br><span class="hljs-attr">max_allowed_packet</span>=<span class="hljs-number">32</span>M<br><span class="hljs-attr">thread_stack</span>=<span class="hljs-number">256</span>K<br><span class="hljs-attr">thread_cache_size</span>=<span class="hljs-number">64</span><br><span class="hljs-attr">query_cache_limit</span>=<span class="hljs-number">8</span>M<br><span class="hljs-attr">query_cache_size</span>=<span class="hljs-number">64</span>M<br><span class="hljs-attr">query_cache_type</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">max_connections</span>=<span class="hljs-number">550</span><br><span class="hljs-attr">log_bin</span>=/data/mysqldata/mysql/mysql_binary_log<br><span class="hljs-attr">server_id</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">binlog_format</span>=mixed<br><span class="hljs-attr">read_buffer_size</span>=<span class="hljs-number">2</span>M<br><span class="hljs-attr">read_rnd_buffer_size</span>=<span class="hljs-number">16</span>M<br><span class="hljs-attr">sort_buffer_size</span>=<span class="hljs-number">8</span>M<br><span class="hljs-attr">join_buffer_size</span>=<span class="hljs-number">8</span>M<br><span class="hljs-attr">innodb_file_per_table</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">innodb_flush_log_at_trx_commit</span>=<span class="hljs-number">2</span><br><span class="hljs-attr">innodb_log_buffer_size</span>=<span class="hljs-number">64</span>M<br><span class="hljs-attr">innodb_buffer_pool_size</span>=<span class="hljs-number">4</span>G<br><span class="hljs-attr">innodb_thread_concurrency</span>=<span class="hljs-number">8</span><br><span class="hljs-attr">innodb_flush_method</span>=O_DIRECT<br><span class="hljs-attr">innodb_log_file_size</span>=<span class="hljs-number">512</span>M<br><span class="hljs-attr">log-error</span>=/var/log/mysqld.log<br><span class="hljs-attr">pid-file</span>=/var/run/mysqld/mysqld.pid<br><span class="hljs-attr">sql_mode</span>=STRICT_ALL_TABLES<br></code></pre></td></tr></table></figure>
<p>[root@cdh1-172-17-4-9 aiot]# exit<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo systemctl enable mysqld<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo systemctl start mysqld<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo systemctl status mysqld -l<br>● mysqld.service - MySQL Server<br>   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Mon 2019-12-23 12:02:52 CST; 4s ago<br>     Docs: man:mysqld(8)<br>           <a href="http://dev.mysql.com/doc/refman/en/using-systemd.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/refman/en/using-systemd.html</a><br>  Process: 28580 ExecStart=/usr/sbin/mysqld –daemonize –pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)<br>  Process: 28486 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS)<br> Main PID: 28583 (mysqld)<br>   CGroup: /system.slice/mysqld.service<br>           └─28583 /usr/sbin/mysqld –daemonize –pid-file=/var/run/mysqld/mysqld.pid<br>Dec 23 12:02:42 cdh1-172-17-4-9 systemd[1]: Starting MySQL Server…<br>Dec 23 12:02:52 cdh1-172-17-4-9 systemd[1]: Started MySQL Server.<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo grep ‘temporary password’ /var/log/mysqld.log<br>2019-12-23T04:02:49.050303Z 1 [Note] A temporary password is generated for root@localhost: JwXY&amp;drNk6l0<br>[aiot@cdh1-172-17-4-9 aiot]$ mysql -u root -p<br>Enter password:<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 3<br>Server version: 5.7.20-log<br>Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.<br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br>Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement.</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-keyword">USER</span>() IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">'passwd!@$'</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">'root'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> scm <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> hive <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> oozie <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> hue <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> nas <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> actmonitor <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> rptmgn <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> navmetas <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> sentry <span class="hljs-keyword">DEFAULT</span> CHARSET utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">'admin'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> scm.* <span class="hljs-keyword">to</span> <span class="hljs-string">'scm'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> hive.* <span class="hljs-keyword">to</span> <span class="hljs-string">'hive'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> oozie.* <span class="hljs-keyword">to</span> <span class="hljs-string">'oozie'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> hue.* <span class="hljs-keyword">to</span> <span class="hljs-string">'hue'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> nas.* <span class="hljs-keyword">to</span> <span class="hljs-string">'nas'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> actmonitor.* <span class="hljs-keyword">to</span> <span class="hljs-string">'actmonitor'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> rptmgn.* <span class="hljs-keyword">to</span> <span class="hljs-string">'rptmgn'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> navmetas.* <span class="hljs-keyword">to</span> <span class="hljs-string">'navmetas'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> sentry.* <span class="hljs-keyword">to</span> <span class="hljs-string">'sentry'</span>@<span class="hljs-string">'%'</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">'Aiot2019!@$'</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br>flush <span class="hljs-keyword">privileges</span>;<br>mysql&gt; <span class="hljs-keyword">show</span> databases;<br>+<span class="hljs-comment">--------------------+</span><br>| <span class="hljs-keyword">Database</span>           |<br>+<span class="hljs-comment">--------------------+</span><br>| information_schema |<br>| actmonitor         |<br>| hive               |<br>| hue                |<br>| mysql              |<br>| nas                |<br>| navmetas           |<br>| oozie              |<br>| performance_schema |<br>| rptmgn             |<br>| scm                |<br>| sentry             |<br>| sys                |<br>+<span class="hljs-comment">--------------------+</span><br><span class="hljs-number">13</span> <span class="hljs-keyword">rows</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure>

<p>#####配置httpd（主节点）：</p>
<p>[aiot@cdh1-172-17-4-9 aiot]$ sudo vim /etc/httpd/conf/httpd.conf</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><code class="hljs jboss-cli">找到增加 <span class="hljs-string">.parcel</span><br>  AddType application/x-gzip <span class="hljs-string">.gz</span> <span class="hljs-string">.tgz</span> <span class="hljs-string">.parcel</span><br>找到修改：<br>&lt;Directory <span class="hljs-string">"/var/www/cgi-bin"</span>&gt;<br>    AllowOverride None<br>    Options FollowSymLinks<br>    Order deny,allow<br>    allow from all<br>&lt;<span class="hljs-string">/Directory</span>&gt;<br></code></pre></td></tr></table></figure>

<p>[aiot@cdh1-172-17-4-9 aiot]$ sudo systemctl start httpd<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo systemctl status httpd<br>● httpd.service - The Apache HTTP Server<br>   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)<br>   Active: active (running) since Mon 2019-12-23 12:23:22 CST; 2min 18s ago<br>     Docs: man:httpd(8)<br>           man:apachectl(8)<br> Main PID: 31242 (httpd)<br>   Status: “Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec”<br>   CGroup: /system.slice/httpd.service<br>           ├─31242 /usr/sbin/httpd -DFOREGROUND<br>           ├─31243 /usr/sbin/httpd -DFOREGROUND<br>           ├─31244 /usr/sbin/httpd -DFOREGROUND<br>           ├─31245 /usr/sbin/httpd -DFOREGROUND<br>           ├─31246 /usr/sbin/httpd -DFOREGROUND<br>           └─31247 /usr/sbin/httpd -DFOREGROUND<br>Dec 23 12:23:22 cdh1-172-17-4-9 systemd[1]: Starting The Apache HTTP Server…<br>Dec 23 12:23:22 cdh1-172-17-4-9 httpd[31242]: AH00558: httpd: Could not reliably determine the server’s fully qua…ssage<br>Dec 23 12:23:22 cdh1-172-17-4-9 systemd[1]: Started The Apache HTTP Server.<br>Hint: Some lines were ellipsized, use -l to show in full.<br>[aiot@cdh1-172-17-4-9 aiot]$ sudo systemctl enable httpd<br>Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.</p>
<p>#####搭建本地仓库（海外服务器很快（主节点）：）</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cdh6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/parcels/</span>CDH-<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1</span>.cdh6.<span class="hljs-number">2.0</span>.p0.<span class="hljs-number">967373</span>-el7.parcel -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cdh6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/parcels/</span>CDH-<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1</span>.cdh6.<span class="hljs-number">2.0</span>.p0.<span class="hljs-number">967373</span>-el7.parcel.sha1 -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cdh6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/parcels/</span>CDH-<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1</span>.cdh6.<span class="hljs-number">2.0</span>.p0.<span class="hljs-number">967373</span>-el7.parcel.sha256 -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cdh6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/parcels/m</span>anifest.json -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/gplextras6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/parcels/</span> -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cm6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/redhat7/</span> -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cm6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/allkeys.asc -P /</span>var<span class="hljs-regexp">/www/</span>html<span class="hljs-regexp">/cloudera-repos/</span>cm6<span class="hljs-regexp">/6.2.0/</span><br> sudo wget https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/cm6/</span><span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><span class="hljs-regexp">/cloudera-manager-installer.bin -P /</span>var<span class="hljs-regexp">/www/</span>html<span class="hljs-regexp">/cloudera-repos/</span>cm6<span class="hljs-regexp">/6.2.0/</span><br>sudo wget --recursive --no-parent --no-host-directories https:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/kafka/</span>parcels<span class="hljs-regexp">/4/</span> -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br>sudo wget --recursive --no-parent --no-host-directories http:<span class="hljs-regexp">//</span>archive.cloudera.com<span class="hljs-regexp">/sqoop-connectors/</span>parcels<span class="hljs-regexp">/latest/</span> -P <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>cloudera-repos<br></code></pre></td></tr></table></figure>

<p>[aiot@cdh2-172-17-4-10 ~]$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/cdh6<br>[aiot@cdh2-172-17-4-10 ~]$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/gplextras6<br>[aiot@cdh2-172-17-4-10 ~]$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/cm6<br>[aiot@cdh2-172-17-4-10 ~]$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/kafka<br>[aiot@cdh2-172-17-4-10 ~]$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/sqoop-connectors</p>
<p>#####配置本地yum源（所有节点，源指向主节点）：<br>[aiot@cdh1-172-17-4-9 ~]$ cat /etc/yum.repos.d/cloudera-manager6.2.0.repo</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[cloudera-manager]</span><br><span class="hljs-attr">name</span>=Cloudera Manager <span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><br><span class="hljs-attr">baseurl</span>=http://<span class="hljs-number">172.17</span>.<span class="hljs-number">4.9</span>/cloudera-repos/cm6/<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>/redhat7/yum/<br><span class="hljs-attr">gpgkey</span>=http://<span class="hljs-number">172.17</span>.<span class="hljs-number">4.9</span>/cloudera-repos/cm6/<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>/redhat7/yum/RPM-GPG-KEY-cloudera<br><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">autorefresh</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">type</span>=rpm-md<br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ cat /etc/yum.repos.d/cloudera-manager-gplextras6.2.0.repo</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[cloudera-manager-gplextras]</span><br><span class="hljs-attr">name</span>=Cloudera Manager gplextras <span class="hljs-number">6.2</span>.<span class="hljs-number">0</span><br><span class="hljs-attr">baseurl</span>=http://<span class="hljs-number">172.17</span>.<span class="hljs-number">4.9</span>/cloudera-repos/gplextras6/<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>/redhat7/yum/<br><span class="hljs-attr">gpgkey</span>=http://<span class="hljs-number">172.17</span>.<span class="hljs-number">4.9</span>/cloudera-repos/gplextras6/<span class="hljs-number">6.2</span>.<span class="hljs-number">0</span>/redhat7/yum/RPM-GPG-KEY-cloudera<br><span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">autorefresh</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">type</span>=rpm-md<br></code></pre></td></tr></table></figure>

<p>sudo wget –recursive –no-parent –no-host-directories <a href="http://archive.cloudera.com/gplextras6/6.2.0/redhat7/yum/repodata/" target="_blank" rel="noopener">http://archive.cloudera.com/gplextras6/6.2.0/redhat7/yum/repodata/</a> -P /var/www/html/cloudera-repos</p>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo yum clean all<br>[aiot@cdh1-172-17-4-9 ~]$ sudo yum makecache<br>#####更新系统<br>[aiot@cdh1-172-17-4-9 ~]$ sudo yum update</p>
<p>#####安装cloudera<br>[aiot@cdh1-172-17-4-9 ~]$ sudo yum -y search cloudera-manager</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">Loaded plugins: fastestmirror, langpacks<br>Loading<span class="hljs-built_in"> mirror </span>speeds <span class="hljs-keyword">from</span> cached hostfile<br>============================================= N/S matched: cloudera-manager =============================================<br>cloudera-manager-agent.x86_64 : The Cloudera Manager Agent<br>cloudera-manager-daemons.x86_64 : Provides daemons <span class="hljs-keyword">for</span> monitoring Hadoop <span class="hljs-keyword">and</span> related tools.<br>cloudera-manager-server.x86_64 : The Cloudera Manager Server<br>cloudera-manager-server-db-2.x86_64 : Embedded database <span class="hljs-keyword">for</span> the Cloudera Manager Server<br>  Name <span class="hljs-keyword">and</span> summary matches only, use <span class="hljs-string">"search all"</span> <span class="hljs-keyword">for</span> everything.<br></code></pre></td></tr></table></figure>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo yum install cloudera-manager-daemons  cloudera-manager-server<br>[aiot@cdh1-172-17-4-9 ~]$ sudo -E /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm ‘Aiot2019!@$’<br>···<br>JAVA_HOME=/usr/java/jdk<br>Verifying that we can write to /etc/cloudera-scm-server<br>Creating SCM configuration file in /etc/cloudera-scm-server<br>Executing:  /usr/java/jdk/bin/java -cp /usr/share/java/mysql-connector-java.jar:/usr/share/java/oracle-connector-java.jar:/usr/share/java/postgresql-connector-java.jar:/opt/cloudera/cm/schema/../lib/* com.cloudera.enterprise.dbutil.DbCommandExecutor /etc/cloudera-scm-server/db.properties com.cloudera.cmf.db.<br>Mon Dec 23 15:24:48 CST 2019 WARN: Establishing SSL connection without server’s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn’t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to ‘false’. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.<br>[                          main] DbCommandExecutor              INFO  Successfully connected to database.<br>All done, your SCM database is configured correctly!<br>···</p>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo mkdir -p /data/cloudera/parcels<br>[aiot@cdh1-172-17-4-9 ~]$ sudo chown -R cloudera-scm:cloudera-scm /data/cloudera/parcels<br>[aiot@cdh1-172-17-4-9 ~]$ sudo chown -R cloudera-scm:cloudera-scm /data/cloudera<br>[aiot@cdh1-172-17-4-9 ~]$ sudo mkdir -p /data/cloudera/parcel-repo<br>[aiot@cdh1-172-17-4-9 ~]$ sudo chown -R cloudera-scm:cloudera-scm /data/cloudera/parcel-repo<br>[aiot@cdh1-172-17-4-9 ~]$ sudo chown -R cloudera-scm:cloudera-scm /data/cloudera<br>[aiot@cdh1-172-17-4-9 ~]$ sudo mkdir -p /data/cloudera/parcel-cache<br>[aiot@cdh1-172-17-4-9 ~]$ sudo chown -R cloudera-scm:cloudera-scm /data/cloudera/parcel-cache<br>[aiot@cdh1-172-17-4-9 ~]$ sudo chown -R cloudera-scm:cloudera-scm /data/cloudera/</p>
<p>[aiot@cdh1-172-17-4-9 ~]$ sudo systemctl start cloudera-scm-server<br>[aiot@cdh1-172-17-4-9 ~]$ sudo systemctl status cloudera-scm-server<br>[aiot@cdh1-172-17-4-9 ~]$ sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><span class="hljs-number">2019</span><span class="hljs-number">-12</span><span class="hljs-number">-23</span> <span class="hljs-number">15</span>:<span class="hljs-number">26</span>:<span class="hljs-number">22</span>,<span class="hljs-number">723</span> INFO WebServerImpl:com.cloudera.server.cmf.WebServerImpl: Started Jetty server.<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>CDH</tag>
      </tags>
  </entry>
  <entry>
    <title>2018工作回顾</title>
    <url>/2019/01/14/36_2018%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>一把辛酸泪，不过每一个小白都总会成长的，回头看了看自己写过的周报，一年半的时间过得太快，自己的成长也是很快，不单单是技能还有心态。。在此也总结下自己的工作任务吧，记录下自己做过什么，能做什么，以便日后回头看也能想起自己当时走过的路。。。2019加油！！</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript"><br>工作任务一<br>极无双国服线上大版本更新部署合服维护<br>负责极无双国服线上的所有维护工作，主要包括大版本更新上线部署，合服维护部署，配合服务器工程师快速查询线上Bug并修复维护和监控报警处理工作<br>保证极无双国服线上服的正常更新和稳定运行，规范线上维护流程和更新迭代合服工具<br><br>工作任务二<br>极无双国服大数据工作<br>配合大数据的工作，主要包括线上服产生的日志定时上传和发行的数据问题对接<br>保证极无双国服日志上传任务的正常运行和大数据工作的正常交接<br><br>工作任务三<br>极无双国服渠道服提审部署解决支付问题<br>负责极无双国服渠道提审服的部署维护，解决提审服支付不到账，提审服无法登陆等问题<br>保证极无双国服提审服的稳定运行和正常提审<br><br>工作任务四<br>王牌测试服线上服部署维护<br>配合王牌测试工作及维护更新部署和王牌服务器登录权限的划分<br>保证王牌测试服正常更新和稳定测试以及服务器权限的控制<br><br>工作任务五<br>帮助小龙熟悉内网qa服及国服渠道服和线上服的业务流程和操作方法<br>帮助小龙尽快熟悉内网qa服的更新维护部署工作、配合qa进行国服提审服的维护部署工作、国服线上服的维护部署工作<br>有助于运维工作的正常快速运行<br><br>总结<br><span class="hljs-number">2018</span>年整体工作正常完成，保证了极无双国服每个版本的正常上线更新部署，积极配合服务器工程师快速定位问题及解决问题<br>对业务的流程和操作更加熟悉，可以快速完成工作和解决问题<br><span class="hljs-number">2019</span>年要提高专业知识和技能，学习新的技能例如Python编程，提高工作效率以及运维工作自动化、规范运维流程<br><br><br>-----<br><br>周报<br><br><span class="hljs-number">01.07</span><br>国服：    <br>新开一台数据库机器，拆分<span class="hljs-number">204</span>大区数据库<br>全大区合服维护<br>更新部署<br>服务器增配迁移gamex<br>修改监控项，增加服务器聚合数据<br>增加<span class="hljs-number">204</span>大区新数据库userinfo <span class="hljs-keyword">from</span> backup任务<br>更新userinfo  <span class="hljs-keyword">from</span> backup 工具<br>部署渠道提审服<br><br>大数据：<br>运营所需client log 导kibana<br><span class="hljs-number">204</span> <span class="hljs-number">201</span>大区新加的服务器 gamex logics log 上传阿里云<br><br><br><span class="hljs-number">01.02</span><br>国服： 调整线上Dynamodb表容量<br>       跑线上工具补翅膀<br>       <span class="hljs-number">204</span>大区<span class="hljs-number">4209</span><span class="hljs-number">-4216</span> 单服维护<br>内网：  新员工账号创建<br>王牌：  部署渠道服<br><br><br><span class="hljs-number">12</span>月<span class="hljs-number">24</span>日：<br>国服线上：<br>更新youmi_cn<br>修改每日上传log脚本和任务<br>预留实例续费<br>线上维护部署<br>检查elasticsearch报错<br>修改导MySQL邮件报警<br>清理线上机器磁盘<br>部署渠道服<br><br>内网：<br>新员工账号创建<br>开发大区部署youmi_dev<br><br>大数据：<br>发行补上传漏传数据<br><br><br><span class="hljs-number">12</span>月<span class="hljs-number">17</span>日：<br>国服线上：<br>调整全区Dynamodb Mail表容量<br>清理<span class="hljs-number">200</span> <span class="hljs-number">201</span> <span class="hljs-number">202</span> <span class="hljs-number">203</span>大区旧的数据库db<br><span class="hljs-number">710</span>上线部署<br><span class="hljs-number">200</span> <span class="hljs-number">204</span> 数据库拆分<br><span class="hljs-number">202</span>大区gamex迁移合并机器<br>grafana迁移jenkins<br>MySQL降配<br><br>大数据：<br>open <span class="hljs-number">11</span><span class="hljs-number">-28</span> index 查询大数据<br><span class="hljs-number">12</span><span class="hljs-number">-07</span> <span class="hljs-number">-12</span><span class="hljs-number">-11</span> auth logics 上传阿里云<br>国服log每小时上传S3<br>OSS log 上传阿里云任务<br><br><br><span class="hljs-number">12</span>月<span class="hljs-number">11</span>日：<br>国服： 	 优化 run <span class="hljs-keyword">from</span> backup  发行补数据<br>            <span class="hljs-number">200</span> <span class="hljs-number">201</span> <span class="hljs-number">202</span>大区合服维护<br>            测试etcd备份还原<br>            增加全区 auth crosservice  multiplay logics log  上传S3备份任务<br>            增加 auth crosservice  multiplay logics log  上传阿里云任务<br>            清理数据库db<br>            jenkins邮件报警设置<br>王牌：	  更新王牌渠道服<br><br><span class="hljs-number">12</span>月<span class="hljs-number">3</span>日：<br>国服：<br>        补<span class="hljs-number">12</span><span class="hljs-number">-01</span> <span class="hljs-number">12</span><span class="hljs-number">-02</span> <span class="hljs-number">12</span><span class="hljs-number">-03</span> userinfo给发行<br>        更改国服userinfo上传ftp的方式和时间<br>        更改run <span class="hljs-keyword">from</span> backup为<span class="hljs-number">5</span>台机器执行<br>王牌：<br>        线上jumpserver权限划分<br>        机器升配<br>        线上更新部署<br>日本：<br>        更新渠道服GM<br>内网：<br>        更改<span class="hljs-number">101</span>大区 gamex logics   multiplay  crosservice  tdagent配置<br>        解决<span class="hljs-number">102</span>大区gatex部署问题<br><br><br><span class="hljs-number">11</span>月<span class="hljs-number">26</span>日：<br>国服：<br>        新开一台机器 all-redis2 ，迁移线上全区的wspvp csrob<br>        新建一张Dynamodb表 OppoGift<br>        <span class="hljs-number">200</span>、<span class="hljs-number">202</span>大区数据库降配<br>        国服<span class="hljs-number">700</span>上线部署<br>        整理国服<span class="hljs-number">202</span>大区grafana监控项<br>        替换国服线上userinfo_to_db工具<br>        国服预留实例到期续费<br>日本：<br>        <span class="hljs-number">6300</span>上线部署<br>内网：<br>        <span class="hljs-number">201</span>大区原始支付log  <span class="hljs-number">9</span>月<span class="hljs-number">-11</span>月 的 发给侯悦<br>        在跳板机起<span class="hljs-number">204</span>大区ardb备库给张震<br>        测试userinfo_to_db工具<br>        镜像服起线上crosservice备库给思瀚<br><br><span class="hljs-number">11</span>月<span class="hljs-number">19</span>日：<br>国服： 	 大数据上传延迟上传时间<br>            替换userinfo_from_backup工具<br>            预留实例到期续费<br>            更新 youmi_imcc_cn<br>            修改redis备份时间为 H(<span class="hljs-number">01</span><span class="hljs-number">-02</span>) <span class="hljs-number">3</span>,<span class="hljs-number">11</span> * * *<br>            镜像服启动线上数据库备份测试清档<br>            给发行补数据<br>            扩大ES磁盘为<span class="hljs-number">900</span>G<br>QA： 修改gift-sender部署脚本<br><br><br><span class="hljs-number">11</span>月<span class="hljs-number">12</span>日：<br>国服： 	 更改全大区<span class="hljs-number">5</span>个redis和ardb的slowlog为<span class="hljs-number">1000000</span>         <span class="hljs-number">1</span>秒<br>            替换线上userinfo_from_backup  userinfo_to_db工具   更改执行方式<br>            国服更新维护 降配<br>            更改tools上传时间<br>            调高<span class="hljs-number">240</span>数据库的内存报警为<span class="hljs-number">21</span>G<br>            测试userinfo_from_bak  userinfo_to_db工具<br>            国服预留实例续费<br><br><span class="hljs-number">11</span>月<span class="hljs-number">5</span>日：<br>国服：     ES调高limite限制为<span class="hljs-number">90</span>%<br>            测试run userinfo <span class="hljs-keyword">from</span> bak工具<br>            调整 Userinfo dynamodb 表容量<br>            打开ES <span class="hljs-number">10</span>月份的index            <br>            开机器搭建国服ES新集群        <br>            添加auth multiplay  crosservice新的索引<br>            修改ES curator<br><br>王牌：      部署王牌线上服务<br>            增加<span class="hljs-number">300</span>大区线上监控项<br><br>内网：      删除已停用的wiki账号<br><br><br><span class="hljs-number">10</span>月<span class="hljs-number">29</span>日：<br>国服：       清理国服跳板机磁盘，删除测试的数据库备份文件，删除国服<span class="hljs-number">4</span>个月之前的userinfo<br>             跑服务器线上recall工具<br>             s3上的 userinfo fordb 大数据全部上传阿里云<br>             测试userinfo run <span class="hljs-keyword">from</span> backup  userinfo to mysql 工具<br>             调高 userinfo dynamodb 表容量<br>             关闭了ES <span class="hljs-number">9</span>月的index<br>             关闭了ES 按周存储的索引<br>             研究curator 管理ES  index    跳板机设置定时任务<br><br>王牌：       线上jumpserver服务器权限划分<br>              payx导kibana<br>              <span class="hljs-number">300</span>部署提交<br><br><span class="hljs-number">10</span>月<span class="hljs-number">24</span>日：<br>国服：     <span class="hljs-number">200</span> <span class="hljs-number">202</span>大区单服维护部署gamex<br>            大数据<span class="hljs-number">22</span> <span class="hljs-number">23</span>号数据 重新上传阿里云<br>            国服<span class="hljs-number">640</span>上线部署<br>            改进大数据跑userinfo任务 增加清理log步骤<br><br><span class="hljs-number">10</span>月<span class="hljs-number">15</span>日：<br>国服：      修改备份脚本为<span class="hljs-number">45</span>分钟 以解决备份时间无限延长导致userinfo失败问题<br>            补<span class="hljs-number">14</span>日大数据 userinfo<br>            研究 zabbix 监控 gamex进程 报警<br>            整理国服 grafana 监控<br>            <span class="hljs-number">200</span> <span class="hljs-number">202</span> <span class="hljs-number">204</span> 渠道服新增加gamex测试回归<br>            部署渠道提审服<br>            multiplay logics log 导入kibana<br><br>内网：       整理confluence ES报错文档<br>             跳板机上测试userinfo工具<br><br><span class="hljs-number">10</span>月<span class="hljs-number">8</span>日：<br>国服：      补charge log 给发行<br>            删除ES <span class="hljs-number">8</span>月的index<br>            拆分crosservice监控项<br>            解决kibana崩溃问题<br>            渠道服降配<br>            大数据上传阿里云<br>            尝试在aws部署zabbix<br>            线上单服维护<br><br>海外：      补韩国<span class="hljs-number">7</span>号userinfo  给侯悦<br>            部署HMT THA gmtools<br><br><br><span class="hljs-number">9</span>月<span class="hljs-number">25</span>日：<br>国服：      写脚本自动检测load并抓取pprof<br>            替换大数据userinfo工具<br>            测试 userinfo_from_backup工具<br>            <span class="hljs-number">204</span>大区开新机器初始化<br>            补大数据 userinfo<br>            修改redis内存报警<br>            close ES <span class="hljs-number">8</span>月的 index<br>            研究 collectd 插件 解决新开机器 df 监控问题<br>            <span class="hljs-number">204</span>大区部署脚本增加条件判断<br>            charge log 按小时上传 ftp<br>            添加全区multiplay占用内存报警<br><br><span class="hljs-number">9</span>月<span class="hljs-number">17</span>日：<br>国服： 线上<span class="hljs-number">200</span> <span class="hljs-number">202</span> <span class="hljs-number">201</span>大区合服维护，更新服务，迁移gamex合并机器<br>            elasticsearch 删除<span class="hljs-number">7</span>月的index<br>            测试userinfo_from_backup工具<br>            国服<span class="hljs-number">630</span>上线<br>            更改CCU监控项<br>            补<span class="hljs-number">9</span>月<span class="hljs-number">20</span>日数据<br><br><span class="hljs-number">9</span>月<span class="hljs-number">10</span>日：<br>国服：   s3 log 定时上传阿里云任务<br>         补 <span class="hljs-number">7</span>号 - <span class="hljs-number">9</span>号 userinfo数据<br>         增加定时清理redisstorage机器磁盘任务<br>         MySQL自动备份并保留近<span class="hljs-number">5</span>天的备份脚本<br>         用<span class="hljs-number">201</span>大区的备份数据测试userinfo工具<br>         put pay gamex logics log 上传S3 增加 specialday<br>         清理上次合服的DB<br>王牌：   升级jumpserver版本<br>内网：   confluence 新增 sftp文档<br>         jumpserver登录说明文档<br><br><span class="hljs-number">9</span>月<span class="hljs-number">3</span>日：<br>国服： 修改支付log上传S3任务<br>       kibana增加<span class="hljs-number">204</span>大区multiplay<br>       支付logics log按日期分目录上传<br>        gift_sender添加<span class="hljs-number">204</span>大区配置<br>        线上部署<br>        替换 userinfo_to_db 工具<br>        服务器线上跑工具<br><br>内网： jenkins安装go <span class="hljs-number">1.10</span><span class="hljs-number">.4</span><br>       修改主干multiplay编包环境为go1<span class="hljs-number">.10</span><span class="hljs-number">.4</span><br>       整理confluence服务器账户权限文档<br><br>王牌： 修改王牌etcd<br>       Etcd 磁盘挂载<br>       jenkins权限控制<br><br>海外： 更改日本服务器AWS-console权限<br><br><span class="hljs-number">8</span>月<span class="hljs-number">27</span>日：<br>国服： 修改GM部署脚本<br>       测试跑 userinfo 的任务<br>       线上维护更新multiplay<br>       渠道服祈愿添加 etcd value<br>       MySQL增加库和授权<br>       更新部署   合并<span class="hljs-number">200</span>大区 <span class="hljs-number">202</span>大区gamex机器<br>       <span class="hljs-number">204</span>大区上线部署<br>       添加<span class="hljs-number">204</span>大区监控<br>       添加<span class="hljs-number">204</span>的 kibana index<br><br>王牌： 修改 etcd 启动脚本和jumpserver<br>       搭建etcd-v3<br><br><span class="hljs-number">8</span>月<span class="hljs-number">20</span>日：<br>国服： 线上<span class="hljs-number">200</span>大区更新部署<br>       grafana升级nginx为<span class="hljs-number">1.12</span><span class="hljs-number">.0</span><br>       替换userinfo_to_db 和 userinfo_from_backup工具<br>       线上跨服服务更新维护<br>       国服<span class="hljs-number">620</span>上线部署<br>       补国服userinfo数据<br>王牌： 整理腾讯云搭建信息<br><br><span class="hljs-number">8</span>月<span class="hljs-number">16</span>日：<br>国服： 部署<span class="hljs-number">200</span> <span class="hljs-number">201</span> <span class="hljs-number">202</span> <span class="hljs-number">204</span>渠道提审服<br>王牌： 腾讯云搭建王牌 etcd-v3  grafana ELK  jenkins<br>内网： 支持小龙部署镜像服<br><br><span class="hljs-number">8</span>月<span class="hljs-number">6</span>日：<br>国服： 部署<span class="hljs-number">204</span>大区<br>       部署<span class="hljs-number">200</span> <span class="hljs-number">201</span> <span class="hljs-number">202</span>渠道测试服<br>       <span class="hljs-number">200</span>合服<br>       线上维护<br>海外： 修改日本tdagent文件<br><br>王牌： 腾讯云搭建基础服务<br><br><span class="hljs-number">7</span>月<span class="hljs-number">30</span>日：<br>国服： 带小龙部署国服<span class="hljs-number">200</span> <span class="hljs-number">202</span> 渠道服<br>       部署<span class="hljs-number">204</span>渠道服<br>       线上全区维护 更新部署<br><br>内网： 创建 更新confluence文档<br>       <span class="hljs-number">101</span>大区新增multiplay埋点<br><br>海外： 查日本公告问题<br>       部署韩国线上 gift_sender<br>       部署韩国渠道提审服<br><br><span class="hljs-number">7</span>月<span class="hljs-number">23</span>日：<br>国服：  给小龙讲解合服<br>        <span class="hljs-number">200</span> <span class="hljs-number">201</span> <span class="hljs-number">202</span>合服并部署各个服务<br>        修正logics log字段问题<br>        和小龙开<span class="hljs-number">202</span>新服<br>        部署渠道服<br>王牌：  王牌userinfo导MySQL<br>内网：  镜像服gatex测试<br>        部署镜像服<br><br>海外：  修复<span class="hljs-number">205</span>大区elasticsearch<br><br><span class="hljs-number">7</span>月<span class="hljs-number">16</span>日：<br>国服:    检查<span class="hljs-number">5</span>个数据库路径是否为正常路径<br>         大数据MySQL备份S3<br>         渠道服GM etcd_root和线上分开 增加etcd_root_channel键值<br>         更改渠道服GM部署脚本<br>         清理线上实例磁盘<br>         国服<span class="hljs-number">610</span>上线更新部署<br>          搭建部署<span class="hljs-number">204</span>大区渠道服<br><br>海外： 帮助小龙做韩国镜像服的导档及导账号<br>       日本和韩国线上jenkins权限控制<br>王牌： 清理<span class="hljs-number">150</span>大区磁盘 log<br>       <span class="hljs-number">156</span>gamex增加dynamo update权限<br>内网： 增加<span class="hljs-number">101</span> crosservice 埋点<br>       整理confluence文档<br><br><span class="hljs-number">7</span>月<span class="hljs-number">9</span>日：<br>国服： 部署玩家体验服<br>       体验服导账号<br>       增加玩家体验服的监控项<br>       体验服清档<br>       替换EMR秘钥对<br>       激活码<br>       体验服logic log导kibana<br>       userinfo fordb  jenkins 替代 crontab<br>       部署渠道提审服<br>       新服登录问题<br>内网:  创建入职wiki账号<br>       客户端开内网jenkins账号<br>       部署镜像服及导档  <br>海外： 韩国镜像服<br><br><span class="hljs-number">7</span>月<span class="hljs-number">2</span>日：<br>国服:   搭建部署<span class="hljs-number">204</span>大区<br>        给小龙开jenkins国服账号<br>        带小龙开<span class="hljs-number">200</span>大区新服（<span class="hljs-number">1201</span> <span class="hljs-number">-1210</span>）<br>        更新userinfo<br><br><span class="hljs-number">6</span>月<span class="hljs-number">25</span>日：<br>国服： 新增anticheat_multiplay埋点<br>       国服大数据工作<br>       <span class="hljs-number">201</span>大区<span class="hljs-number">600</span>上线部署<br>       大数据数据库迁移<br>       部署<span class="hljs-number">202</span>渠道服<br><br>海外： 港澳台大数据工作<br>       部署港澳台提审服<br><br>内网： 给小龙讲解游戏架构、运维架构、编包部署过程<br>       镜像服合服测试<br><br><span class="hljs-number">6</span>月<span class="hljs-number">19</span>日：<br>国服： <span class="hljs-number">600</span>上线部署<br>       <span class="hljs-number">202</span>合并实例 迁移gamex<br>       国服大数据工作<br>       激活码<br>       给小龙开了内网jenkins权限和跳板机权限<br>       给大数据开国服线上和港澳台线上jenkins权限<br>       带小龙  <span class="hljs-number">201</span>开新服（ <span class="hljs-number">2161</span> - <span class="hljs-number">2170</span>  ）<br>海外： 港澳台大数据工作<br>       部署泰国线上gmtools<br>内网：  部署镜像服<br>        kibana增加<span class="hljs-number">155</span>大区埋点<br><br><span class="hljs-number">6</span>月<span class="hljs-number">11</span>日：<br>国服： 补<span class="hljs-number">10</span>号的每日大数据<br>       激活码<br>       优化大数据导MySQL任务<br>       国服支付log分目录<br>       部署渠道提审服<br>       <span class="hljs-number">202</span>新服 <span class="hljs-number">3292</span> - <span class="hljs-number">3301</span><br><br>海外：  补港澳台每日大数据<br>        日本每日大数据导mysql<br><br>内网：  部署 <span class="hljs-number">3</span>v3 玩家体验服<br>        增加 <span class="hljs-number">3</span>V3 gamex crossservice multiplay埋点<br>        体验服玩家导号<br>        部署镜像服及导档<br>        给小龙讲解开新服步骤   生成激活码过程<br><br><span class="hljs-number">6</span>月<span class="hljs-number">6</span>日：<br>国服： 激活码<br>       部署玩家体验服（<span class="hljs-number">200</span>大区提审服）<br>海外： 港澳台每日大数据<br>       HMT kibana 增加 国服<span class="hljs-number">201</span>渠道测试服的logics<br>内网： 迁移wiki文档到confluence<br>IT：   固定资产统计<br>       装SSD  显卡驱动<br><br><span class="hljs-number">5</span>月<span class="hljs-number">28</span>日：<br>国服： <span class="hljs-number">200</span> 合服（<span class="hljs-number">1157</span> - <span class="hljs-number">1184</span>）<br>       <span class="hljs-number">201</span>合服 （<span class="hljs-number">2115</span> - <span class="hljs-number">2138</span>）<br>       清理旧的合服DB<br>       跑<span class="hljs-number">28</span> <span class="hljs-number">29</span> <span class="hljs-number">31</span>号大数据<br>       <span class="hljs-number">202</span>合服 （<span class="hljs-number">3199</span> - <span class="hljs-number">3230</span>）<br>       <span class="hljs-number">201</span>开新服 （<span class="hljs-number">2153</span> - <span class="hljs-number">2160</span>）<br>海外： 补港澳台 <span class="hljs-number">25</span> <span class="hljs-number">-28</span> 大数据<br>       补日本 <span class="hljs-number">28</span> <span class="hljs-number">29</span> 大数据<br>内网： <span class="hljs-number">101</span>大区问题<br>       整理wiki文档<br><br><br><span class="hljs-number">5</span>月<span class="hljs-number">21</span>日：<br>国服： 重启<span class="hljs-number">202</span>渠道提审服gamex机器<br>       补<span class="hljs-number">18</span> <span class="hljs-number">19</span> <span class="hljs-number">20</span>的 userinfo<br>       激活码<br>       userinfo fordb to mysql任务<br>       增加每日大数据导入mysql任务<br><br>海外： <span class="hljs-number">206</span>  <span class="hljs-number">207</span> <span class="hljs-number">209</span>大区 spark 补数据<br>       补<span class="hljs-number">23</span> <span class="hljs-number">24</span>号 HMT 大数据<br>       HMT 增加 LVT spark 任务<br><br>内网： 解决<span class="hljs-number">101</span>大区无法登陆问题<br>       解决往内网ftp上传国服userinfo问题<br>       资产统计<br>       游戏架构讲解<br>       设置VPN<br>       QA大区 anticheat_shard    anticheat_multiplayer  导入kibana tdagent配置<br><br><br><span class="hljs-number">5</span>月<span class="hljs-number">14</span>日：<br>国服： multiplay导入kibana问题<br>       <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1196</span> - <span class="hljs-number">1200</span>）<br>       <span class="hljs-number">540</span>上线更新部署<br>       <span class="hljs-number">201</span> gamex 合并迁移<br>       增加 Anticheat 导入 kibana   tdagent配置<br>       <span class="hljs-number">201</span>开新服 （<span class="hljs-number">2148</span> - <span class="hljs-number">2152</span>）<br>海外： 欧美地区服务搭建<br>       部署日本渠道服<br>内网： QA大区<br><br><br><span class="hljs-number">5</span>月<span class="hljs-number">5</span>日：<br>国服： 清理elasticsearch<br>       <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3282</span> - <span class="hljs-number">3291</span>）<br>海外： <span class="hljs-number">205</span> spark 脚本<br>       HMT线上jenkins服务器权限控制<br>       THA线上Dynamodb容量定时任务<br>       搭建欧美大区<br>内网： kibana增加qa服的登录前埋点<br>       镜像服导档 部署<br><br><span class="hljs-number">5</span>月<span class="hljs-number">2</span>日：<br>国服： 整理groovy脚本<br>       multiplay导入kibana问题<br>       线上维护更新<br>海外： <span class="hljs-number">209</span>镜像服<br>王牌： 新增spark脚本<br>内网： 镜像服<span class="hljs-number">5300</span>合服测试<br>       调整内网机器实例类型<br><br><span class="hljs-number">4</span>月<span class="hljs-number">23</span>日：<br>国服： userinfo  charge<br>       线上更新维护<br>海外： 港澳台激活码<br>内网： <span class="hljs-number">101</span>大区<br>       镜像服合服测试<br>王牌： <span class="hljs-number">156</span> gamex 埋点<br>       部署<span class="hljs-number">155</span>大区<br>       <span class="hljs-number">156</span>大区TAP测试部署与监控<br>       <span class="hljs-number">156</span> spark<br><br><span class="hljs-number">4</span>月<span class="hljs-number">16</span>日：<br>国服： <span class="hljs-number">201</span>合服（<span class="hljs-number">2003</span> - <span class="hljs-number">2112</span>）<br>       userinfo<br>       spark<br>       <span class="hljs-number">202</span>合服 （<span class="hljs-number">3230</span> - <span class="hljs-number">3261</span>）<br>       清空 GMinfo Dynamodb表<br>       国服<span class="hljs-number">530</span>上线<br>       更改每日上传charge方式<br>       激活码<br>海外： HMT公告问题<br>内网： 资产统计<br>       增加gmtools_web部署脚本和jenkins任务<br>王牌： 整理etcd<br>       部署<span class="hljs-number">156</span>大区<br>       添加GiftCodeBatch Dynamodb策略<br><br><span class="hljs-number">4</span>月<span class="hljs-number">8</span>日：<br>国服： Spark<br>       更改每日上传charge的目录<br>       激活码<br>       每日上传charge去重<br>       <span class="hljs-number">202</span>开新服（<span class="hljs-number">3276</span> - <span class="hljs-number">3281</span>）<br>       部署渠道提审服<br>海外： 部署HMT渠道支付<br>       部署HMT渠道gamex<br>内网： 部署镜像服及线上存档<br>       jenkins升级go到<span class="hljs-number">1.9</span><span class="hljs-number">.5</span><br>王牌： <span class="hljs-number">150</span>增加client log 埋点<br><br><span class="hljs-number">4</span>月<span class="hljs-number">2</span>日：<br>国服： Spark<br>海外： HMT新增Spark脚本<br>       HMT新增mysql脚本job<br>       HMT userinfo<br>内网： 测试修改 QA大区 etcd  groovy 脚本<br>王牌： 增加clientbilog<br><br><span class="hljs-number">3</span>月<span class="hljs-number">26</span>日：<br>国服： Spark<br>       线上维护更新<br>       补<span class="hljs-number">3</span>月<span class="hljs-number">22</span>日的数据<br>       <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1188</span><span class="hljs-number">-1195</span>）<br>       <span class="hljs-number">201</span>大区开新服 （<span class="hljs-number">2138</span><span class="hljs-number">-2147</span>）<br>       清理年前合服DB<br>海外： HMT新增bigdata  spark<br>内网： 搭建<span class="hljs-number">99</span>大区，添加支持QA修改时间的脚本<br>王牌： 王牌etcd<br>       部署王牌<span class="hljs-number">156</span>大区<br>IT：   资产盘点<br><br><br><span class="hljs-number">3</span>月<span class="hljs-number">19</span>日：<br>国服：<br>		   Spark<br>           <span class="hljs-number">201</span>大区新服（<span class="hljs-number">2133</span><span class="hljs-number">-2137</span>）<br>           国服<span class="hljs-number">5.20</span><span class="hljs-number">.0</span>上线部署<br>           扩展国服跳板机磁盘为<span class="hljs-number">1</span>T<br>           新增上传hourlyccu到S3<br>海外：<br>		   泰国userinfo<br>           HMT激活码<br>内网：<br>		   迁移宁夏调试QA大区<br>           更新wiki内网信息<br>           新增 platform_http_service 部署脚本<br>           部署镜像服<br>           <span class="hljs-number">101</span>大区数据埋点<br>王牌：	 <span class="hljs-number">150</span>大区新增加数据埋点<br>IT：       更新资产统计<br><br><span class="hljs-number">3</span>月<span class="hljs-number">12</span>日：<br>国服：<br>		   spark<br>           重启gamex <span class="hljs-number">2004</span> <span class="hljs-number">3010</span> 机器<br>           线上维护更新gamex<br>           线上维护修复BUG<br>           激活码<br>           扩大国服跳板机磁盘为<span class="hljs-number">200</span>G<br>           部署<span class="hljs-number">200</span> <span class="hljs-number">201</span>渠道提审服<br>海外：<br>		   重启越南线上gamex <span class="hljs-number">6009</span> <span class="hljs-number">6010</span><br>           部署<span class="hljs-number">205</span>gmtools<br>           部署日本渠道提审服<br>内网：<br>		   内网迁移调试<br>           搭建部署镜像服<br>           jumpserver服务器账户权限<br>IT：       停用部分离职wiki账号<br><br><br><span class="hljs-number">3</span>月<span class="hljs-number">3</span>日：<br>国服：<br>		  <span class="hljs-number">201</span>合服（<span class="hljs-number">2085</span> - <span class="hljs-number">2114</span>）<br>           部署<span class="hljs-number">201</span>渠道提审服<br>           <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3264</span> - <span class="hljs-number">3275</span>）<br>           <span class="hljs-number">201</span>大区停服维护部署gamex crossservice<br>           激活码<br>           替换spark<br>海外：	 部署泰国提审服<br>内网：	 单人回档备份及恢复<br>          <span class="hljs-number">156</span>大区公告指回内网并清档<br>          内网迁移宁夏<br>IT：资产统计<br><br><span class="hljs-number">2</span>月<span class="hljs-number">23</span>日：<br>国服：   spark补<span class="hljs-number">2.9</span> - <span class="hljs-number">2.22</span>的数据<br>        新增每日上传clientlog到s3定时任务<br><br>海外：<br>		日本扩大磁盘为<span class="hljs-number">500</span>G<br>        王牌<span class="hljs-number">156</span>大区迁移港澳台跳板机<br><br>内网：<br>		镜像服 <span class="hljs-number">5.1</span><span class="hljs-number">.0</span> 合服测试<br>        补内网<span class="hljs-number">24</span> <span class="hljs-number">25</span>的userinfo<br>        单人回档备份  恢复备份<br>        部署王牌提审服<span class="hljs-number">156</span>大区<br>        调试QA大区crossservice的部署脚本<br><br>IT:    配置双显<br>       客户端提网速<br><br><span class="hljs-number">2</span>月<span class="hljs-number">05</span>日：<br>国服：<br>		  <span class="hljs-number">200</span>大区合服部署 （<span class="hljs-number">1025</span> - <span class="hljs-number">1148</span>）<br>           <span class="hljs-number">201</span>开新服（<span class="hljs-number">2123</span> - <span class="hljs-number">2132</span>）<br>           <span class="hljs-number">200</span>大区开新服 （<span class="hljs-number">1178</span> - <span class="hljs-number">1187</span>）<br>           <span class="hljs-number">202</span>大区合服 （<span class="hljs-number">3049</span> - <span class="hljs-number">3198</span>）<br>           <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3254</span> - <span class="hljs-number">3263</span>）<br>           <span class="hljs-number">5.1</span><span class="hljs-number">.0</span>上线部署<br>           升级ardb版本<br>           线上修复BUG部署维护<br>           国服添加DaysLTV spark<br>海外：日本添加DaysLTV spark<br>内网： 新增server_check部署脚本<br><br><span class="hljs-number">1</span>月<span class="hljs-number">29</span>日：<br>国服：<br>        清理gamex磁盘<br>        激活码<br>        部署渠道提审服<br>        修复kibana multiplay 数据<br>海外：日本userinfo<br>内网：<br>        资产统计<br>        部署镜像服<br>        搭建新的jenkins<br>        镜像服合服测试<br>         调试QA服redisstorage部署脚本<br><br><span class="hljs-number">1</span>月<span class="hljs-number">22</span>日：<br>国服：<br>        激活码<br>        <span class="hljs-number">202</span>开新服（<span class="hljs-number">3250</span> - <span class="hljs-number">3253</span>）<br>        线上维护<br>内网：<br>        镜像服测试三合一 合服<br>        AWS新技术分享会<br>        搭建部署镜像服 <span class="hljs-number">3231</span> - <span class="hljs-number">3235</span><br>海外：<br>        越南激活码<br>        越南数据<br><br><span class="hljs-number">1</span>月<span class="hljs-number">15</span>日：<br>国服线上：<br>        <span class="hljs-number">201</span>开新服（<span class="hljs-number">2118</span><span class="hljs-number">-2122</span>）<br>        kibana 添加 logics_crossservice 的 index<br>        补<span class="hljs-number">202</span>大区部分区服的charge<br>        激活码<br>        扩展线上elasticsearch磁盘<br>        <span class="hljs-number">200</span>大区开新服 （<span class="hljs-number">1173</span> - <span class="hljs-number">1177</span>）<br>内网：<br>        修改gmtools 编译脚本  编译时 添加data文件<br>        搭建部署镜像服 <span class="hljs-number">3097</span> — <span class="hljs-number">3102</span><br>海外：<br>        补越南<span class="hljs-number">15</span> <span class="hljs-number">16</span>号charge数据<br><br><span class="hljs-number">1</span>月<span class="hljs-number">8</span>日：<br> 国服线上：<br>        删除kibana上redisstorage-userinfo的index<br>        删除elasticsearch上redisstorage-userinfo的index<br>        修改<span class="hljs-number">202</span>渠道vivo支付端口<br>        <span class="hljs-number">200</span>大区合服（<span class="hljs-number">1135</span> - <span class="hljs-number">1165</span>）<br>        <span class="hljs-number">202</span>大区合服（<span class="hljs-number">3211</span> - <span class="hljs-number">3230</span>）<br>        修改国服spark的执行方式<br>        国服<span class="hljs-number">500</span>上线部署<br>        <span class="hljs-number">202</span>大区开新服（ <span class="hljs-number">3247</span> - <span class="hljs-number">3249</span> ）<br><br>内网：<br>        部署<span class="hljs-number">100</span>大区gamex解决占用内存问题<br>        <span class="hljs-number">101</span>大区测试部署<span class="hljs-number">2</span>个multiplay<br>        修改QA101大区gamex的启动方式<br><br>海外：<br>        港澳台合服<br>        补<span class="hljs-number">1.3</span> - <span class="hljs-number">1.9</span> 越南数据<br>        补<span class="hljs-number">1.10</span> <span class="hljs-number">1.11</span> 越南充值数据<br><br><br><span class="hljs-number">1</span>月<span class="hljs-number">2</span>日：<br> 国服线上操作：<br>        <span class="hljs-number">200</span>大区新服（ <span class="hljs-number">1168</span> — <span class="hljs-number">1172</span> )<br>        线上删库脚本每周一定时执行任务<br>        激活码<br>        重启线上gamex<br>        部署<span class="hljs-number">200</span>大区渠道测试服<br><br>内网操作：<br>        镜像服导库（ <span class="hljs-number">3211</span> — <span class="hljs-number">3213</span> ）<br>        整理资产统计表格<br>        主干版本升 <span class="hljs-number">5.1</span><span class="hljs-number">.0</span>  并开出 SL500<br>        部署镜像服环境并导账号<br>        更改镜像服实例类型<br><br>海外线上操作：<br>        部署韩国gmtools<br><br><br><span class="hljs-number">12</span>月<span class="hljs-number">25</span>日<br>内网操作：<br>        搭建开发<span class="hljs-number">100</span>大区<br>        镜像服军团体验服部署，在线更改log级别<br><br>国服线上操作：<br>        激活码<br>        <span class="hljs-number">202</span>大区新服（ <span class="hljs-number">3242</span> —— <span class="hljs-number">3246</span> ）<br>        修改测试 kibana  redisstorage_userinfo 为中转模式<br><br>海外线上操作：<br>        关闭日本旧的每日大数据<br>        关闭海外各大区监控的 NoData<br>        港澳台合服维护<br><br>王牌操作：<br>        添加体验服的监控CCU<br>        <span class="hljs-number">156</span>大区清档<br><br>IT相关：<br>        资产统计贴标签<br><br><span class="hljs-number">12</span>月<span class="hljs-number">18</span>日<br>国服线上操作：<br>        <span class="hljs-number">201</span> <span class="hljs-number">202</span>大区进行compactAll<br>        调DynamoDB Mail表<br>        激活码<br>        kibana添加 redisstorage-json-to-es<br>        kibana导入userinfo<br>        全区维护更新gamex<br>        <span class="hljs-number">200</span>大区redis13升配到m4<span class="hljs-number">.4</span>xlarge<br>        全区更新gmtools<br><br>海外线上操作：<br>        海外反作弊的自动发送<br>        港澳台激活码<br>        部署<span class="hljs-number">205</span> <span class="hljs-number">209</span> <span class="hljs-number">207</span>大区的giftsender<br><br>内网操作：<br>        部署军团战体验镜像服并导档<br>        修改部署gatex脚本<br>        修改<span class="hljs-number">10105</span>腾讯UPA测试专用服<br>        userinfo_json上传S3，导入kiabna测试<br><br><span class="hljs-number">12</span>月<span class="hljs-number">11</span>日<br>国服线上操作：<br>        - <span class="hljs-number">202</span>合服部署gamex crossservice（<span class="hljs-number">3001</span> - <span class="hljs-number">3048</span>）<br>        - <span class="hljs-number">203</span>redis-stroage-bilog 部署测试<br>        - kibana添加clientbilog<span class="hljs-number">-203</span>索引<br>        - kibana添加redis-storage-bilog<span class="hljs-number">-203</span>索引<br>        - <span class="hljs-number">202</span>开新服（<span class="hljs-number">3237</span> - <span class="hljs-number">3241</span>）<br>        - 国服<span class="hljs-number">430</span>上线部署<br>        - <span class="hljs-number">200</span>大区部分区服 <span class="hljs-number">203</span>大区导数据库<br>海外线上操作：<br>        - 海外反作弊<br>        - 日本Spark<br>        - 港澳台跳板机磁盘扩容为<span class="hljs-number">200</span>G<br>        - 韩国添加jenkins job tools_run_redisstorage_207<br>内网操作：<br>        - 新增redis_storage_bilog部署<br><br><br><span class="hljs-number">12</span>月<span class="hljs-number">5</span>日<br>国服线上操作：<br>        - 清理<span class="hljs-number">200</span>大区四合一db<br>        - <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1163</span> - <span class="hljs-number">1167</span>）<br>        - 创建m4<span class="hljs-number">.4</span>xlarge实例快照<br>        - 调整线上DynamoDB表容量<br>        - 激活码<br>        - 部署<span class="hljs-number">200</span> <span class="hljs-number">201</span> <span class="hljs-number">202</span>提审服<br>        - 部署<span class="hljs-number">201</span>提审服gmtools<br>        - <span class="hljs-number">3230</span>的proof<br><br>海外线上操作：<br>        - 海外反作弊<br>        - 部署韩国和泰国的gmtools<br>        - 添加日本BDC hourly.py 定时脚本<br>        - 港澳台redisstorage-userinfo替换为jenkins任务<br>        - 港澳台增加<span class="hljs-number">201</span>提审服gmtools的部署脚本<br>        - 泰国线上更新gamex<br>        - 港澳台激活码<br>        - 部署港澳台提审服<br>王牌操作：<br>        - 新增gate部署<br>内网操作：<br>        - 部署镜像服<br>        - QA150大区排错<br>        - 镜像服四合一<br>        - 国服主干YX新增gate部署<br><br><br><span class="hljs-number">11</span>月<span class="hljs-number">27</span>日<br>国服线上操作：<br>        - 替换<span class="hljs-number">11</span>月<span class="hljs-number">17</span>日——<span class="hljs-number">11</span>月<span class="hljs-number">23</span>日的charge数据<br>        - <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1158</span> - <span class="hljs-number">1162</span>）<br>        - <span class="hljs-number">200</span>大区四合一（<span class="hljs-number">1001</span> - <span class="hljs-number">1024</span>）<br>        - <span class="hljs-number">202</span>大区合并数据库<br><br>王牌操作：<br>        - 部署王牌腾讯服<br><br>海外线上操作：<br>        - 海外反作弊<br>        - 部署日本gmtools    <br><br>内网操作：<br>        - 搭建王牌腾讯服<span class="hljs-number">156</span>大区<br>        - 测试Ardb WAL<br>        - 整理wiki出版本注意事项<br>        - 搭建镜像服<span class="hljs-number">3211</span>—<span class="hljs-number">3214</span><br>        - 镜像服导账号<br><br><span class="hljs-number">11</span>月<span class="hljs-number">20</span>日<br>国服线上操作：<br>        - <span class="hljs-number">201</span>开新服（<span class="hljs-number">2108</span> — <span class="hljs-number">2117</span>）<br>        - <span class="hljs-number">202</span>开新服 （<span class="hljs-number">3230</span> — <span class="hljs-number">3236</span>）<br>        - 国服全区维护更新gamex<br>        - 增加一个EMR定时跑SparkPay.py的任务       <br>        - 调整线上Dyname升降值<br>        - 增加一个EMR定时跑SparkLogics3Summary.py的任务<br>        - 增加一个EMR定时跑SparkRetetion的任务<br>        - 全区更新维护<br>        - <span class="hljs-number">203</span>大区合并gamex4008          <br>海外线上操作：<br>        - 解决<span class="hljs-number">209</span>gmtools发公告和时区问题<br>        - 海外反作弊<br>内网操作：<br>        - 发送运营部分区服的 logical log<br>        - 部署镜像服<span class="hljs-number">1001</span>，<span class="hljs-number">1003</span><br>        - 搭建并部署镜像服<span class="hljs-number">1005</span> <span class="hljs-number">1006</span> <span class="hljs-number">1007</span> <span class="hljs-number">1008</span><br><br><br><span class="hljs-number">11</span>月<span class="hljs-number">14</span>日：<br>国服线上操作：<br>        - <span class="hljs-number">201</span>大区线上导数据库操作<br>        - 国服激活码<br>        - 国服上传数据<br>        -线上全区更新gmtools版本<br>        - 国服线上全大区<span class="hljs-number">420</span>上线更新部署<br>        - <span class="hljs-number">200</span>，<span class="hljs-number">201</span>大区更换数据库<br>海外线上操作：<br>        - 部署日本渠道测试服<br>        - 海外全大区gmtools版本更新<br>内网操作：<br>        - 新开分支<br>          <span class="hljs-number">4.2</span><span class="hljs-number">.100</span> HMT <span class="hljs-number">420</span><br>          <span class="hljs-number">4.2</span><span class="hljs-number">.400</span> THA <span class="hljs-number">420</span><br>          <span class="hljs-number">4.2</span><span class="hljs-number">.300</span> KO <span class="hljs-number">420</span><br><br><span class="hljs-number">11</span>月<span class="hljs-number">6</span>日：<br>国服线上操作：<br>        - 创建jenkins任务，ardb数据库的CompactAll测试<br>        - <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1152</span> - <span class="hljs-number">1157</span>）<br>        - <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3227</span> - <span class="hljs-number">3228</span>）<br>        - 国服生成激活码<br>        - <span class="hljs-number">200</span>，<span class="hljs-number">201</span>大区ardb备份添加trickle限速<br>        - <span class="hljs-number">200</span>大区合并数据库redis8<br>        - 部署<span class="hljs-number">200</span>  <span class="hljs-number">201</span> <span class="hljs-number">202</span>大区渠道测试服<br>        - <span class="hljs-number">200</span>大区合并数据库redis6<br>内网操作：<br>        - 新建SL420，部署镜像服<br>        - 镜像服导入测试账号<br>        - Spark<br>        - 运营拉取 pay log  userinfo<br>        - 清理TC磁盘<br><br>海外线上操作：<br>        - 海外反作弊<br><br><span class="hljs-number">10</span>月<span class="hljs-number">30</span>日<br>  国服线上操作：<br>        - 重传上传失败数据<br>        - <span class="hljs-number">201</span>开新服（<span class="hljs-number">2103</span> - <span class="hljs-number">2107</span>）<br>        - 合并<span class="hljs-number">200</span>大区数据库redis10<br>        - 生成激活码<br>        - 拉取userinfo和充值log给运营<br>        - <span class="hljs-number">202</span>大区单服合服维护（<span class="hljs-number">3195</span> - <span class="hljs-number">3210</span>）<br>    内网：<br>        - 搭建并部署<span class="hljs-number">4</span>个镜像服<br>  王牌项目操作：<br>        - 添加并部署<span class="hljs-number">3</span>个王牌御史UWA测试服<br>   海外线上操作：<br>        - 海外反作弊<br>        - TH激活码<br><br><span class="hljs-number">10</span>月<span class="hljs-number">24</span>日<br>    国服线上操作：<br>        - <span class="hljs-number">200</span>大区合服并部署gamex（<span class="hljs-number">1111</span><span class="hljs-number">-1134</span>）<br>        - <span class="hljs-number">200</span>大区导数据库操作（<span class="hljs-number">1005</span> <span class="hljs-number">1007</span>）<br>        - <span class="hljs-number">202</span>大区<span class="hljs-number">203</span>大区更新部署gamex<br>        - <span class="hljs-number">200</span>大区开新服<span class="hljs-number">1147</span><br>        - 国服激活码<br>        - 线上单服维护<br>        - <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1148</span> - <span class="hljs-number">1151</span>）<br><br>    内网操作：<br>        - 搭建并部署线上测试BUG镜像服（<span class="hljs-number">3191</span>和<span class="hljs-number">3193</span>）<br>        - 部署玩家体验服（<span class="hljs-number">200</span>渠道gamex，multiplay）<br>        - 资产统计<br>        - 镜像服测试线上BUG<br>        - 玩家体验服清库并导账号<br><br>    海外线上操作：<br>        - 海外反作弊<br>        - 泰国激活码<br><br><span class="hljs-number">10</span>月<span class="hljs-number">16</span>日：<br>    - 海外反作弊<br>    - 激活码日常<br>        - 国服<br>        - TH<br>    - 给运营国服全部支付log<br>    - 给运营港澳台全部支付log<br>    - 清理国服海外s3上大于<span class="hljs-number">7</span>天的rdb及ardb备份   <br>    - 测试 redis db 二合一<br>    - 部署调试国服提审服<br>    - <span class="hljs-number">201</span>合服（<span class="hljs-number">2065</span><span class="hljs-number">-2084</span>）<br>    - <span class="hljs-number">201</span>开<span class="hljs-number">5</span>个新服（<span class="hljs-number">2098</span><span class="hljs-number">-2102</span>）<br>    - IT相关<br>    - 国服线上维护更新<br>    - <span class="hljs-number">200</span>开新服（<span class="hljs-number">1146</span>）<br>    - <span class="hljs-number">202</span>开新服（<span class="hljs-number">3221</span>）<br>    - 国服及海外load监控<br><br><span class="hljs-number">10</span>月<span class="hljs-number">9</span>日：<br>    - 国庆期间海外反作弊<br>    - 部署泰国的反作弊<br>    - 部署QA镜像服<br>    - 修改国服 HMT KO的kibana账号密码<br>    - 搭建及部署王牌提审服<span class="hljs-number">155</span>大区<br>    - 整理wiki服务器登陆权限文档<br>    - 整理国服及海外跳板机登陆脚本<br><br><span class="hljs-number">9</span>月<span class="hljs-number">25</span>日：<br>  - 激活码日常<br>        - CN<br>        - KO<br>        - HMT<br>        - TH<br>  - 运营 KO  userinfo<br>  - 运营 体验服  guildinfo<br>  - 海外反作弊<br>  - 部署 玩家体验服<br>  - 搭建 部署 回归镜像服<br>  - 日本QA服数更<br>  - 国服全区更新维护<br>  - <span class="hljs-number">202</span>大区合服部署（<span class="hljs-number">3175</span> - <span class="hljs-number">3194</span>）<br>  - 部署日本渠道测试服<br>  - <span class="hljs-number">202</span>开新服 （<span class="hljs-number">3211</span> - <span class="hljs-number">3220</span>）<br>  - 清理全区磁盘<br><br><span class="hljs-number">9</span>月<span class="hljs-number">18</span>日：<br>  - Spark<br>  - HMT端口新规划修改<br>  - HMT线上磁盘扩容<br>  - 泰国渠道测试服增加crossservice<br>  - 激活码日常<br>         - CN<br>         - JAPAN<br>         - TH<br>         - KO<br>  - HMT400线上部署<br>  - 渠道测试服<br>  - KO userinfo<br><br><span class="hljs-number">9</span>月<span class="hljs-number">11</span>日：<br>   - 清理<span class="hljs-number">200</span>大区的redis<br>   - 国服更新部署<br>   - <span class="hljs-number">201</span>大区开新服（<span class="hljs-number">2091</span> - <span class="hljs-number">2097</span>）<br>   - 海外反作弊<br>   - <span class="hljs-number">202</span>大区开新服<br>   - HMT userinfo<br>   - 清理<span class="hljs-number">202</span>大区的redis<br>   - 韩国userinfo<br>   - <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1136</span> - <span class="hljs-number">1145</span>）<br>   - 线上数据备份检查<br>   - <span class="hljs-number">205</span>大区备份的迁移<br>##<br>ansible 开机器脚本，目前可以开机器， role还在调<br>##<br><br><span class="hljs-number">9</span>月<span class="hljs-number">4</span>日：<br>   -  海外反作弊<br>   -  激活码日常<br>   -  镜像服部署<br>   -  海外 csv<br>   -  整理 tc<br>   - <span class="hljs-number">400</span>版本上线更新部署<br>   -  userinfo<br>   - 越南开新服（<span class="hljs-number">11</span><span class="hljs-number">-16</span>）<br><br><span class="hljs-number">8</span>月<span class="hljs-number">28</span>日：<br>   - 激活码日常<br>   - 调整新qa大区<br>   - 镜像服<br>   - 韩国线上更新<br>   - 混服开新服<span class="hljs-number">1130</span><br>   -  <span class="hljs-number">200</span>合服（<span class="hljs-number">1081</span><span class="hljs-number">-1110</span>）<br>   - <span class="hljs-number">200</span>开新服（<span class="hljs-number">1131</span><span class="hljs-number">-1135</span>）<br><br><span class="hljs-number">8</span>月<span class="hljs-number">21</span>:<br>   - 激活码日常<br>   - 国服监控<br>   - 海外反作弊<br>   - <span class="hljs-number">202</span>大区合服（<span class="hljs-number">3161</span><span class="hljs-number">-3174</span>）<br>   - 镜像服<br>   - <span class="hljs-number">200</span>渠道测试服<span class="hljs-number">999</span><br>   -  清理国服报警磁盘<br>   - 升级jenkins<br><br><span class="hljs-number">8</span>月<span class="hljs-number">15</span>日：<br>    - 激活码日常<br>    - <span class="hljs-number">200</span>大区新开<span class="hljs-number">4</span>个新服（<span class="hljs-number">1126</span>—<span class="hljs-number">1129</span>）<br>    - <span class="hljs-number">201</span>（<span class="hljs-number">1123</span>—<span class="hljs-number">1125</span>）单服维护<br>    - <span class="hljs-number">201</span>大区合服（<span class="hljs-number">2041</span>—<span class="hljs-number">2064</span>）<br>    - 准备服务器<span class="hljs-number">1</span>的测试机<br>    - 准备服务器<span class="hljs-number">2</span>的测试机<br><br><span class="hljs-number">8</span>月<span class="hljs-number">8</span>日：<br>    - 激活码日常<br>    - <span class="hljs-number">202</span>大区合服（<span class="hljs-number">3145</span> - <span class="hljs-number">3160</span>）<br>    - 进程占内存监控<br>    - <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3187</span> - <span class="hljs-number">3191</span>）<br>    - <span class="hljs-number">201</span>大区开新服 （<span class="hljs-number">2081</span> - <span class="hljs-number">2085</span>）<br>    - <span class="hljs-number">202</span>大区开新服 （<span class="hljs-number">3192</span> - <span class="hljs-number">3194</span>）<br>    - QA四合一<br><br>脚本编写：<br>[] 每个数据库上面哪个redis db 可以使用 ，哪个不能用<br>[] 告诉你一个redis ip ，需要查出那些gamex 在用它（shardid）<br>[] 给你一个shardid  需要打出使用的哪个redis ip 和 db<br><br><span class="hljs-number">8</span>月<span class="hljs-number">1</span>日：<br>    - 激活码日常<br>    - Jenkins SL340_KO<br>    - 国服更新部署<br>    - 学习装机器<br>    - 学习监控<br>    - 硬核开新服 （<span class="hljs-number">3185</span> - <span class="hljs-number">3186</span>）<br>    - iOS开新服  （<span class="hljs-number">2076</span> - <span class="hljs-number">2080</span>）<br><br><span class="hljs-number">7</span>月<span class="hljs-number">24</span>日：<br>    - <span class="hljs-number">200</span>大区开新服（<span class="hljs-number">1116</span> - <span class="hljs-number">1125</span>）<br>    - 学习部署QA镜像服<br>    - 部署镜像服（<span class="hljs-number">3133</span>，<span class="hljs-number">3134</span>）<br>    - 激活码日常<br>    - <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3176</span> - <span class="hljs-number">3179</span>）<br>    - <span class="hljs-number">202</span>大区更新部署及合服（<span class="hljs-number">3131</span> - <span class="hljs-number">3144</span>）<br>    - 学习内网jenkins的搭建<br>    - 学习使用markdown整理工作文档<br>    - IT相关<br>    - <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3180</span> - <span class="hljs-number">3184</span>）<br><br><span class="hljs-number">7</span>月<span class="hljs-number">19</span>日：<br>    - 激活码日常<br>    - <span class="hljs-number">202</span>开新服（<span class="hljs-number">3171</span> - <span class="hljs-number">3175</span>）<br>    - 学习AWS官方文档<br>    - AWS启动一台实例进行部署<br>    - 国服的更新部署<br><br><span class="hljs-number">7</span>月<span class="hljs-number">10</span>日：<br>    - <span class="hljs-number">201</span>大区开新服（<span class="hljs-number">2066</span> - <span class="hljs-number">2075</span>）<br>    - <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3163</span> - <span class="hljs-number">3170</span>）<br>    - 激活码日常<br>    - 熟悉合服流程<br>    - ardb服务器性能参数统计<br><br><span class="hljs-number">7</span>月<span class="hljs-number">3</span>日：<br>    - 激活码日常<br>    - 学习开新服的步骤<br>    - 学习源码安装Ardb （rocksdb google） ， why   how<br>    - 配合新版本上线    <br>    - 配合准备新同事机器<br>    - 编写ardb playbook            <br>    - <span class="hljs-number">202</span>大区开新服（<span class="hljs-number">3161</span> - <span class="hljs-number">3162</span>）<br><br><span class="hljs-number">6</span>月<span class="hljs-number">26</span>日：<br>    - 安装必要工具软件<br>    - 熟悉Jenkins<br>    - 从gitlab拉取代码<br>    - 研读ansible部署代码<br>    - 看aws官方文档<br>    - 学习如何开新服<br></code></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>harborV1.10.1 基于复制策略同步测试</title>
    <url>/2020/03/06/65_harbor3/</url>
    <content><![CDATA[<p>复制原理： harbor的复制案例是基于harbor的registry复制策略进行设置的<br>双主复制：其实就是复用主从同步实现两个harbor节点之间的双向同步<br>测试环境：使用docker部署启动，两个节点互为主从进行同步</p>
<p>测试过程：<br>CA认证</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[root@VM_0_6_centos ~]# mkdir /data/ssl<br>[root@VM_0_6_centos ~]# cd /data/ssl/<br>[root@VM_0_6_centos ssl]# yum install openssl<br>已加载插件：fastestmirror, langpacks<br>Loading<span class="hljs-built_in"> mirror </span>speeds <span class="hljs-keyword">from</span> cached hostfile<br>epel                                                                      | 5.3 kB  00:00:00<br>extras                                                                    | 2.9 kB  00:00:00<br>os                                                                        | 3.6 kB  00:00:00<br>updates                                                                   | 2.9 kB  00:00:00<br>(1/2): epel/7/x86_64/updateinfo                                           | 1.0 MB  00:00:00<br>(2/2): epel/7/x86_64/primary_db                                           | 6.7 MB  00:00:00<br>软件包 1:openssl-1.0.2k-19.el7.x86_64 已安装并且是最新版本<br>无须任何处理<br>[root@VM_0_6_centos ssl]# openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt<br>Generating a 4096 bit RSA private key<br><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span>.++<br><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span><span class="hljs-built_in">..</span>.++<br>writing new private key <span class="hljs-keyword">to</span> <span class="hljs-string">'ca.key'</span><br>-----<br>You are about <span class="hljs-keyword">to</span> be asked <span class="hljs-keyword">to</span> enter information that will be incorporated<br>into your certificate request.<br>What you are about <span class="hljs-keyword">to</span> enter is what is called a Distinguished Name <span class="hljs-keyword">or</span> a DN.<br>There are quite a few fields but you can leave some blank<br><span class="hljs-keyword">For</span> some fields there will be a<span class="hljs-built_in"> default </span>value,<br><span class="hljs-keyword">If</span> you enter <span class="hljs-string">'.'</span>, the field will be left blank.<br>-----<br>Country Name (2 letter code) [XX]:CN<br>State <span class="hljs-keyword">or</span> Province Name (full name) []:Shenzhen<br>Locality Name (eg, city) [Default City]:Shenzhen<br>Organization Name (eg, company) [Default Company Ltd]:lumitest<br>Organizational Unit Name (eg, section) []:lumitest<br>Common Name (eg, your name <span class="hljs-keyword">or</span> your server<span class="hljs-string">'s hostname) []:www.lumitest.com</span><br><span class="hljs-string">Email Address []:</span><br><span class="hljs-string">[root@VM_0_6_centos ssl]# ls</span><br><span class="hljs-string">ca.crt  ca.key</span><br><span class="hljs-string">[root@VM_0_6_centos ssl]# openssl req -newkey rsa:4096 -nodes -sha256 -keyout www.lumitest.com.key -out www.lumitest.com.csr</span><br><span class="hljs-string">Generating a 4096 bit RSA private key</span><br><span class="hljs-string">.........++</span><br><span class="hljs-string">.....................................................++</span><br><span class="hljs-string">writing new private key to '</span>www.lumitest.com.key<span class="hljs-string">'</span><br><span class="hljs-string">-----</span><br><span class="hljs-string">You are about to be asked to enter information that will be incorporated</span><br><span class="hljs-string">into your certificate request.</span><br><span class="hljs-string">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="hljs-string">There are quite a few fields but you can leave some blank</span><br><span class="hljs-string">For some fields there will be a default value,</span><br><span class="hljs-string">If you enter '</span>.<span class="hljs-string">', the field will be left blank.</span><br><span class="hljs-string">-----</span><br><span class="hljs-string">Country Name (2 letter code) [XX]:CN</span><br><span class="hljs-string">State or Province Name (full name) []:Shenzhen</span><br><span class="hljs-string">Locality Name (eg, city) [Default City]:Shenzhen</span><br><span class="hljs-string">Organization Name (eg, company) [Default Company Ltd]:lumitest</span><br><span class="hljs-string">Organizational Unit Name (eg, section) []:lumitest</span><br><span class="hljs-string">Common Name (eg, your name or your server'</span>s hostname) []:www.lumitest.com<br>Email<span class="hljs-built_in"> Address </span>[]:<br><br>Please enter the following <span class="hljs-string">'extra'</span> attributes<br><span class="hljs-keyword">to</span> be sent with your certificate request<br>A challenge password []:<br>An optional company name []:<br>[root@VM_0_6_centos ssl]# ls<br>ca.crt  ca.key  www.lumitest.com.csr  www.lumitest.com.key<br>[root@VM_0_6_centos ssl]# openssl x509 -req -days 365 -in www.lumitest.com.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out www.lumitest.com.crt<br>Signature ok<br><span class="hljs-attribute">subject</span>=/C=CN/ST=Shenzhen/L=Shenzhen/O=lumitest/OU=lumitest/CN=www.lumitest.com<br>Getting CA Private Key<br>[root@VM_0_6_centos ssl]# ls<br>ca.crt  ca.key  ca.srl  www.lumitest.com.crt  www.lumitest.com.csr  www.lumitest.com.key<br>[root@VM_0_6_centos ssl]# ls /etc/pki/ca-trust/source/anchors/<br>[root@VM_0_6_centos ssl]# cp www.lumitest.com.crt /etc/pki/ca-trust/source/anchors/<br>[root@VM_0_6_centos ssl]# update<br>update-alternatives   updatedb              update-pciids<br>update-ca-trust       update-mime-database<br>[root@VM_0_6_centos ssl]# update-ca-trust enable<br>[root@VM_0_6_centos ssl]# update-ca-trust extract<br><br>[root@VM_0_6_centos ssl]# mkdir /etc/ssl/harbor<br>[root@VM_0_6_centos ssl]# cp www.lumitest.com.crt www.lumitest.com.key /etc/ssl/harbor/<br>[root@VM_0_6_centos ssl]# ls /etc/ssl/harbor/<br>www.lumitest.com.crt  www.lumitest.com.key<br></code></pre></td></tr></table></figure>
<p>查看环境</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>VM_0_6_centos ssl]# sestatus<br>SELinux status:                 disabled<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos ssl]# systemctl status firewalld<br>● firewalld.service - firewalld - dynamic firewall daemon<br>   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)<br>   Active: inactive (dead)<br>     Docs: man:firewalld(<span class="hljs-number">1</span>)<br><br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# docker --version<br>Docker version <span class="hljs-number">1.13</span><span class="hljs-number">.1</span>, build <span class="hljs-number">4</span>ef4b30/<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# yum remove docker \<br>                   docker-client \<br>                   docker-client-latest \<br>                   docker-common \<br>                   docker-latest \<br>                   docker-latest-logrotate \<br>                   docker-logrotate \<br>                   docker-engine<br>已加载插件：fastestmirror, langpacks<br>参数 docker-client-latest 没有匹配<br>参数 docker-latest 没有匹配<br>参数 docker-latest-logrotate 没有匹配<br>参数 docker-logrotate 没有匹配<br>参数 docker-engine 没有匹配<br>正在解决依赖关系<br>--&gt; 正在检查事务<br>---&gt; 软件包 docker.x86_64<span class="hljs-number">.2</span><span class="hljs-number">.1</span><span class="hljs-number">.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos 将被 删除<br>---&gt; 软件包 docker-client.x86_64<span class="hljs-number">.2</span><span class="hljs-number">.1</span><span class="hljs-number">.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos 将被 删除<br>---&gt; 软件包 docker-common.x86_64<span class="hljs-number">.2</span><span class="hljs-number">.1</span><span class="hljs-number">.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos 将被 删除<br>--&gt; 解决依赖关系完成<br><br>依赖关系解决<br><br>=================================================================================================<br> Package             架构         版本                                       源             大小<br>=================================================================================================<br>正在删除:<br> docker              x86_64       <span class="hljs-number">2</span>:<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos         @extras        <span class="hljs-number">65</span> M<br> docker-client       x86_64       <span class="hljs-number">2</span>:<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos         @extras        <span class="hljs-number">13</span> M<br> docker-common       x86_64       <span class="hljs-number">2</span>:<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos         @extras       <span class="hljs-number">4.4</span> k<br><br>事务概要<br>=================================================================================================<br>移除  <span class="hljs-number">3</span> 软件包<br><br>安装大小：<span class="hljs-number">77</span> M<br>是否继续？[y/N]：y<br>Downloading packages:<br>Running transaction check<br>Running transaction test<br>Transaction test succeeded<br>Running transaction<br>  正在删除    : <span class="hljs-number">2</span>:docker<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos.x86_64                             <span class="hljs-number">1</span>/<span class="hljs-number">3</span><br>警告：/etc/sysconfig/docker-storage 已另存为 /etc/sysconfig/docker-storage.rpmsave<br>  正在删除    : <span class="hljs-number">2</span>:docker-client<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos.x86_64                      <span class="hljs-number">2</span>/<span class="hljs-number">3</span><br>  正在删除    : <span class="hljs-number">2</span>:docker-common<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos.x86_64                      <span class="hljs-number">3</span>/<span class="hljs-number">3</span><br>  验证中      : <span class="hljs-number">2</span>:docker-common<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos.x86_64                      <span class="hljs-number">1</span>/<span class="hljs-number">3</span><br>  验证中      : <span class="hljs-number">2</span>:docker<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos.x86_64                             <span class="hljs-number">2</span>/<span class="hljs-number">3</span><br>  验证中      : <span class="hljs-number">2</span>:docker-client<span class="hljs-number">-1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos.x86_64                      <span class="hljs-number">3</span>/<span class="hljs-number">3</span><br><br>删除:<br>  docker.x86_64 <span class="hljs-number">2</span>:<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos<br>  docker-client.x86_64 <span class="hljs-number">2</span>:<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos<br>  docker-common.x86_64 <span class="hljs-number">2</span>:<span class="hljs-number">1.13</span><span class="hljs-number">.1</span><span class="hljs-number">-108.</span>git4ef4b30.el7.centos<br><br>完毕！<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# yum install -y yum-utils \<br>   device-mapper-persistent-data \<br>   lvm2<br>已加载插件：fastestmirror, langpacks<br>Loading mirror speeds <span class="hljs-keyword">from</span> cached hostfile<br>软件包 yum-utils<span class="hljs-number">-1.1</span><span class="hljs-number">.31</span><span class="hljs-number">-52.</span>el7.noarch 已安装并且是最新版本<br>软件包 device-mapper-persistent-data<span class="hljs-number">-0.8</span><span class="hljs-number">.5</span><span class="hljs-number">-1.</span>el7.x86_64 已安装并且是最新版本<br>软件包 <span class="hljs-number">7</span>:lvm2<span class="hljs-number">-2.02</span><span class="hljs-number">.185</span><span class="hljs-number">-2.</span>el7_7<span class="hljs-number">.2</span>.x86_64 已安装并且是最新版本<br>无须任何处理<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# yum-config-manager \<br>     --add-repo \<br>     https:<span class="hljs-comment">//download.docker.com/linux/centos/docker-ce.repo</span><br>已加载插件：fastestmirror, langpacks<br>adding repo <span class="hljs-keyword">from</span>: https:<span class="hljs-comment">//download.docker.com/linux/centos/docker-ce.repo</span><br>grabbing file https:<span class="hljs-comment">//download.docker.com/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br>repo saved to /etc/yum.repos.d/docker-ce.repo<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# yum install docker-ce docker-ce-cli containerd.io<br>已加载插件：fastestmirror, langpacks<br>Loading mirror speeds <span class="hljs-keyword">from</span> cached hostfile<br>docker-ce-stable                                                          | <span class="hljs-number">3.5</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>(<span class="hljs-number">1</span>/<span class="hljs-number">2</span>): docker-ce-stable/x86_64/updateinfo                                 |   <span class="hljs-number">55</span> B  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>(<span class="hljs-number">2</span>/<span class="hljs-number">2</span>): docker-ce-stable/x86_64/primary_db                                 |  <span class="hljs-number">38</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>正在解决依赖关系<br>--&gt; 正在检查事务<br>---&gt; 软件包 containerd.io.x86_64<span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-number">.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7 将被 安装<br>---&gt; 软件包 docker-ce.x86_64<span class="hljs-number">.3</span><span class="hljs-number">.19</span><span class="hljs-number">.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7 将被 安装<br>---&gt; 软件包 docker-ce-cli.x86_64<span class="hljs-number">.1</span><span class="hljs-number">.19</span><span class="hljs-number">.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7 将被 安装<br>--&gt; 解决依赖关系完成<br><br>依赖关系解决<br><br>=================================================================================================<br> Package                架构            版本                     源                         大小<br>=================================================================================================<br>正在安装:<br> containerd.io          x86_64          <span class="hljs-number">1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7           docker-ce-stable           <span class="hljs-number">23</span> M<br> docker-ce              x86_64          <span class="hljs-number">3</span>:<span class="hljs-number">19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7          docker-ce-stable           <span class="hljs-number">24</span> M<br> docker-ce-cli          x86_64          <span class="hljs-number">1</span>:<span class="hljs-number">19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7          docker-ce-stable           <span class="hljs-number">40</span> M<br><br>事务概要<br>=================================================================================================<br>安装  <span class="hljs-number">3</span> 软件包<br><br>总下载量：<span class="hljs-number">87</span> M<br>安装大小：<span class="hljs-number">363</span> M<br>Is <span class="hljs-keyword">this</span> ok [y/d/N]: y<br>Downloading packages:<br>警告：/var/cache/yum/x86_64/<span class="hljs-number">7</span>/docker-ce-stable/packages/containerd.io<span class="hljs-number">-1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7.x86_64.rpm: 头V4 RSA/SHA512 Signature, 密钥 ID <span class="hljs-number">621e9f</span>35: NOKEY<br>containerd.io<span class="hljs-number">-1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7.x86_64.rpm 的公钥尚未安装<br>(<span class="hljs-number">1</span>/<span class="hljs-number">3</span>): containerd.io<span class="hljs-number">-1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7.x86_64.rpm                            |  <span class="hljs-number">23</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">33</span><br>(<span class="hljs-number">2</span>/<span class="hljs-number">3</span>): docker-ce-cli<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64.rpm                             |  <span class="hljs-number">40</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">01</span>:<span class="hljs-number">08</span><br>docker-ce<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64 FAILED                                           MB <span class="hljs-number">418</span>:<span class="hljs-number">34</span>:<span class="hljs-number">55</span> ETA<br>https:<span class="hljs-comment">//download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-19.03.6-3.el7.x86_64.rpm: [Errno 12] Timeout on https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-19.03.6-3.el7.x86_64.rpm: (28, 'Operation too slow. Less than 1000 bytes/sec transferred the last 30 seconds')</span><br>正在尝试其它镜像。<br>docker-ce<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64 FAILED                                          MB <span class="hljs-number">2053</span>:<span class="hljs-number">51</span>:<span class="hljs-number">03</span> ETA<br>https:<span class="hljs-comment">//download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-19.03.6-3.el7.x86_64.rpm: [Errno 12] Timeout on https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-19.03.6-3.el7.x86_64.rpm: (28, 'Operation too slow. Less than 1000 bytes/sec transferred the last 30 seconds')</span><br>正在尝试其它镜像。<br>(<span class="hljs-number">3</span>/<span class="hljs-number">3</span>): docker-ce<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64.rpm                                 |  <span class="hljs-number">24</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">22</span><br>-------------------------------------------------------------------------------------------------<br>总计                                                             <span class="hljs-number">358</span> kB/s |  <span class="hljs-number">87</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">04</span>:<span class="hljs-number">09</span><br>从 https:<span class="hljs-comment">//download.docker.com/linux/centos/gpg 检索密钥</span><br>导入 GPG key <span class="hljs-number">0x621E9F35</span>:<br> 用户ID     : <span class="hljs-string">"Docker Release (CE rpm) &lt;docker@docker.com&gt;"</span><br> 指纹       : <span class="hljs-number">060</span>a <span class="hljs-number">61</span>c5 <span class="hljs-number">1</span>b55 <span class="hljs-number">8</span>a7f <span class="hljs-number">742</span>b <span class="hljs-number">77</span>aa c52f eb6b <span class="hljs-number">621</span>e <span class="hljs-number">9f</span>35<br> 来自       : https:<span class="hljs-comment">//download.docker.com/linux/centos/gpg</span><br>是否继续？[y/N]：y<br>Running transaction check<br>Running transaction test<br>Transaction test succeeded<br>Running transaction<br>  正在安装    : containerd.io<span class="hljs-number">-1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7.x86_64                                          <span class="hljs-number">1</span>/<span class="hljs-number">3</span><br>  正在安装    : <span class="hljs-number">1</span>:docker-ce-cli<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64                                         <span class="hljs-number">2</span>/<span class="hljs-number">3</span><br>  正在安装    : <span class="hljs-number">3</span>:docker-ce<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64                                             <span class="hljs-number">3</span>/<span class="hljs-number">3</span><br>  验证中      : <span class="hljs-number">3</span>:docker-ce<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64                                             <span class="hljs-number">1</span>/<span class="hljs-number">3</span><br>  验证中      : <span class="hljs-number">1</span>:docker-ce-cli<span class="hljs-number">-19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7.x86_64                                         <span class="hljs-number">2</span>/<span class="hljs-number">3</span><br>  验证中      : containerd.io<span class="hljs-number">-1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7.x86_64                                          <span class="hljs-number">3</span>/<span class="hljs-number">3</span><br><br>已安装:<br>  containerd.io.x86_64 <span class="hljs-number">0</span>:<span class="hljs-number">1.2</span><span class="hljs-number">.10</span><span class="hljs-number">-3.2</span>.el7             docker-ce.x86_64 <span class="hljs-number">3</span>:<span class="hljs-number">19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7<br>  docker-ce-cli.x86_64 <span class="hljs-number">1</span>:<span class="hljs-number">19.03</span><span class="hljs-number">.6</span><span class="hljs-number">-3.</span>el7<br><br>完毕！<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# systemctl start docker<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# docker --version<br>Docker version <span class="hljs-number">19.03</span><span class="hljs-number">.6</span>, build <span class="hljs-number">369</span>ce74a3c<br></code></pre></td></tr></table></figure>
<p>配置harbor：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">[root@VM_0_6_centos harbor]# cat harbor.yml<br><span class="hljs-comment"># Configuration file of Harbor</span><br><br><span class="hljs-comment"># The IP address or hostname to access admin UI and registry service.</span><br><span class="hljs-comment"># DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.</span><br>hostname: www.lumitest.com<br><br><span class="hljs-comment"># http related config</span><br>http:<br>  #<span class="hljs-built_in"> port </span><span class="hljs-keyword">for</span> http,<span class="hljs-built_in"> default </span>is 80. <span class="hljs-keyword">If</span> https enabled, this<span class="hljs-built_in"> port </span>will redirect <span class="hljs-keyword">to</span> https port<br>  port: 80<br><br><span class="hljs-comment"># https related config</span><br>https:<br>  # https<span class="hljs-built_in"> port </span><span class="hljs-keyword">for</span> harbor,<span class="hljs-built_in"> default </span>is 443<br>  port: 443<br>  # The path of cert <span class="hljs-keyword">and</span> key files <span class="hljs-keyword">for</span> nginx<br>  certificate: /etc/ssl/harbor/www.lumitest.com.crt<br>  private_key: /etc/ssl/harbor/www.lumitest.com.key<br><br><span class="hljs-comment"># Uncomment external_url if you want to enable external proxy</span><br><span class="hljs-comment"># And when it enabled the hostname will no longer used</span><br><span class="hljs-comment"># external_url: https://reg.mydomain.com:8433</span><br><br><span class="hljs-comment"># The initial password of Harbor admin</span><br><span class="hljs-comment"># It only works in first time to install harbor</span><br><span class="hljs-comment"># Remember Change the admin password from UI after launching Harbor.</span><br>harbor_admin_password: your_passwd<br><br><span class="hljs-comment"># Harbor DB configuration</span><br>database:<br>  # The password <span class="hljs-keyword">for</span> the root<span class="hljs-built_in"> user </span>of Harbor DB. Change this before any production use.<br>  password: your_passwd<br>  # The maximum number of connections <span class="hljs-keyword">in</span> the idle<span class="hljs-built_in"> connection </span>pool. <span class="hljs-keyword">If</span> it &lt;=0, <span class="hljs-literal">no</span> idle connections are retained.<br>  max_idle_conns: 50<br>  # The maximum number of open connections <span class="hljs-keyword">to</span> the database. <span class="hljs-keyword">If</span> it &lt;= 0, then there is <span class="hljs-literal">no</span> limit on the number of open connections.<br>  # Note: the<span class="hljs-built_in"> default </span>number of connections is 100 <span class="hljs-keyword">for</span> postgres.<br>  max_open_conns: 100<br><br><span class="hljs-comment"># The default data volume</span><br>data_volume: /data/registry/<br><br><span class="hljs-comment"># Harbor Storage settings by default is using /data dir on local filesystem</span><br><span class="hljs-comment"># Uncomment storage_service setting If you want to using external storage</span><br><span class="hljs-comment"># storage_service:</span><br><span class="hljs-comment">#   # ca_bundle is the path to the custom root ca certificate, which will be injected into the truststore</span><br><span class="hljs-comment">#   # of registry's and chart repository's containers.  This is usually needed when the user hosts a internal storage with self signed certificate.</span><br><span class="hljs-comment">#   ca_bundle:</span><br><br><span class="hljs-comment">#   # storage backend, default is filesystem, options include filesystem, azure, gcs, s3, swift and oss</span><br><span class="hljs-comment">#   # for more info about this configuration please refer https://docs.docker.com/registry/configuration/</span><br><span class="hljs-comment">#   filesystem:</span><br><span class="hljs-comment">#     maxthreads: 100</span><br><span class="hljs-comment">#   # set disable to true when you want to disable registry redirect</span><br><span class="hljs-comment">#   redirect:</span><br><span class="hljs-comment">#     disabled: false</span><br><br><span class="hljs-comment"># Clair configuration</span><br>clair:<br>  # The interval of clair updaters, the unit is hour, <span class="hljs-builtin-name">set</span> <span class="hljs-keyword">to</span> 0 <span class="hljs-keyword">to</span> <span class="hljs-builtin-name">disable</span> the updaters.<br>  updaters_interval: 12<br><br>jobservice:<br>  # Maximum number of job workers <span class="hljs-keyword">in</span> job service<br>  max_job_workers: 10<br><br>notification:<br>  # Maximum retry count <span class="hljs-keyword">for</span> webhook job<br>  webhook_job_max_retry: 10<br><br>chart:<br>  # Change the value of absolute_url <span class="hljs-keyword">to</span> enabled can <span class="hljs-builtin-name">enable</span> absolute url <span class="hljs-keyword">in</span> chart<br>  absolute_url: disabled<br><br><span class="hljs-comment"># Log configurations</span><br>log:<br>  # options are debug, info, warning, error, fatal<br>  level: info<br>  # configs <span class="hljs-keyword">for</span> logs <span class="hljs-keyword">in</span> local storage<br>  local:<br>    # Log files are rotated log_rotate_count times before being removed. <span class="hljs-keyword">If</span> count is 0, old versions are removed rather than rotated.<br>    rotate_count: 50<br>    # Log files are rotated only <span class="hljs-keyword">if</span> they grow bigger than log_rotate_size bytes. <span class="hljs-keyword">If</span> size is followed by k, the size is assumed <span class="hljs-keyword">to</span> be <span class="hljs-keyword">in</span> kilobytes.<br>    # <span class="hljs-keyword">If</span> the M is used, the size is <span class="hljs-keyword">in</span> megabytes, <span class="hljs-keyword">and</span> <span class="hljs-keyword">if</span> G is used, the size is <span class="hljs-keyword">in</span> gigabytes. So size 100, size 100k, size 100M <span class="hljs-keyword">and</span> size 100G<br>    # are all valid.<br>    rotate_size: 200M<br>    # The directory on your host that store log<br>    location: /var/log/harbor<br><br>  # Uncomment following lines <span class="hljs-keyword">to</span> <span class="hljs-builtin-name">enable</span> external syslog endpoint.<br>  # external_endpoint:<br>  #   # protocol used <span class="hljs-keyword">to</span> transmit log <span class="hljs-keyword">to</span> external endpoint, options is tcp <span class="hljs-keyword">or</span> udp<br>  #   protocol: tcp<br>  #   # The host of external endpoint<br>  #   host: localhost<br>  #   #<span class="hljs-built_in"> Port </span>of external endpoint<br>  #   port: 5140<br><br><span class="hljs-comment">#This attribute is for migrator to detect the version of the .cfg file, DO NOT MODIFY!</span><br>_version: 1.10.0<br><br><span class="hljs-comment"># Uncomment external_database if using external database.</span><br><span class="hljs-comment"># external_database:</span><br><span class="hljs-comment">#   harbor:</span><br><span class="hljs-comment">#     host: harbor_db_host</span><br><span class="hljs-comment">#     port: harbor_db_port</span><br><span class="hljs-comment">#     db_name: harbor_db_name</span><br><span class="hljs-comment">#     username: harbor_db_username</span><br><span class="hljs-comment">#     password: harbor_db_password</span><br><span class="hljs-comment">#     ssl_mode: disable</span><br><span class="hljs-comment">#     max_idle_conns: 2</span><br><span class="hljs-comment">#     max_open_conns: 0</span><br><span class="hljs-comment">#   clair:</span><br><span class="hljs-comment">#     host: clair_db_host</span><br><span class="hljs-comment">#     port: clair_db_port</span><br><span class="hljs-comment">#     db_name: clair_db_name</span><br><span class="hljs-comment">#     username: clair_db_username</span><br><span class="hljs-comment">#     password: clair_db_password</span><br><span class="hljs-comment">#     ssl_mode: disable</span><br><span class="hljs-comment">#   notary_signer:</span><br><span class="hljs-comment">#     host: notary_signer_db_host</span><br><span class="hljs-comment">#     port: notary_signer_db_port</span><br><span class="hljs-comment">#     db_name: notary_signer_db_name</span><br><span class="hljs-comment">#     username: notary_signer_db_username</span><br><span class="hljs-comment">#     password: notary_signer_db_password</span><br><span class="hljs-comment">#     ssl_mode: disable</span><br><span class="hljs-comment">#   notary_server:</span><br><span class="hljs-comment">#     host: notary_server_db_host</span><br><span class="hljs-comment">#     port: notary_server_db_port</span><br><span class="hljs-comment">#     db_name: notary_server_db_name</span><br><span class="hljs-comment">#     username: notary_server_db_username</span><br><span class="hljs-comment">#     password: notary_server_db_password</span><br><span class="hljs-comment">#     ssl_mode: disable</span><br><br><span class="hljs-comment"># Uncomment external_redis if using external Redis server</span><br><span class="hljs-comment"># external_redis:</span><br><span class="hljs-comment">#   host: redis</span><br><span class="hljs-comment">#   port: 6379</span><br><span class="hljs-comment">#   password:</span><br><span class="hljs-comment">#   # db_index 0 is for core, it's unchangeable</span><br><span class="hljs-comment">#   registry_db_index: 1</span><br><span class="hljs-comment">#   jobservice_db_index: 2</span><br><span class="hljs-comment">#   chartmuseum_db_index: 3</span><br><span class="hljs-comment">#   clair_db_index: 4</span><br><br><span class="hljs-comment"># Uncomment uaa for trusting the certificate of uaa instance that is hosted via self-signed cert.</span><br><span class="hljs-comment"># uaa:</span><br><span class="hljs-comment">#   ca_file: /path/to/ca</span><br><br><span class="hljs-comment"># Global proxy</span><br><span class="hljs-comment"># Config http proxy for components, e.g. http://my.proxy.com:3128</span><br><span class="hljs-comment"># Components doesn't need to connect to each others via http proxy.</span><br><span class="hljs-comment"># Remove component from `components` array if want disable proxy</span><br><span class="hljs-comment"># for it. If you want use proxy for replication, MUST enable proxy</span><br><span class="hljs-comment"># for core and jobservice, and set `http_proxy` and `https_proxy`.</span><br><span class="hljs-comment"># Add domain to the `no_proxy` field, when you want disable proxy</span><br><span class="hljs-comment"># for some special registry.</span><br>proxy:<br>  http_proxy:<br>  https_proxy:<br>  # no_proxy endpoints will appended <span class="hljs-keyword">to</span> 127.0.0.1,localhost,.local,.internal,log,db,redis,nginx,core,portal,postgresql,jobservice,registry,registryctl,clair,chartmuseum,notary-server<br>  no_proxy:<br>  components:<br>    - core<br>    - jobservice<br>    - clair<br></code></pre></td></tr></table></figure>
<p>启动：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# ./install.sh --with-notary --with-clair<br><br>[Step <span class="hljs-number">0</span>]: checking <span class="hljs-keyword">if</span> docker <span class="hljs-keyword">is</span> installed ...<br><br>Note: docker version: <span class="hljs-number">19.03</span><span class="hljs-number">.6</span><br><br>[Step <span class="hljs-number">1</span>]: checking docker-compose <span class="hljs-keyword">is</span> installed ...<br><br>Note: docker-compose version: <span class="hljs-number">1.25</span><span class="hljs-number">.4</span><br><br>[Step <span class="hljs-number">2</span>]: loading Harbor images ...<br><span class="hljs-number">47</span>a4bb1cfbc7: Loading layer  <span class="hljs-number">34.26</span>MB/<span class="hljs-number">34.26</span>MB<br>c2d9cf7a4eaf: Loading layer  <span class="hljs-number">9.056</span>MB/<span class="hljs-number">9.056</span>MB<br><span class="hljs-number">32</span>b7eca4f03e: Loading layer   <span class="hljs-number">9.71</span>MB/<span class="hljs-number">9.71</span>MB<br><span class="hljs-number">5</span>d104292391f: Loading layer   <span class="hljs-number">9.71</span>MB/<span class="hljs-number">9.71</span>MB<br>Loaded image: goharbor/clair-adapter-photon:v1<span class="hljs-number">.0</span><span class="hljs-number">.1</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">0039915754</span>c6: Loading layer  <span class="hljs-number">12.83</span>MB/<span class="hljs-number">12.83</span>MB<br><span class="hljs-number">0</span>a4ba5bc8bc2: Loading layer  <span class="hljs-number">49.37</span>MB/<span class="hljs-number">49.37</span>MB<br>Loaded image: goharbor/harbor-jobservice:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br>db95a8bece9e: Loading layer  <span class="hljs-number">78.32</span>MB/<span class="hljs-number">78.32</span>MB<br>f9aa9f9a3393: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br>f0baa86a6ccd: Loading layer   <span class="hljs-number">59.9</span>kB/<span class="hljs-number">59.9</span>kB<br><span class="hljs-number">2</span>b8f0a44b78f: Loading layer  <span class="hljs-number">61.95</span>kB/<span class="hljs-number">61.95</span>kB<br>Loaded image: goharbor/redis-photon:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br>a9f6374f6301: Loading layer   <span class="hljs-number">9.05</span>MB/<span class="hljs-number">9.05</span>MB<br>b3c39a738965: Loading layer  <span class="hljs-number">6.239</span>MB/<span class="hljs-number">6.239</span>MB<br>dce1aa68054e: Loading layer  <span class="hljs-number">16.04</span>MB/<span class="hljs-number">16.04</span>MB<br><span class="hljs-number">612</span>aac9b538e: Loading layer  <span class="hljs-number">28.24</span>MB/<span class="hljs-number">28.24</span>MB<br><span class="hljs-number">8612386f</span>b841: Loading layer  <span class="hljs-number">22.02</span>kB/<span class="hljs-number">22.02</span>kB<br><span class="hljs-number">53883649</span>d694: Loading layer  <span class="hljs-number">50.52</span>MB/<span class="hljs-number">50.52</span>MB<br>Loaded image: goharbor/notary-server-photon:v0<span class="hljs-number">.6</span><span class="hljs-number">.1</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br>f3967aa0de5f: Loading layer  <span class="hljs-number">115.8</span>MB/<span class="hljs-number">115.8</span>MB<br><span class="hljs-number">42f</span>d590be962: Loading layer  <span class="hljs-number">12.14</span>MB/<span class="hljs-number">12.14</span>MB<br><span class="hljs-number">096</span>b03f3e32b: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br>aa66bf3b8224: Loading layer  <span class="hljs-number">49.15</span>kB/<span class="hljs-number">49.15</span>kB<br><span class="hljs-number">8e76391190</span>c9: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br><span class="hljs-number">131573</span>c722d5: Loading layer  <span class="hljs-number">13.02</span>MB/<span class="hljs-number">13.02</span>MB<br>Loaded image: goharbor/clair-photon:v2<span class="hljs-number">.1</span><span class="hljs-number">.1</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">69e43242f</span>f64: Loading layer  <span class="hljs-number">50.39</span>MB/<span class="hljs-number">50.39</span>MB<br><span class="hljs-number">5</span>a3a8e835993: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br><span class="hljs-number">4</span>dff480c159c: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br><span class="hljs-number">2</span>be454a39481: Loading layer   <span class="hljs-number">2.56</span>kB/<span class="hljs-number">2.56</span>kB<br>d6b4877d5c4e: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br><span class="hljs-number">609537197</span>cce: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br>b52d06cad304: Loading layer  <span class="hljs-number">12.29</span>kB/<span class="hljs-number">12.29</span>kB<br>Loaded image: goharbor/harbor-log:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br>badcf9296df7: Loading layer  <span class="hljs-number">9.056</span>MB/<span class="hljs-number">9.056</span>MB<br><span class="hljs-number">8</span>b17ed0102b2: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br><span class="hljs-number">4</span>d1cd50b8d4f: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br><span class="hljs-number">491</span>c41e50d6a: Loading layer  <span class="hljs-number">21.76</span>MB/<span class="hljs-number">21.76</span>MB<br><span class="hljs-number">0101</span>dc4148c7: Loading layer  <span class="hljs-number">22.59</span>MB/<span class="hljs-number">22.59</span>MB<br>Loaded image: goharbor/registry-photon:v2<span class="hljs-number">.7</span><span class="hljs-number">.1</span>-patch<span class="hljs-number">-2819</span><span class="hljs-number">-2553</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">77965</span>b8f534b: Loading layer  <span class="hljs-number">14.61</span>MB/<span class="hljs-number">14.61</span>MB<br><span class="hljs-number">940</span>bf05c9601: Loading layer  <span class="hljs-number">28.24</span>MB/<span class="hljs-number">28.24</span>MB<br><span class="hljs-number">7</span>ca206eb72e3: Loading layer  <span class="hljs-number">22.02</span>kB/<span class="hljs-number">22.02</span>kB<br><span class="hljs-number">9898774</span>a5bad: Loading layer  <span class="hljs-number">49.09</span>MB/<span class="hljs-number">49.09</span>MB<br>Loaded image: goharbor/notary-signer-photon:v0<span class="hljs-number">.6</span><span class="hljs-number">.1</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">86340</span>c56281e: Loading layer  <span class="hljs-number">9.055</span>MB/<span class="hljs-number">9.055</span>MB<br><span class="hljs-number">8</span>ac45c34690f: Loading layer  <span class="hljs-number">42.31</span>MB/<span class="hljs-number">42.31</span>MB<br><span class="hljs-number">4</span>aa70453f992: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br><span class="hljs-number">6</span>cbc6ab111b2: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br>d6d7b70c18b5: Loading layer  <span class="hljs-number">43.14</span>MB/<span class="hljs-number">43.14</span>MB<br>Loaded image: goharbor/chartmuseum-photon:v0<span class="hljs-number">.9</span><span class="hljs-number">.0</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">07</span>efa003923d: Loading layer  <span class="hljs-number">9.056</span>MB/<span class="hljs-number">9.056</span>MB<br><span class="hljs-number">96</span>dd65c291de: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br><span class="hljs-number">802</span>a1397679e: Loading layer  <span class="hljs-number">21.76</span>MB/<span class="hljs-number">21.76</span>MB<br><span class="hljs-number">92</span>c283f6895a: Loading layer  <span class="hljs-number">3.072</span>kB/<span class="hljs-number">3.072</span>kB<br><span class="hljs-number">8</span>b61b91240a6: Loading layer  <span class="hljs-number">8.662</span>MB/<span class="hljs-number">8.662</span>MB<br><span class="hljs-number">1f</span>d753477b6f: Loading layer  <span class="hljs-number">31.24</span>MB/<span class="hljs-number">31.24</span>MB<br>Loaded image: goharbor/harbor-registryctl:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">48</span>cda078e98d: Loading layer  <span class="hljs-number">10.89</span>MB/<span class="hljs-number">10.89</span>MB<br>Loaded image: goharbor/nginx-photon:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">2</span>c00d9af2c3f: Loading layer  <span class="hljs-number">34.31</span>MB/<span class="hljs-number">34.31</span>MB<br><span class="hljs-number">0e4</span>ae15c3d4e: Loading layer  <span class="hljs-number">339.9</span>MB/<span class="hljs-number">339.9</span>MB<br><span class="hljs-number">27810</span>c9ff1a9: Loading layer  <span class="hljs-number">135.2</span>kB/<span class="hljs-number">135.2</span>kB<br>Loaded image: goharbor/harbor-migrator:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">93e0577272</span>a9: Loading layer  <span class="hljs-number">34.24</span>MB/<span class="hljs-number">34.24</span>MB<br>fb3507ff707e: Loading layer  <span class="hljs-number">117.4</span>MB/<span class="hljs-number">117.4</span>MB<br>f59c6315bf8a: Loading layer  <span class="hljs-number">42.32</span>MB/<span class="hljs-number">42.32</span>MB<br><span class="hljs-number">5</span>c5501748347: Loading layer   <span class="hljs-number">2.56</span>kB/<span class="hljs-number">2.56</span>kB<br><span class="hljs-number">3710</span>d94e58dd: Loading layer  <span class="hljs-number">1.536</span>kB/<span class="hljs-number">1.536</span>kB<br><span class="hljs-number">06e0f</span>1585c01: Loading layer  <span class="hljs-number">166.4</span>kB/<span class="hljs-number">166.4</span>kB<br>bf5ac9b9c61c: Loading layer   <span class="hljs-number">3.01</span>MB/<span class="hljs-number">3.01</span>MB<br>Loaded image: goharbor/prepare:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><span class="hljs-number">9</span>ea2dad46741: Loading layer  <span class="hljs-number">10.89</span>MB/<span class="hljs-number">10.89</span>MB<br>b280b9e7ca3b: Loading layer  <span class="hljs-number">7.696</span>MB/<span class="hljs-number">7.696</span>MB<br>a1ce7c1130ee: Loading layer  <span class="hljs-number">223.2</span>kB/<span class="hljs-number">223.2</span>kB<br><span class="hljs-number">3</span>b0492a7358b: Loading layer  <span class="hljs-number">195.1</span>kB/<span class="hljs-number">195.1</span>kB<br>c64d6e6c80dd: Loading layer  <span class="hljs-number">15.36</span>kB/<span class="hljs-number">15.36</span>kB<br>ace4e9064f06: Loading layer  <span class="hljs-number">3.584</span>kB/<span class="hljs-number">3.584</span>kB<br>Loaded image: goharbor/harbor-portal:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br>b74d8257d4e7: Loading layer  <span class="hljs-number">12.83</span>MB/<span class="hljs-number">12.83</span>MB<br><span class="hljs-number">92f</span>141040819: Loading layer   <span class="hljs-number">42.5</span>MB/<span class="hljs-number">42.5</span>MB<br><span class="hljs-number">33</span>c99383fac5: Loading layer  <span class="hljs-number">5.632</span>kB/<span class="hljs-number">5.632</span>kB<br><span class="hljs-number">2</span>bacc160d10f: Loading layer  <span class="hljs-number">40.45</span>kB/<span class="hljs-number">40.45</span>kB<br>f51bed904fbe: Loading layer   <span class="hljs-number">42.5</span>MB/<span class="hljs-number">42.5</span>MB<br>Loaded image: goharbor/harbor-core:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br>a2ffdaaa3434: Loading layer  <span class="hljs-number">63.56</span>MB/<span class="hljs-number">63.56</span>MB<br><span class="hljs-number">5745</span>ac9e0297: Loading layer  <span class="hljs-number">54.44</span>MB/<span class="hljs-number">54.44</span>MB<br>dc1d24cbb1d5: Loading layer  <span class="hljs-number">5.632</span>kB/<span class="hljs-number">5.632</span>kB<br><span class="hljs-number">4280f</span>2f98340: Loading layer  <span class="hljs-number">2.048</span>kB/<span class="hljs-number">2.048</span>kB<br><span class="hljs-number">0f</span>9279b20eec: Loading layer   <span class="hljs-number">2.56</span>kB/<span class="hljs-number">2.56</span>kB<br><span class="hljs-number">8</span>b9162d25131: Loading layer   <span class="hljs-number">2.56</span>kB/<span class="hljs-number">2.56</span>kB<br><span class="hljs-number">50</span>ad7481e5af: Loading layer   <span class="hljs-number">2.56</span>kB/<span class="hljs-number">2.56</span>kB<br><span class="hljs-number">54</span>b809bfb5ec: Loading layer  <span class="hljs-number">10.24</span>kB/<span class="hljs-number">10.24</span>kB<br>Loaded image: goharbor/harbor-db:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span><br><br><br>[Step <span class="hljs-number">3</span>]: preparing environment ...<br><br>[Step <span class="hljs-number">4</span>]: preparing harbor configs ...<br>prepare base dir <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span> to /data/install/harbor<br>Generated configuration file: /config/log/logrotate.conf<br>Generated configuration file: /config/log/rsyslog_docker.conf<br>Generated configuration file: /config/nginx/nginx.conf<br>Generated configuration file: /config/core/env<br>Generated configuration file: /config/core/app.conf<br>Generated configuration file: /config/registry/config.yml<br>Generated configuration file: /config/registryctl/env<br>Generated configuration file: /config/db/env<br>Generated configuration file: /config/jobservice/env<br>Generated configuration file: /config/jobservice/config.yml<br>Generated <span class="hljs-keyword">and</span> saved secret to file: /secret/keys/secretkey<br>Generated certificate, key file: /secret/core/private_key.pem, cert file: /secret/registry/root.crt<br>Generated certificate, key file: /tmp/cert_tmp/notary-signer-ca.key, cert file: /tmp/cert_tmp/notary-signer-ca.crt<br>Generated certificate, key file: /tmp/cert_tmp/notary-signer.key, cert file: /tmp/cert_tmp/notary-signer.crt<br>Copying certs <span class="hljs-keyword">for</span> notary signer<br>Copying nginx configuration file <span class="hljs-keyword">for</span> notary<br>Generated configuration file: /config/nginx/conf.d/notary.upstream.conf<br>Generated configuration file: /config/nginx/conf.d/notary.server.conf<br>Generated configuration file: /config/notary/server-config.postgres.json<br>Generated configuration file: /config/notary/server_env<br>Generated <span class="hljs-keyword">and</span> saved secret to file: /secret/keys/defaultalias<br>Generated configuration file: /config/notary/signer_env<br>Generated configuration file: /config/notary/signer-config.postgres.json<br>Generated configuration file: /config/clair/postgres_env<br>Generated configuration file: /config/clair/config.yaml<br>Generated configuration file: /config/clair/clair_env<br>Generated configuration file: /config/clair-adapter/env<br>Generated configuration file: /compose_location/docker-compose.yml<br>Clean up the input dir<br><br><br><br>[Step <span class="hljs-number">5</span>]: starting Harbor ...<br>Creating network <span class="hljs-string">"harbor_harbor"</span> with the <span class="hljs-keyword">default</span> driver<br>Creating network <span class="hljs-string">"harbor_harbor-clair"</span> with the <span class="hljs-keyword">default</span> driver<br>Creating network <span class="hljs-string">"harbor_harbor-notary"</span> with the <span class="hljs-keyword">default</span> driver<br>Creating network <span class="hljs-string">"harbor_notary-sig"</span> with the <span class="hljs-keyword">default</span> driver<br>Creating harbor-log ... done<br>Creating registry      ... done<br>Creating harbor-portal ... done<br>Creating redis         ... done<br>Creating harbor-db     ... done<br>Creating registryctl   ... done<br>Creating harbor-core   ... done<br>Creating clair         ... done<br>Creating notary-signer ... done<br>Creating clair-adapter     ... done<br>Creating notary-server     ... done<br>Creating nginx             ... done<br>Creating harbor-jobservice ... done<br>✔ ----Harbor has been installed <span class="hljs-keyword">and</span> started successfully.----<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# echo $?<br><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>
<p>配置hosts，登录测试：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql">[root@VM_0_6_centos harbor]# vim /etc/hosts<br>[root@VM_0_6_centos harbor]# docker <span class="hljs-keyword">login</span> -uadmin -pyour_passwd www.lumitest.com<br><span class="hljs-built_in">WARNING</span>! <span class="hljs-keyword">Using</span> <span class="hljs-comment">--password via the CLI is insecure. Use --password-stdin.</span><br><span class="hljs-built_in">WARNING</span>! Your <span class="hljs-keyword">password</span> will be stored <span class="hljs-keyword">unencrypted</span> <span class="hljs-keyword">in</span> /root/.docker/config.json.<br>Configure a credential helper <span class="hljs-keyword">to</span> remove this <span class="hljs-built_in">warning</span>. See<br>https://docs.docker.com/engine/reference/commandline/<span class="hljs-keyword">login</span>/#credentials-store<br><br><span class="hljs-keyword">Login</span> Succeeded<br><br>[root@VM_0_6_centos harbor]# docker tag goharbor/nginx-photon:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span> www.lumitest.com/library/replicate:v1<br>[root@VM_0_6_centos harbor]# docker push www.lumitest.com/library/replicate:v1<br>The push refers <span class="hljs-keyword">to</span> repository [www.lumitest.com/library/replicate]<br><span class="hljs-number">48</span>cda078e98d: Pushed<br><span class="hljs-number">47</span>a4bb1cfbc7: Pushed<br>v1: digest: sha256:<span class="hljs-number">8</span>f900484be88c2f72699996ade92cbcbd84366f386396af0ac093430e6c2f7f2 size: <span class="hljs-number">740</span><br></code></pre></td></tr></table></figure>
<p>证书拷贝到对应主机进行测试：</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><code class="hljs cs">[<span class="hljs-meta">root@VM_0_6_centos harbor</span>]<span class="hljs-meta"># scp /data/ssl/www.lumitest.com.crt root@172.16.0.8:/etc/pki/ca-trust/source/anchors/</span><br>root@<span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8'</span>s password:<br>www.lumitest.com.crt                                                                <span class="hljs-number">100</span>% <span class="hljs-number">1931</span>     <span class="hljs-number">6.5</span>MB/s   <span class="hljs-number">00</span>:<span class="hljs-number">00</span><br><br>[<span class="hljs-meta">root@VM_0_8_centos ~</span>]<span class="hljs-meta"># update-ca-trust enable</span><br>[<span class="hljs-meta">root@VM_0_8_centos ~</span>]<span class="hljs-meta"># update-ca-trust extract</span><br>[<span class="hljs-meta">root@VM_0_8_centos ~</span>]<span class="hljs-meta"># sestatus</span><br>SELinux status:                 disabled<br>[<span class="hljs-meta">root@VM_0_8_centos ~</span>]<span class="hljs-meta"># systemctl status firewalld</span><br>● firewalld.service - firewalld - <span class="hljs-keyword">dynamic</span> firewall daemon<br>   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)<br>   Active: inactive (dead)<br>     Docs: man:firewalld(<span class="hljs-number">1</span>)<br><br>[<span class="hljs-meta">root@VM_0_8_centos ~</span>]<span class="hljs-meta"># docker login -uadmin -pyour_passwd www.lumitest.com</span><br>WARNING! Using --password via the CLI <span class="hljs-keyword">is</span> insecure. Use --password-stdin.<br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> /root/.docker/config.json.<br>Configure a credential helper to <span class="hljs-keyword">remove</span> <span class="hljs-keyword">this</span> warning. See<br>https:<span class="hljs-comment">//docs.docker.com/engine/reference/commandline/login/#credentials-store</span><br><br>Login Succeeded<br></code></pre></td></tr></table></figure>

<p>解决https认证问题<br><a href="http://www.voidcn.com/article/p-bsvymoes-bav.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-bsvymoes-bav.html</a></p>
<figure class="highlight basic"><table><tr><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span># cat /etc/pki/ca-trust/source/anchors/www.lumitest3.<span class="hljs-keyword">com</span>.crt  &gt;&gt; /etc/pki/tls/certs/ca-bundle.crt<br><span class="hljs-symbol">2 </span># systemctl restart docker<br></code></pre></td></tr></table></figure>
<p>自建证书不被信任，不能创建复制策略需关闭https ssl，改为http方式访问，创建仓库管理及复制管理策略进行同步实验<br><a href="https://postimg.cc/fSDmBcMg" target="_blank" rel="noopener"><img src="https://i.postimg.cc/XqyLNLm3/harbor-ms1.png" alt="harbor-ms1.png"></a></p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><code class="hljs coffeescript">[root@VM_0_6_centos harbor]<span class="hljs-comment"># vim /usr/lib/systemd/system/docker.service</span><br>[root@VM_0_6_centos harbor]<span class="hljs-comment"># systemctl daemon-reload</span><br>[root@VM_0_6_centos harbor]<span class="hljs-comment"># systemctl restart docker</span><br><br>[root@VM_0_6_centos harbor]<span class="hljs-comment"># docker-compose stop</span><br>[root@VM_0_6_centos harbor]<span class="hljs-comment"># ./prepare</span><br>[root@VM_0_6_centos harbor]<span class="hljs-comment"># ./install.sh --with-clair</span><br>[root@VM_0_6_centos harbor]<span class="hljs-comment"># docker login 172.16.0.6</span><br>Username: admin<br>Password:<br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.docker/config.json.<br>Configure a credential helper to remove <span class="hljs-keyword">this</span> warning. See<br>https:<span class="hljs-regexp">//docs.docker.com/engine/reference/commandline/login/</span><span class="hljs-comment">#credentials-store</span><br><br>Login Succeeded<br></code></pre></td></tr></table></figure>
<p>分别在06、08上传不同的镜像，测试两边能否同步</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# docker tag goharbor/clair-adapter-photon:v1<span class="hljs-number">.0</span><span class="hljs-number">.1</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span> <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span>/library/test:v2<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# docker push <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span>/library/test:v2<br>The push <span class="hljs-built_in">ref</span>ers to repository [<span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span>/library/test]<br><span class="hljs-number">5</span>d104292391f: Pushed<br><span class="hljs-number">32</span>b7eca4f03e: Pushed<br>c2d9cf7a4eaf: Pushed<br><span class="hljs-number">47</span>a4bb1cfbc7: Pushed<br>v2: digest: sha256:<span class="hljs-number">7f</span>ddfab9a6568fed533870efda90e190eba9eb898832c4986dc0ce3d4aae6057 size: <span class="hljs-number">1162</span><br><br>[<span class="hljs-symbol">root@</span>VM_0_8_centos ~]# docker tag goharbor/harbor-log:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span> <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span>/library/test8:v3<br>[<span class="hljs-symbol">root@</span>VM_0_8_centos ~]# docker push <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span>/library/test8:v3<br>The push <span class="hljs-built_in">ref</span>ers to repository [<span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span>/library/test8]<br>b52d06cad304: Pushed<br><span class="hljs-number">609537197</span>cce: Pushed<br>d6b4877d5c4e: Pushed<br><span class="hljs-number">2</span>be454a39481: Pushed<br><span class="hljs-number">4</span>dff480c159c: Pushed<br><span class="hljs-number">5</span>a3a8e835993: Pushed<br><span class="hljs-number">69e43242f</span>f64: Pushed<br><span class="hljs-number">47</span>a4bb1cfbc7: Pushed<br>v3: digest: sha256:bb104098058f359c2cc25ffcb96810ebb69fc8d50e7290331e949e569c868c5d size: <span class="hljs-number">1984</span><br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/qgT59WRW" target="_blank" rel="noopener"><img src="https://i.postimg.cc/ry02tkLy/harbor-ms2.png" alt="harbor-ms2.png"></a></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# docker tag goharbor/harbor-portal:v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span> <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span>/library/test6:v3<br>[<span class="hljs-symbol">root@</span>VM_0_6_centos harbor]# docker push <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span>/library/test6:v3<br>The push <span class="hljs-built_in">ref</span>ers to repository [<span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.6</span>/library/test6]<br>ace4e9064f06: Pushed<br>c64d6e6c80dd: Pushed<br><span class="hljs-number">3</span>b0492a7358b: Pushed<br>a1ce7c1130ee: Pushed<br>b280b9e7ca3b: Pushed<br><span class="hljs-number">9</span>ea2dad46741: Pushed<br><span class="hljs-number">47</span>a4bb1cfbc7: Mounted <span class="hljs-keyword">from</span> library/test<br>v3: digest: sha256:<span class="hljs-number">5</span>c4481dd645d3c1e52b03e65a7fd4b030e7f8b040ed44a45f66908e24fe3f31a size: <span class="hljs-number">1784</span><br><br>[<span class="hljs-symbol">root@</span>VM_0_8_centos ~]# docker tag goharbor/registry-photon:v2<span class="hljs-number">.7</span><span class="hljs-number">.1</span>-patch<span class="hljs-number">-2819</span><span class="hljs-number">-2553</span>-v1<span class="hljs-number">.10</span><span class="hljs-number">.1</span> <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span>/library/test08:v4<br>[<span class="hljs-symbol">root@</span>VM_0_8_centos ~]# docker push <span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span>/library/test08:v4<br>The push <span class="hljs-built_in">ref</span>ers to repository [<span class="hljs-number">172.16</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span>/library/test08]<br><span class="hljs-number">0101</span>dc4148c7: Pushed<br><span class="hljs-number">491</span>c41e50d6a: Pushed<br><span class="hljs-number">4</span>d1cd50b8d4f: Pushed<br><span class="hljs-number">8</span>b17ed0102b2: Pushed<br>badcf9296df7: Pushed<br><span class="hljs-number">47</span>a4bb1cfbc7: Pushed<br>v4: digest: sha256:<span class="hljs-number">3</span>ee2e7dc7f93d9b922d382b8454fd017288d8eb8fdfdd022ade81e7c9f171723 size: <span class="hljs-number">1576</span><br></code></pre></td></tr></table></figure>
<p><a href="https://postimg.cc/tZhF3SGx" target="_blank" rel="noopener"><img src="https://i.postimg.cc/tTcDHwr2/harbor-ms3.png" alt="harbor-ms3.png"></a></p>
<p>参考文档：<br><a href="https://www.cnblogs.com/breezey/p/9444231.html" target="_blank" rel="noopener">https://www.cnblogs.com/breezey/p/9444231.html</a><br><a href="https://www.cnblogs.com/wangzhangtao/p/12076816.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangzhangtao/p/12076816.html</a><br>双主复制案例：<br><a href="https://www.dazhuanlan.com/2019/10/12/5da0faae2f6a5/" target="_blank" rel="noopener">https://www.dazhuanlan.com/2019/10/12/5da0faae2f6a5/</a><br><a href="https://segmentfault.com/a/1190000020144752" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020144752</a><br>主从复制案例：<br><a href="http://www.imooc.com/article/270050" target="_blank" rel="noopener">http://www.imooc.com/article/270050</a><br><a href="https://www.cnblogs.com/cash-su/p/10103885.html" target="_blank" rel="noopener">https://www.cnblogs.com/cash-su/p/10103885.html</a></p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>容器</tag>
        <tag>文档</tag>
      </tags>
  </entry>
</search>
